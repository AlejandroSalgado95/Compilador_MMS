
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "leftandorleft><equalsnot_equalsleftminus+left*/and arc char circle clear color cte_c cte_f cte_i cte_s do else equals float for global id if int line main minus module not_equals or pendown penup point program read return size then to var void while write\n     PROGRAMA : SEM_ADD_GOTO_MAIN program  SEM_GLOBAL_NAME  SEM_ADD_FUNC ';' PROGRAMA_OPTS PRINCIPAL \n               | SEM_ADD_GOTO_MAIN program  SEM_GLOBAL_NAME  SEM_ADD_FUNC ';' PRINCIPAL \n    \n    PROGRAMA_OPTS :  DEC_V FUNCS\n                    | DEC_V\n                    | FUNCS\n    \n    PRINCIPAL :   SEM_FILL_MAIN_GOTO SEM_MAIN_NAME SEM_ADD_FUNC '(' ')' SEM_ADD_GLOBAL_VARIABLES BLOQUE\n    \n    DEC_V : DEC_V var  TIPO_SIMPLE ':' LISTA_VAR ';' \n            | var TIPO_SIMPLE ':' LISTA_VAR ';'\n    \n    LISTA_VAR : LISTA_VAR ',' VARIABLE_FIX\n               | VARIABLE_FIX\n    \n    TIPO_SIMPLE : int \n                 | float \n                 | char\n    \n    FUNCS :  FUNCS FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC '(' ')' SEM_ADD_GLOBAL_VARIABLES BLOQUE  SEM_ENDFUNC\n           | FUNCS FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC '(' PARAMS ')' SEM_ADD_GLOBAL_VARIABLES BLOQUE  SEM_ENDFUNC\n           | FUNCS FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC '(' PARAMS ')' DEC_V SEM_ADD_GLOBAL_VARIABLES BLOQUE   SEM_ENDFUNC\n           | FUNCS FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC '(' ')' DEC_V SEM_ADD_GLOBAL_VARIABLES BLOQUE  SEM_ENDFUNC\n           | FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC '(' ')' SEM_ADD_GLOBAL_VARIABLES BLOQUE  SEM_ENDFUNC \n           | FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC '(' PARAMS ')' SEM_ADD_GLOBAL_VARIABLES BLOQUE  SEM_ENDFUNC \n           | FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC '(' PARAMS ')' DEC_V SEM_ADD_GLOBAL_VARIABLES BLOQUE  SEM_ENDFUNC \n           | FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC '(' ')' DEC_V SEM_ADD_GLOBAL_VARIABLES BLOQUE  SEM_ENDFUNC \n\n    \n    FUNC_TYPES :  char\n                 | float \n                 | int\n                 | void\n    \n    PARAMS : PARAMS ',' TIPO_SIMPLE PARAM_NAME\n            | TIPO_SIMPLE PARAM_NAME\n    \n  PARAM_NAME : id\n  \n    VARIABLE_FIX : id '[' cte_i ']' \n                  | id\n    \n    VARIABLE : SEM_ID_FOR_ARRAY '[' EXPRESION SEM_CHECK_ARRAY ']' \n              | id\n    \n  SEM_ID_FOR_ARRAY : id\n    \n  SEM_CHECK_ARRAY : \n  \n    BLOQUE : '{' LOOP_ESTATUTO return EXPRESION SEM_VERIFY_RETURN_FUNC ';' '}' \n              | '{' LOOP_ESTATUTO '}' \n              | '{' return EXPRESION SEM_VERIFY_RETURN_FUNC ';' '}' \n              | '{' '}'\n    \n    LOOP_ESTATUTO : LOOP_ESTATUTO ESTATUTO \n                    | ESTATUTO\n    \n    EXPRESION :  EXPRESION SEM_PENDING_LOGIC_OP  and  SEM_ADD_AND  EXP_R  SEM_PENDING_LOGIC_OP\n                | EXPRESION SEM_PENDING_LOGIC_OP  or  SEM_ADD_OR   EXP_R  SEM_PENDING_LOGIC_OP\n                | EXP_R \n    \n    EXP_R :  EXP_A '>' SEM_ADD_GREATER_THAN   EXP_A   SEM_PENDING_REL_OP\n            | EXP_A '<' SEM_ADD_LESS_THAN   EXP_A   SEM_PENDING_REL_OP\n            | EXP_A equals SEM_ADD_EQUALS_TO   EXP_A    SEM_PENDING_REL_OP\n            | EXP_A not_equals SEM_ADD_NOT_EQUALS_TO   EXP_A   SEM_PENDING_REL_OP\n            | EXP_A \n    \n    EXP_A :  EXP_A SEM_PENDING_EXPA_OP '+' SEM_ADD_PLUS TERMINO SEM_PENDING_EXPA_OP\n            | EXP_A SEM_PENDING_EXPA_OP minus SEM_ADD_MINUS TERMINO SEM_PENDING_EXPA_OP\n            | TERMINO \n    \n    TERMINO : TERMINO SEM_PENDING_TERMINO_OP '*' SEM_ADD_TIMES  FACTOR  SEM_PENDING_TERMINO_OP\n             | TERMINO SEM_PENDING_TERMINO_OP '/' SEM_ADD_DIVISION  FACTOR  SEM_PENDING_TERMINO_OP\n             | FACTOR \n    \n    ESTATUTO : ASIGNACION ';' \n              | CONDICION \n              | WHILE \n              | FOR \n              |  '/' SEM_MUST_BE_VOID_CALL LLAMADA ';' \n              | LECTURA ';'  \n              | ESCRITURA ';' \n              | LLAMADA_BI ';'\n    \n    FACTOR : LLAMADA \n            | CTE  \n            | VARIABLE \n            | '(' SEM_ADD_FONDO_FALSO EXPRESION ')' SEM_REMOVE_FONDO_FALSO\n    \n    CTE : cte_i \n         | cte_f \n         | cte_c\n    \n    LLAMADA :   SEM_VERIFY_FUNC_CALL '(' SEM_ADD_FONDO_FALSO LLAMADA_OPTS SEM_RESET_PARAM_COUNT ')' SEM_REMOVE_FONDO_FALSO SEM_ADD_GOSUB\n             |  SEM_VERIFY_FUNC_CALL '(' ')' SEM_ADD_GOSUB\n    \n    LLAMADA_OPTS : LLAMADA_OPTS ',' EXPRESION SEM_VERIFY_PARAM\n                 | EXPRESION SEM_VERIFY_PARAM\n    \n    ASIGNACION : VARIABLE '=' SEM_ADD_EQUALS EXPRESION SEM_PENDING_ASSIGNATION_OP\n    \n    CONDICION : if '(' EXPRESION ')' SEM_ADD_GOTOF then BLOQUE SEM_FILL_GOTO_ANYKIND \n               | if '(' EXPRESION ')' SEM_ADD_GOTOF then BLOQUE else SEM_ADD_GOTO_SIMPLE BLOQUE SEM_FILL_GOTO_ANYKIND\n    \n    WHILE : while  SEM_ADD_COND_INDEX '(' EXPRESION ')' SEM_ADD_GOTOF do BLOQUE SEM_ADD_GOTO_SIMPLE SEM_FILL_GOTO_COND_INDEX\n    \n    FOR : for ASIGNACION to SEM_ADD_COND_INDEX EXPRESION SEM_ADD_GOTOV do BLOQUE SEM_ADD_GOTO_SIMPLE SEM_FILL_GOTO_COND_INDEX\n    \n    LECTURA : read '(' LECTURA_OPTS ')'\n    \n    LECTURA_OPTS : LECTURA_OPTS ',' VARIABLE SEM_ADD_READ\n                  |  VARIABLE SEM_ADD_READ\n    \n    ESCRITURA : write '(' ESCRITURA_OPTS ')'\n    \n    ESCRITURA_OPTS :   ESCRITURA_OPTS ',' SEM_ADD_PRINT_CTE_S\n                       | ESCRITURA_OPTS ',' EXPRESION SEM_ADD_PRINT\n                       | SEM_ADD_PRINT_CTE_S \n                       | EXPRESION SEM_ADD_PRINT\n    \n    LLAMADA_BI :   POINT \n                 | CIRCLE\n                 | PENUP\n                 | PENDOWN \n                 | COLOR \n                 | SIZE \n                 | CLEAR\n                 | LINE\n                 | ARC       \n    \n    CLEAR : clear '(' ')' DO_CLEAR\n    \n    POINT : point '(' EXPRESION ',' EXPRESION ')' DRAW_POINT\n    \n    CIRCLE : circle '(' EXPRESION ')' DRAW_CIRCLE\n    \n    LINE : line '(' EXPRESION ',' EXPRESION ',' EXPRESION ',' EXPRESION ')' DRAW_LINE\n    \n    ARC : arc '(' EXPRESION ',' EXPRESION ')' DRAW_ARC\n    \n    PENUP : penup '(' ')' DO_PENUP\n    \n    PENDOWN : pendown '(' ')' DO_PENDOWN\n    \n    COLOR : color '(' DO_COLOR ')' \n    \n    SIZE : size '(' EXPRESION ')' DO_SIZE\n    \n    SEM_GLOBAL_NAME : id\n  \n    SEM_MAIN_NAME : main\n  \n    SEM_FUNC_NAME : id\n  \n  SEM_ADD_FUNC : \n  \n  SEM_ADD_GLOBAL_VARIABLES : \n  \n  SEM_ADD_PLUS : \n  \n  SEM_ADD_MINUS : \n  \n  SEM_ADD_TIMES : \n  \n  SEM_ADD_DIVISION : \n  \n  SEM_ADD_EQUALS : \n  \n  SEM_ADD_FONDO_FALSO : \n  \n  SEM_REMOVE_FONDO_FALSO : \n  \n  SEM_ADD_GREATER_THAN : \n  \n  SEM_ADD_LESS_THAN : \n  \n  SEM_ADD_EQUALS_TO : \n  \n  SEM_ADD_NOT_EQUALS_TO : \n  \n  SEM_ADD_AND : \n  \n  SEM_ADD_OR : \n  \n  SEM_ADD_GOTOF : \n  \n  SEM_FILL_GOTO_ANYKIND : \n  \n    SEM_FILL_MAIN_GOTO : \n  \n  SEM_ADD_GOTO_SIMPLE : \n  \n  SEM_ADD_COND_INDEX : \n  \n  SEM_FILL_GOTO_COND_INDEX : \n  \n  SEM_ADD_GOTOV : \n  \n  SEM_ADD_GOTO_MAIN : \n  \n  SEM_ENDFUNC : \n  \n    SEM_VERIFY_FUNC_CALL : id \n    \n    SEM_VERIFY_PARAM :\n    \n    SEM_RESET_PARAM_COUNT :\n    \n    SEM_ADD_GOSUB :\n    \n    SEM_VERIFY_RETURN_FUNC :\n    \n    SEM_MUST_BE_VOID_CALL :\n    \n    SEM_ADD_PRINT :\n    \n    SEM_ADD_PRINT_CTE_S : cte_s\n    \n    SEM_ADD_READ : \n    \n  SEM_PENDING_EXPA_OP : \n  \n  SEM_PENDING_TERMINO_OP : \n  \n  SEM_PENDING_ASSIGNATION_OP : \n  \n  SEM_PENDING_REL_OP : \n  \n  SEM_PENDING_LOGIC_OP : \n  \n  DRAW_POINT :\n  \n  DRAW_CIRCLE :\n  \n  DRAW_LINE :\n  \n  DRAW_ARC :\n  \n  DO_PENUP :\n  \n  DO_PENDOWN :\n  \n  DO_COLOR : cte_s\n  \n  DO_CLEAR :\n  \n  DO_SIZE :\n  "
    
_lr_action_items = {'program':([0,2,],[-130,3,]),'$end':([1,9,19,60,74,120,245,273,],[0,-2,-1,-6,-38,-36,-37,-35,]),'id':([3,26,27,28,29,31,33,36,47,57,61,72,73,74,75,77,78,79,80,87,114,119,120,121,130,136,137,138,139,140,141,142,145,146,147,148,149,153,155,156,169,170,171,172,175,176,179,181,182,208,209,210,211,212,213,214,215,216,217,219,221,225,227,230,233,240,241,245,246,247,252,253,254,255,273,286,294,304,312,314,315,316,319,320,322,323,324,326,],[5,-11,-12,-13,35,35,41,41,41,68,100,100,135,-38,-40,-56,-57,-58,-137,100,68,135,-36,-39,-115,-55,178,-60,-61,-62,-114,135,100,135,135,135,135,135,135,135,-117,-118,-119,-120,135,-115,135,135,-127,-121,-122,135,135,135,135,-110,-111,-112,-113,135,-59,135,100,135,135,135,135,-37,135,135,135,135,135,135,-35,135,135,-124,-75,-126,-126,135,-128,-128,-124,-77,-78,-76,]),';':([4,5,6,39,40,41,43,53,62,76,81,82,83,90,91,92,93,94,95,96,97,98,122,123,124,125,126,127,128,129,132,133,134,135,166,167,177,192,193,197,206,220,222,226,229,234,235,236,237,238,239,248,249,250,251,256,259,260,267,269,270,274,275,276,277,278,279,280,281,282,283,284,293,295,296,297,298,299,300,301,302,307,309,310,317,325,327,],[-108,-105,7,46,-10,-30,50,-9,-29,136,138,139,140,-87,-88,-89,-90,-91,-92,-93,-94,-95,-136,-43,-48,-51,-54,-63,-64,-65,-67,-68,-69,-32,-136,207,221,-150,-151,-153,244,-135,-143,-79,-82,-147,-101,-102,-103,-154,-96,-144,-144,-144,-144,-116,-71,-74,-31,-98,-104,-145,-145,-44,-45,-46,-47,-141,-141,-142,-142,-66,-146,-149,-41,-42,-49,-50,-52,-53,-116,-97,-100,-135,-70,-148,-99,]),'var':([7,10,46,50,55,58,64,65,70,71,113,118,],[13,21,-8,-7,13,13,21,13,21,13,21,21,]),'main':([7,8,10,11,12,20,46,50,74,110,115,120,157,158,159,162,163,164,200,201,202,203,204,205,242,243,245,273,],[-125,-125,-4,-5,24,-3,-8,-7,-38,-131,-131,-36,-18,-131,-131,-14,-131,-131,-21,-19,-131,-17,-15,-131,-20,-16,-37,-35,]),'char':([7,10,11,13,20,21,46,49,50,51,66,74,110,115,120,157,158,159,162,163,164,200,201,202,203,204,205,242,243,245,273,],[15,15,15,28,15,28,-8,28,-7,28,28,-38,-131,-131,-36,-18,-131,-131,-14,-131,-131,-21,-19,-131,-17,-15,-131,-20,-16,-37,-35,]),'float':([7,10,11,13,20,21,46,49,50,51,66,74,110,115,120,157,158,159,162,163,164,200,201,202,203,204,205,242,243,245,273,],[16,16,16,27,16,27,-8,27,-7,27,27,-38,-131,-131,-36,-18,-131,-131,-14,-131,-131,-21,-19,-131,-17,-15,-131,-20,-16,-37,-35,]),'int':([7,10,11,13,20,21,46,49,50,51,66,74,110,115,120,157,158,159,162,163,164,200,201,202,203,204,205,242,243,245,273,],[17,17,17,26,17,26,-8,26,-7,26,26,-38,-131,-131,-36,-18,-131,-131,-14,-131,-131,-21,-19,-131,-17,-15,-131,-20,-16,-37,-35,]),'void':([7,10,11,20,46,50,74,110,115,120,157,158,159,162,163,164,200,201,202,203,204,205,242,243,245,273,],[18,18,18,18,-8,-7,-38,-131,-131,-36,-18,-131,-131,-14,-131,-131,-21,-19,-131,-17,-15,-131,-20,-16,-37,-35,]),'module':([14,15,16,17,18,22,],[29,-22,-23,-24,-25,31,]),'(':([23,24,32,34,35,37,42,44,73,85,86,88,89,101,102,103,104,105,106,107,108,109,119,130,131,135,141,142,143,146,147,148,149,153,155,156,169,170,171,172,175,176,178,179,181,182,208,209,210,211,212,213,214,215,216,217,219,225,230,233,240,241,246,247,252,253,254,255,286,294,316,],[-108,-106,38,-108,-107,-108,49,51,130,142,-127,145,146,148,149,150,151,152,153,154,155,156,130,-115,176,-132,-114,130,181,130,130,130,130,130,130,130,-117,-118,-119,-120,130,-115,-132,130,130,-127,-121,-122,130,130,130,130,-110,-111,-112,-113,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,]),':':([25,26,27,28,30,],[33,-11,-12,-13,36,]),')':([38,49,51,56,59,67,68,100,123,124,125,126,127,128,129,132,133,134,135,150,151,154,161,176,180,183,184,185,186,187,188,191,194,195,196,218,220,224,228,231,248,249,250,251,256,257,258,259,264,265,266,267,268,272,274,275,276,277,278,279,280,281,282,283,284,285,287,291,292,296,297,298,299,300,301,302,303,310,311,317,321,],[45,55,58,65,71,-27,-28,-32,-43,-48,-51,-54,-63,-64,-65,-67,-68,-69,-32,192,193,197,-26,220,223,226,-140,229,-85,-138,-139,234,237,-152,238,256,-135,262,-81,-86,-144,-144,-144,-144,-116,-134,-133,-71,-140,-83,-138,-31,293,295,-145,-145,-44,-45,-46,-47,-141,-141,-142,-142,-66,302,-73,-80,-84,-41,-42,-49,-50,-52,-53,-116,-133,-135,-72,-70,325,]),',':([39,40,41,43,53,56,59,62,67,68,100,123,124,125,126,127,128,129,132,133,134,135,161,183,184,185,186,187,188,190,198,199,220,228,231,248,249,250,251,256,257,258,259,264,265,266,267,271,274,275,276,277,278,279,280,281,282,283,284,287,291,292,296,297,298,299,300,301,302,303,308,310,311,317,],[47,-10,-30,47,-9,66,66,-29,-27,-28,-32,-43,-48,-51,-54,-63,-64,-65,-67,-68,-69,-32,-26,227,-140,230,-85,-138,-139,233,240,241,-135,-81,-86,-144,-144,-144,-144,-116,286,-133,-71,-140,-83,-138,-31,294,-145,-145,-44,-45,-46,-47,-141,-141,-142,-142,-66,-73,-80,-84,-41,-42,-49,-50,-52,-53,-116,-133,316,-135,-72,-70,]),'[':([41,99,100,135,],[48,147,-33,-33,]),'{':([45,46,50,52,55,58,63,64,65,69,70,71,111,112,113,116,117,118,160,165,288,305,306,313,318,],[-109,-8,-7,61,-109,-109,61,-109,-109,61,-109,-109,61,61,-109,61,61,-109,61,61,61,61,61,-126,61,]),'cte_i':([48,73,119,130,141,142,146,147,148,149,153,155,156,169,170,171,172,175,176,179,181,182,208,209,210,211,212,213,214,215,216,217,219,225,230,233,240,241,246,247,252,253,254,255,286,294,316,],[54,132,132,-115,-114,132,132,132,132,132,132,132,132,-117,-118,-119,-120,132,-115,132,132,-127,-121,-122,132,132,132,132,-110,-111,-112,-113,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,]),']':([54,123,124,125,126,127,128,129,132,133,134,135,189,220,232,248,249,250,251,256,259,267,274,275,276,277,278,279,280,281,282,283,284,296,297,298,299,300,301,302,310,317,],[62,-43,-48,-51,-54,-63,-64,-65,-67,-68,-69,-32,-34,-135,267,-144,-144,-144,-144,-116,-71,-31,-145,-145,-44,-45,-46,-47,-141,-141,-142,-142,-66,-41,-42,-49,-50,-52,-53,-116,-135,-70,]),'return':([61,72,74,75,77,78,79,120,121,136,138,139,140,221,245,273,304,312,314,315,319,320,322,323,324,326,],[73,119,-38,-40,-56,-57,-58,-36,-39,-55,-60,-61,-62,-59,-37,-35,-124,-75,-126,-126,-128,-128,-124,-77,-78,-76,]),'}':([61,72,74,75,77,78,79,120,121,136,138,139,140,207,221,244,245,273,304,312,314,315,319,320,322,323,324,326,],[74,120,-38,-40,-56,-57,-58,-36,-39,-55,-60,-61,-62,245,-59,273,-37,-35,-124,-75,-126,-126,-128,-128,-124,-77,-78,-76,]),'/':([61,72,74,75,77,78,79,120,121,125,126,127,128,129,132,133,134,135,136,138,139,140,174,220,221,245,256,259,267,273,280,281,282,283,284,300,301,302,304,310,312,314,315,317,319,320,322,323,324,326,],[80,80,-38,-40,-56,-57,-58,-36,-39,-142,-54,-63,-64,-65,-67,-68,-69,-32,-55,-60,-61,-62,217,-135,-59,-37,-116,-71,-31,-35,-142,-142,-142,-142,-66,-52,-53,-116,-124,-135,-75,-126,-126,-70,-128,-128,-124,-77,-78,-76,]),'if':([61,72,74,75,77,78,79,120,121,136,138,139,140,221,245,273,304,312,314,315,319,320,322,323,324,326,],[85,85,-38,-40,-56,-57,-58,-36,-39,-55,-60,-61,-62,-59,-37,-35,-124,-75,-126,-126,-128,-128,-124,-77,-78,-76,]),'while':([61,72,74,75,77,78,79,120,121,136,138,139,140,221,245,273,304,312,314,315,319,320,322,323,324,326,],[86,86,-38,-40,-56,-57,-58,-36,-39,-55,-60,-61,-62,-59,-37,-35,-124,-75,-126,-126,-128,-128,-124,-77,-78,-76,]),'for':([61,72,74,75,77,78,79,120,121,136,138,139,140,221,245,273,304,312,314,315,319,320,322,323,324,326,],[87,87,-38,-40,-56,-57,-58,-36,-39,-55,-60,-61,-62,-59,-37,-35,-124,-75,-126,-126,-128,-128,-124,-77,-78,-76,]),'read':([61,72,74,75,77,78,79,120,121,136,138,139,140,221,245,273,304,312,314,315,319,320,322,323,324,326,],[88,88,-38,-40,-56,-57,-58,-36,-39,-55,-60,-61,-62,-59,-37,-35,-124,-75,-126,-126,-128,-128,-124,-77,-78,-76,]),'write':([61,72,74,75,77,78,79,120,121,136,138,139,140,221,245,273,304,312,314,315,319,320,322,323,324,326,],[89,89,-38,-40,-56,-57,-58,-36,-39,-55,-60,-61,-62,-59,-37,-35,-124,-75,-126,-126,-128,-128,-124,-77,-78,-76,]),'point':([61,72,74,75,77,78,79,120,121,136,138,139,140,221,245,273,304,312,314,315,319,320,322,323,324,326,],[101,101,-38,-40,-56,-57,-58,-36,-39,-55,-60,-61,-62,-59,-37,-35,-124,-75,-126,-126,-128,-128,-124,-77,-78,-76,]),'circle':([61,72,74,75,77,78,79,120,121,136,138,139,140,221,245,273,304,312,314,315,319,320,322,323,324,326,],[102,102,-38,-40,-56,-57,-58,-36,-39,-55,-60,-61,-62,-59,-37,-35,-124,-75,-126,-126,-128,-128,-124,-77,-78,-76,]),'penup':([61,72,74,75,77,78,79,120,121,136,138,139,140,221,245,273,304,312,314,315,319,320,322,323,324,326,],[103,103,-38,-40,-56,-57,-58,-36,-39,-55,-60,-61,-62,-59,-37,-35,-124,-75,-126,-126,-128,-128,-124,-77,-78,-76,]),'pendown':([61,72,74,75,77,78,79,120,121,136,138,139,140,221,245,273,304,312,314,315,319,320,322,323,324,326,],[104,104,-38,-40,-56,-57,-58,-36,-39,-55,-60,-61,-62,-59,-37,-35,-124,-75,-126,-126,-128,-128,-124,-77,-78,-76,]),'color':([61,72,74,75,77,78,79,120,121,136,138,139,140,221,245,273,304,312,314,315,319,320,322,323,324,326,],[105,105,-38,-40,-56,-57,-58,-36,-39,-55,-60,-61,-62,-59,-37,-35,-124,-75,-126,-126,-128,-128,-124,-77,-78,-76,]),'size':([61,72,74,75,77,78,79,120,121,136,138,139,140,221,245,273,304,312,314,315,319,320,322,323,324,326,],[106,106,-38,-40,-56,-57,-58,-36,-39,-55,-60,-61,-62,-59,-37,-35,-124,-75,-126,-126,-128,-128,-124,-77,-78,-76,]),'clear':([61,72,74,75,77,78,79,120,121,136,138,139,140,221,245,273,304,312,314,315,319,320,322,323,324,326,],[107,107,-38,-40,-56,-57,-58,-36,-39,-55,-60,-61,-62,-59,-37,-35,-124,-75,-126,-126,-128,-128,-124,-77,-78,-76,]),'line':([61,72,74,75,77,78,79,120,121,136,138,139,140,221,245,273,304,312,314,315,319,320,322,323,324,326,],[108,108,-38,-40,-56,-57,-58,-36,-39,-55,-60,-61,-62,-59,-37,-35,-124,-75,-126,-126,-128,-128,-124,-77,-78,-76,]),'arc':([61,72,74,75,77,78,79,120,121,136,138,139,140,221,245,273,304,312,314,315,319,320,322,323,324,326,],[109,109,-38,-40,-56,-57,-58,-36,-39,-55,-60,-61,-62,-59,-37,-35,-124,-75,-126,-126,-128,-128,-124,-77,-78,-76,]),'cte_f':([73,119,130,141,142,146,147,148,149,153,155,156,169,170,171,172,175,176,179,181,182,208,209,210,211,212,213,214,215,216,217,219,225,230,233,240,241,246,247,252,253,254,255,286,294,316,],[133,133,-115,-114,133,133,133,133,133,133,133,133,-117,-118,-119,-120,133,-115,133,133,-127,-121,-122,133,133,133,133,-110,-111,-112,-113,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,]),'cte_c':([73,119,130,141,142,146,147,148,149,153,155,156,169,170,171,172,175,176,179,181,182,208,209,210,211,212,213,214,215,216,217,219,225,230,233,240,241,246,247,252,253,254,255,286,294,316,],[134,134,-115,-114,134,134,134,134,134,134,134,134,-117,-118,-119,-120,134,-115,134,134,-127,-121,-122,134,134,134,134,-110,-111,-112,-113,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,]),'else':([74,120,245,273,304,],[-38,-36,-37,-35,313,]),'=':([84,100,267,],[141,-32,-31,]),'and':([122,123,124,125,126,127,128,129,132,133,134,135,166,168,180,187,189,190,191,196,198,199,218,220,222,224,248,249,250,251,256,258,259,263,266,267,268,271,272,274,275,276,277,278,279,280,281,282,283,284,296,297,298,299,300,301,302,303,308,310,317,321,],[-145,-43,-48,-51,-54,-63,-64,-65,-67,-68,-69,-32,-145,208,-145,-145,-145,-145,-145,-145,-145,-145,-145,-135,-145,-145,-144,-144,-144,-144,-116,-145,-71,-145,-145,-31,-145,-145,-145,-145,-145,-44,-45,-46,-47,-141,-141,-142,-142,-66,-41,-42,-49,-50,-52,-53,-116,-145,-145,-135,-70,-145,]),'or':([122,123,124,125,126,127,128,129,132,133,134,135,166,168,180,187,189,190,191,196,198,199,218,220,222,224,248,249,250,251,256,258,259,263,266,267,268,271,272,274,275,276,277,278,279,280,281,282,283,284,296,297,298,299,300,301,302,303,308,310,317,321,],[-145,-43,-48,-51,-54,-63,-64,-65,-67,-68,-69,-32,-145,209,-145,-145,-145,-145,-145,-145,-145,-145,-145,-135,-145,-145,-144,-144,-144,-144,-116,-145,-71,-145,-145,-31,-145,-145,-145,-145,-145,-44,-45,-46,-47,-141,-141,-142,-142,-66,-41,-42,-49,-50,-52,-53,-116,-145,-145,-135,-70,-145,]),'to':([123,124,125,126,127,128,129,132,133,134,135,144,220,222,248,249,250,251,256,259,260,267,274,275,276,277,278,279,280,281,282,283,284,296,297,298,299,300,301,302,310,317,],[-43,-48,-51,-54,-63,-64,-65,-67,-68,-69,-32,182,-135,-143,-144,-144,-144,-144,-116,-71,-74,-31,-145,-145,-44,-45,-46,-47,-141,-141,-142,-142,-66,-41,-42,-49,-50,-52,-53,-116,-135,-70,]),'do':([123,124,125,126,127,128,129,132,133,134,135,220,248,249,250,251,256,259,262,263,267,274,275,276,277,278,279,280,281,282,283,284,289,290,296,297,298,299,300,301,302,310,317,],[-43,-48,-51,-54,-63,-64,-65,-67,-68,-69,-32,-135,-144,-144,-144,-144,-116,-71,-123,-129,-31,-145,-145,-44,-45,-46,-47,-141,-141,-142,-142,-66,305,306,-41,-42,-49,-50,-52,-53,-116,-135,-70,]),'>':([124,125,126,127,128,129,132,133,134,135,220,256,259,267,280,281,282,283,284,298,299,300,301,302,310,317,],[169,-51,-54,-63,-64,-65,-67,-68,-69,-32,-135,-116,-71,-31,-141,-141,-142,-142,-66,-49,-50,-52,-53,-116,-135,-70,]),'<':([124,125,126,127,128,129,132,133,134,135,220,256,259,267,280,281,282,283,284,298,299,300,301,302,310,317,],[170,-51,-54,-63,-64,-65,-67,-68,-69,-32,-135,-116,-71,-31,-141,-141,-142,-142,-66,-49,-50,-52,-53,-116,-135,-70,]),'equals':([124,125,126,127,128,129,132,133,134,135,220,256,259,267,280,281,282,283,284,298,299,300,301,302,310,317,],[171,-51,-54,-63,-64,-65,-67,-68,-69,-32,-135,-116,-71,-31,-141,-141,-142,-142,-66,-49,-50,-52,-53,-116,-135,-70,]),'not_equals':([124,125,126,127,128,129,132,133,134,135,220,256,259,267,280,281,282,283,284,298,299,300,301,302,310,317,],[172,-51,-54,-63,-64,-65,-67,-68,-69,-32,-135,-116,-71,-31,-141,-141,-142,-142,-66,-49,-50,-52,-53,-116,-135,-70,]),'+':([124,125,126,127,128,129,132,133,134,135,173,220,248,249,250,251,256,259,267,280,281,282,283,284,298,299,300,301,302,310,317,],[-141,-51,-54,-63,-64,-65,-67,-68,-69,-32,214,-135,-141,-141,-141,-141,-116,-71,-31,-141,-141,-142,-142,-66,-49,-50,-52,-53,-116,-135,-70,]),'minus':([124,125,126,127,128,129,132,133,134,135,173,220,248,249,250,251,256,259,267,280,281,282,283,284,298,299,300,301,302,310,317,],[-141,-51,-54,-63,-64,-65,-67,-68,-69,-32,215,-135,-141,-141,-141,-141,-116,-71,-31,-141,-141,-142,-142,-66,-49,-50,-52,-53,-116,-135,-70,]),'*':([125,126,127,128,129,132,133,134,135,174,220,256,259,267,280,281,282,283,284,300,301,302,310,317,],[-142,-54,-63,-64,-65,-67,-68,-69,-32,216,-135,-116,-71,-31,-142,-142,-142,-142,-66,-52,-53,-116,-135,-70,]),'cte_s':([146,152,230,],[188,195,188,]),'then':([223,261,],[-123,288,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAMA':([0,],[1,]),'SEM_ADD_GOTO_MAIN':([0,],[2,]),'SEM_GLOBAL_NAME':([3,],[4,]),'SEM_ADD_FUNC':([4,23,34,37,],[6,32,42,44,]),'PROGRAMA_OPTS':([7,],[8,]),'PRINCIPAL':([7,8,],[9,19,]),'DEC_V':([7,55,58,65,71,],[10,64,70,113,118,]),'FUNCS':([7,10,],[11,20,]),'SEM_FILL_MAIN_GOTO':([7,8,],[12,12,]),'FUNC_TYPES':([7,10,11,20,],[14,14,22,22,]),'SEM_MAIN_NAME':([12,],[23,]),'TIPO_SIMPLE':([13,21,49,51,66,],[25,30,57,57,114,]),'SEM_FUNC_NAME':([29,31,],[34,37,]),'LISTA_VAR':([33,36,],[39,43,]),'VARIABLE_FIX':([33,36,47,],[40,40,53,]),'SEM_ADD_GLOBAL_VARIABLES':([45,55,58,64,65,70,71,113,118,],[52,63,69,111,112,116,117,160,165,]),'PARAMS':([49,51,],[56,59,]),'BLOQUE':([52,63,69,111,112,116,117,160,165,288,305,306,318,],[60,110,115,158,159,163,164,202,205,304,314,315,322,]),'PARAM_NAME':([57,114,],[67,161,]),'LOOP_ESTATUTO':([61,],[72,]),'ESTATUTO':([61,72,],[75,121,]),'ASIGNACION':([61,72,87,],[76,76,144,]),'CONDICION':([61,72,],[77,77,]),'WHILE':([61,72,],[78,78,]),'FOR':([61,72,],[79,79,]),'LECTURA':([61,72,],[81,81,]),'ESCRITURA':([61,72,],[82,82,]),'LLAMADA_BI':([61,72,],[83,83,]),'VARIABLE':([61,72,73,87,119,142,145,146,147,148,149,153,155,156,175,179,181,210,211,212,213,219,225,227,230,233,240,241,246,247,252,253,254,255,286,294,316,],[84,84,129,84,129,129,184,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,264,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'POINT':([61,72,],[90,90,]),'CIRCLE':([61,72,],[91,91,]),'PENUP':([61,72,],[92,92,]),'PENDOWN':([61,72,],[93,93,]),'COLOR':([61,72,],[94,94,]),'SIZE':([61,72,],[95,95,]),'CLEAR':([61,72,],[96,96,]),'LINE':([61,72,],[97,97,]),'ARC':([61,72,],[98,98,]),'SEM_ID_FOR_ARRAY':([61,72,73,87,119,142,145,146,147,148,149,153,155,156,175,179,181,210,211,212,213,219,225,227,230,233,240,241,246,247,252,253,254,255,286,294,316,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'EXPRESION':([73,119,142,146,147,148,149,153,155,156,175,179,181,219,225,230,233,240,241,286,294,316,],[122,166,180,187,189,190,191,196,198,199,218,222,224,258,263,266,268,271,272,303,308,321,]),'EXP_R':([73,119,142,146,147,148,149,153,155,156,175,179,181,219,225,230,233,240,241,246,247,286,294,316,],[123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,274,275,123,123,123,]),'EXP_A':([73,119,142,146,147,148,149,153,155,156,175,179,181,210,211,212,213,219,225,230,233,240,241,246,247,286,294,316,],[124,124,124,124,124,124,124,124,124,124,124,124,124,248,249,250,251,124,124,124,124,124,124,124,124,124,124,124,]),'TERMINO':([73,119,142,146,147,148,149,153,155,156,175,179,181,210,211,212,213,219,225,230,233,240,241,246,247,252,253,286,294,316,],[125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,280,281,125,125,125,]),'FACTOR':([73,119,142,146,147,148,149,153,155,156,175,179,181,210,211,212,213,219,225,230,233,240,241,246,247,252,253,254,255,286,294,316,],[126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,282,283,126,126,126,]),'LLAMADA':([73,119,137,142,146,147,148,149,153,155,156,175,179,181,210,211,212,213,219,225,230,233,240,241,246,247,252,253,254,255,286,294,316,],[127,127,177,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,]),'CTE':([73,119,142,146,147,148,149,153,155,156,175,179,181,210,211,212,213,219,225,230,233,240,241,246,247,252,253,254,255,286,294,316,],[128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,]),'SEM_VERIFY_FUNC_CALL':([73,119,137,142,146,147,148,149,153,155,156,175,179,181,210,211,212,213,219,225,230,233,240,241,246,247,252,253,254,255,286,294,316,],[131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'SEM_MUST_BE_VOID_CALL':([80,],[137,]),'SEM_ADD_COND_INDEX':([86,182,],[143,225,]),'SEM_ENDFUNC':([110,115,158,159,163,164,202,205,],[157,162,200,201,203,204,242,243,]),'SEM_VERIFY_RETURN_FUNC':([122,166,],[167,206,]),'SEM_PENDING_LOGIC_OP':([122,166,180,187,189,190,191,196,198,199,218,222,224,258,263,266,268,271,272,274,275,303,308,321,],[168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,296,297,168,168,168,]),'SEM_PENDING_EXPA_OP':([124,248,249,250,251,280,281,],[173,173,173,173,173,298,299,]),'SEM_PENDING_TERMINO_OP':([125,280,281,282,283,],[174,174,174,300,301,]),'SEM_ADD_FONDO_FALSO':([130,176,],[175,219,]),'SEM_ADD_EQUALS':([141,],[179,]),'LECTURA_OPTS':([145,],[183,]),'ESCRITURA_OPTS':([146,],[185,]),'SEM_ADD_PRINT_CTE_S':([146,230,],[186,265,]),'DO_COLOR':([152,],[194,]),'SEM_ADD_GREATER_THAN':([169,],[210,]),'SEM_ADD_LESS_THAN':([170,],[211,]),'SEM_ADD_EQUALS_TO':([171,],[212,]),'SEM_ADD_NOT_EQUALS_TO':([172,],[213,]),'SEM_ADD_READ':([184,264,],[228,291,]),'SEM_ADD_PRINT':([187,266,],[231,292,]),'SEM_CHECK_ARRAY':([189,],[232,]),'DO_PENUP':([192,],[235,]),'DO_PENDOWN':([193,],[236,]),'DO_CLEAR':([197,],[239,]),'SEM_ADD_AND':([208,],[246,]),'SEM_ADD_OR':([209,],[247,]),'SEM_ADD_PLUS':([214,],[252,]),'SEM_ADD_MINUS':([215,],[253,]),'SEM_ADD_TIMES':([216,],[254,]),'SEM_ADD_DIVISION':([217,],[255,]),'LLAMADA_OPTS':([219,],[257,]),'SEM_ADD_GOSUB':([220,310,],[259,317,]),'SEM_PENDING_ASSIGNATION_OP':([222,],[260,]),'SEM_ADD_GOTOF':([223,262,],[261,289,]),'DRAW_CIRCLE':([234,],[269,]),'DO_SIZE':([238,],[270,]),'SEM_PENDING_REL_OP':([248,249,250,251,],[276,277,278,279,]),'SEM_REMOVE_FONDO_FALSO':([256,302,],[284,310,]),'SEM_RESET_PARAM_COUNT':([257,],[285,]),'SEM_VERIFY_PARAM':([258,303,],[287,311,]),'SEM_ADD_GOTOV':([263,],[290,]),'DRAW_POINT':([293,],[307,]),'DRAW_ARC':([295,],[309,]),'SEM_FILL_GOTO_ANYKIND':([304,322,],[312,326,]),'SEM_ADD_GOTO_SIMPLE':([313,314,315,],[318,319,320,]),'SEM_FILL_GOTO_COND_INDEX':([319,320,],[323,324,]),'DRAW_LINE':([325,],[327,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAMA","S'",1,None,None,None),
  ('PROGRAMA -> SEM_ADD_GOTO_MAIN program SEM_GLOBAL_NAME SEM_ADD_FUNC ; PROGRAMA_OPTS PRINCIPAL','PROGRAMA',7,'p_programa','memyselfcompiler.py',74),
  ('PROGRAMA -> SEM_ADD_GOTO_MAIN program SEM_GLOBAL_NAME SEM_ADD_FUNC ; PRINCIPAL','PROGRAMA',6,'p_programa','memyselfcompiler.py',75),
  ('PROGRAMA_OPTS -> DEC_V FUNCS','PROGRAMA_OPTS',2,'p_programa_opts','memyselfcompiler.py',94),
  ('PROGRAMA_OPTS -> DEC_V','PROGRAMA_OPTS',1,'p_programa_opts','memyselfcompiler.py',95),
  ('PROGRAMA_OPTS -> FUNCS','PROGRAMA_OPTS',1,'p_programa_opts','memyselfcompiler.py',96),
  ('PRINCIPAL -> SEM_FILL_MAIN_GOTO SEM_MAIN_NAME SEM_ADD_FUNC ( ) SEM_ADD_GLOBAL_VARIABLES BLOQUE','PRINCIPAL',7,'p_principal','memyselfcompiler.py',102),
  ('DEC_V -> DEC_V var TIPO_SIMPLE : LISTA_VAR ;','DEC_V',6,'p_dec_v','memyselfcompiler.py',107),
  ('DEC_V -> var TIPO_SIMPLE : LISTA_VAR ;','DEC_V',5,'p_dec_v','memyselfcompiler.py',108),
  ('LISTA_VAR -> LISTA_VAR , VARIABLE_FIX','LISTA_VAR',3,'p_lista_var','memyselfcompiler.py',116),
  ('LISTA_VAR -> VARIABLE_FIX','LISTA_VAR',1,'p_lista_var','memyselfcompiler.py',117),
  ('TIPO_SIMPLE -> int','TIPO_SIMPLE',1,'p_tipo_simple','memyselfcompiler.py',122),
  ('TIPO_SIMPLE -> float','TIPO_SIMPLE',1,'p_tipo_simple','memyselfcompiler.py',123),
  ('TIPO_SIMPLE -> char','TIPO_SIMPLE',1,'p_tipo_simple','memyselfcompiler.py',124),
  ('FUNCS -> FUNCS FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC ( ) SEM_ADD_GLOBAL_VARIABLES BLOQUE SEM_ENDFUNC','FUNCS',10,'p_funcs','memyselfcompiler.py',133),
  ('FUNCS -> FUNCS FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC ( PARAMS ) SEM_ADD_GLOBAL_VARIABLES BLOQUE SEM_ENDFUNC','FUNCS',11,'p_funcs','memyselfcompiler.py',134),
  ('FUNCS -> FUNCS FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC ( PARAMS ) DEC_V SEM_ADD_GLOBAL_VARIABLES BLOQUE SEM_ENDFUNC','FUNCS',12,'p_funcs','memyselfcompiler.py',135),
  ('FUNCS -> FUNCS FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC ( ) DEC_V SEM_ADD_GLOBAL_VARIABLES BLOQUE SEM_ENDFUNC','FUNCS',11,'p_funcs','memyselfcompiler.py',136),
  ('FUNCS -> FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC ( ) SEM_ADD_GLOBAL_VARIABLES BLOQUE SEM_ENDFUNC','FUNCS',9,'p_funcs','memyselfcompiler.py',137),
  ('FUNCS -> FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC ( PARAMS ) SEM_ADD_GLOBAL_VARIABLES BLOQUE SEM_ENDFUNC','FUNCS',10,'p_funcs','memyselfcompiler.py',138),
  ('FUNCS -> FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC ( PARAMS ) DEC_V SEM_ADD_GLOBAL_VARIABLES BLOQUE SEM_ENDFUNC','FUNCS',11,'p_funcs','memyselfcompiler.py',139),
  ('FUNCS -> FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC ( ) DEC_V SEM_ADD_GLOBAL_VARIABLES BLOQUE SEM_ENDFUNC','FUNCS',10,'p_funcs','memyselfcompiler.py',140),
  ('FUNC_TYPES -> char','FUNC_TYPES',1,'p_func_types','memyselfcompiler.py',146),
  ('FUNC_TYPES -> float','FUNC_TYPES',1,'p_func_types','memyselfcompiler.py',147),
  ('FUNC_TYPES -> int','FUNC_TYPES',1,'p_func_types','memyselfcompiler.py',148),
  ('FUNC_TYPES -> void','FUNC_TYPES',1,'p_func_types','memyselfcompiler.py',149),
  ('PARAMS -> PARAMS , TIPO_SIMPLE PARAM_NAME','PARAMS',4,'p_params','memyselfcompiler.py',158),
  ('PARAMS -> TIPO_SIMPLE PARAM_NAME','PARAMS',2,'p_params','memyselfcompiler.py',159),
  ('PARAM_NAME -> id','PARAM_NAME',1,'p_param_name','memyselfcompiler.py',164),
  ('VARIABLE_FIX -> id [ cte_i ]','VARIABLE_FIX',4,'p_variable_fix','memyselfcompiler.py',188),
  ('VARIABLE_FIX -> id','VARIABLE_FIX',1,'p_variable_fix','memyselfcompiler.py',189),
  ('VARIABLE -> SEM_ID_FOR_ARRAY [ EXPRESION SEM_CHECK_ARRAY ]','VARIABLE',5,'p_variable','memyselfcompiler.py',237),
  ('VARIABLE -> id','VARIABLE',1,'p_variable','memyselfcompiler.py',238),
  ('SEM_ID_FOR_ARRAY -> id','SEM_ID_FOR_ARRAY',1,'p_sem_id_for_array','memyselfcompiler.py',259),
  ('SEM_CHECK_ARRAY -> <empty>','SEM_CHECK_ARRAY',0,'p_sem_check_array','memyselfcompiler.py',267),
  ('BLOQUE -> { LOOP_ESTATUTO return EXPRESION SEM_VERIFY_RETURN_FUNC ; }','BLOQUE',7,'p_bloque','memyselfcompiler.py',303),
  ('BLOQUE -> { LOOP_ESTATUTO }','BLOQUE',3,'p_bloque','memyselfcompiler.py',304),
  ('BLOQUE -> { return EXPRESION SEM_VERIFY_RETURN_FUNC ; }','BLOQUE',6,'p_bloque','memyselfcompiler.py',305),
  ('BLOQUE -> { }','BLOQUE',2,'p_bloque','memyselfcompiler.py',306),
  ('LOOP_ESTATUTO -> LOOP_ESTATUTO ESTATUTO','LOOP_ESTATUTO',2,'p_loop_estatuto','memyselfcompiler.py',311),
  ('LOOP_ESTATUTO -> ESTATUTO','LOOP_ESTATUTO',1,'p_loop_estatuto','memyselfcompiler.py',312),
  ('EXPRESION -> EXPRESION SEM_PENDING_LOGIC_OP and SEM_ADD_AND EXP_R SEM_PENDING_LOGIC_OP','EXPRESION',6,'p_expresion','memyselfcompiler.py',317),
  ('EXPRESION -> EXPRESION SEM_PENDING_LOGIC_OP or SEM_ADD_OR EXP_R SEM_PENDING_LOGIC_OP','EXPRESION',6,'p_expresion','memyselfcompiler.py',318),
  ('EXPRESION -> EXP_R','EXPRESION',1,'p_expresion','memyselfcompiler.py',319),
  ('EXP_R -> EXP_A > SEM_ADD_GREATER_THAN EXP_A SEM_PENDING_REL_OP','EXP_R',5,'p_exp_r','memyselfcompiler.py',324),
  ('EXP_R -> EXP_A < SEM_ADD_LESS_THAN EXP_A SEM_PENDING_REL_OP','EXP_R',5,'p_exp_r','memyselfcompiler.py',325),
  ('EXP_R -> EXP_A equals SEM_ADD_EQUALS_TO EXP_A SEM_PENDING_REL_OP','EXP_R',5,'p_exp_r','memyselfcompiler.py',326),
  ('EXP_R -> EXP_A not_equals SEM_ADD_NOT_EQUALS_TO EXP_A SEM_PENDING_REL_OP','EXP_R',5,'p_exp_r','memyselfcompiler.py',327),
  ('EXP_R -> EXP_A','EXP_R',1,'p_exp_r','memyselfcompiler.py',328),
  ('EXP_A -> EXP_A SEM_PENDING_EXPA_OP + SEM_ADD_PLUS TERMINO SEM_PENDING_EXPA_OP','EXP_A',6,'p_exp_a','memyselfcompiler.py',333),
  ('EXP_A -> EXP_A SEM_PENDING_EXPA_OP minus SEM_ADD_MINUS TERMINO SEM_PENDING_EXPA_OP','EXP_A',6,'p_exp_a','memyselfcompiler.py',334),
  ('EXP_A -> TERMINO','EXP_A',1,'p_exp_a','memyselfcompiler.py',335),
  ('TERMINO -> TERMINO SEM_PENDING_TERMINO_OP * SEM_ADD_TIMES FACTOR SEM_PENDING_TERMINO_OP','TERMINO',6,'p_termino','memyselfcompiler.py',340),
  ('TERMINO -> TERMINO SEM_PENDING_TERMINO_OP / SEM_ADD_DIVISION FACTOR SEM_PENDING_TERMINO_OP','TERMINO',6,'p_termino','memyselfcompiler.py',341),
  ('TERMINO -> FACTOR','TERMINO',1,'p_termino','memyselfcompiler.py',342),
  ('ESTATUTO -> ASIGNACION ;','ESTATUTO',2,'p_estatuto','memyselfcompiler.py',347),
  ('ESTATUTO -> CONDICION','ESTATUTO',1,'p_estatuto','memyselfcompiler.py',348),
  ('ESTATUTO -> WHILE','ESTATUTO',1,'p_estatuto','memyselfcompiler.py',349),
  ('ESTATUTO -> FOR','ESTATUTO',1,'p_estatuto','memyselfcompiler.py',350),
  ('ESTATUTO -> / SEM_MUST_BE_VOID_CALL LLAMADA ;','ESTATUTO',4,'p_estatuto','memyselfcompiler.py',351),
  ('ESTATUTO -> LECTURA ;','ESTATUTO',2,'p_estatuto','memyselfcompiler.py',352),
  ('ESTATUTO -> ESCRITURA ;','ESTATUTO',2,'p_estatuto','memyselfcompiler.py',353),
  ('ESTATUTO -> LLAMADA_BI ;','ESTATUTO',2,'p_estatuto','memyselfcompiler.py',354),
  ('FACTOR -> LLAMADA','FACTOR',1,'p_factor','memyselfcompiler.py',359),
  ('FACTOR -> CTE','FACTOR',1,'p_factor','memyselfcompiler.py',360),
  ('FACTOR -> VARIABLE','FACTOR',1,'p_factor','memyselfcompiler.py',361),
  ('FACTOR -> ( SEM_ADD_FONDO_FALSO EXPRESION ) SEM_REMOVE_FONDO_FALSO','FACTOR',5,'p_factor','memyselfcompiler.py',362),
  ('CTE -> cte_i','CTE',1,'p_cte','memyselfcompiler.py',374),
  ('CTE -> cte_f','CTE',1,'p_cte','memyselfcompiler.py',375),
  ('CTE -> cte_c','CTE',1,'p_cte','memyselfcompiler.py',376),
  ('LLAMADA -> SEM_VERIFY_FUNC_CALL ( SEM_ADD_FONDO_FALSO LLAMADA_OPTS SEM_RESET_PARAM_COUNT ) SEM_REMOVE_FONDO_FALSO SEM_ADD_GOSUB','LLAMADA',8,'p_llamada','memyselfcompiler.py',405),
  ('LLAMADA -> SEM_VERIFY_FUNC_CALL ( ) SEM_ADD_GOSUB','LLAMADA',4,'p_llamada','memyselfcompiler.py',406),
  ('LLAMADA_OPTS -> LLAMADA_OPTS , EXPRESION SEM_VERIFY_PARAM','LLAMADA_OPTS',4,'p_llamada_opts','memyselfcompiler.py',411),
  ('LLAMADA_OPTS -> EXPRESION SEM_VERIFY_PARAM','LLAMADA_OPTS',2,'p_llamada_opts','memyselfcompiler.py',412),
  ('ASIGNACION -> VARIABLE = SEM_ADD_EQUALS EXPRESION SEM_PENDING_ASSIGNATION_OP','ASIGNACION',5,'p_asignacion','memyselfcompiler.py',417),
  ('CONDICION -> if ( EXPRESION ) SEM_ADD_GOTOF then BLOQUE SEM_FILL_GOTO_ANYKIND','CONDICION',8,'p_condicion','memyselfcompiler.py',422),
  ('CONDICION -> if ( EXPRESION ) SEM_ADD_GOTOF then BLOQUE else SEM_ADD_GOTO_SIMPLE BLOQUE SEM_FILL_GOTO_ANYKIND','CONDICION',11,'p_condicion','memyselfcompiler.py',423),
  ('WHILE -> while SEM_ADD_COND_INDEX ( EXPRESION ) SEM_ADD_GOTOF do BLOQUE SEM_ADD_GOTO_SIMPLE SEM_FILL_GOTO_COND_INDEX','WHILE',10,'p_while','memyselfcompiler.py',428),
  ('FOR -> for ASIGNACION to SEM_ADD_COND_INDEX EXPRESION SEM_ADD_GOTOV do BLOQUE SEM_ADD_GOTO_SIMPLE SEM_FILL_GOTO_COND_INDEX','FOR',10,'p_for','memyselfcompiler.py',433),
  ('LECTURA -> read ( LECTURA_OPTS )','LECTURA',4,'p_lectura','memyselfcompiler.py',438),
  ('LECTURA_OPTS -> LECTURA_OPTS , VARIABLE SEM_ADD_READ','LECTURA_OPTS',4,'p_lectura_opts','memyselfcompiler.py',443),
  ('LECTURA_OPTS -> VARIABLE SEM_ADD_READ','LECTURA_OPTS',2,'p_lectura_opts','memyselfcompiler.py',444),
  ('ESCRITURA -> write ( ESCRITURA_OPTS )','ESCRITURA',4,'p_escritura','memyselfcompiler.py',449),
  ('ESCRITURA_OPTS -> ESCRITURA_OPTS , SEM_ADD_PRINT_CTE_S','ESCRITURA_OPTS',3,'p_escritura_opts','memyselfcompiler.py',454),
  ('ESCRITURA_OPTS -> ESCRITURA_OPTS , EXPRESION SEM_ADD_PRINT','ESCRITURA_OPTS',4,'p_escritura_opts','memyselfcompiler.py',455),
  ('ESCRITURA_OPTS -> SEM_ADD_PRINT_CTE_S','ESCRITURA_OPTS',1,'p_escritura_opts','memyselfcompiler.py',456),
  ('ESCRITURA_OPTS -> EXPRESION SEM_ADD_PRINT','ESCRITURA_OPTS',2,'p_escritura_opts','memyselfcompiler.py',457),
  ('LLAMADA_BI -> POINT','LLAMADA_BI',1,'p_llamada_bi','memyselfcompiler.py',462),
  ('LLAMADA_BI -> CIRCLE','LLAMADA_BI',1,'p_llamada_bi','memyselfcompiler.py',463),
  ('LLAMADA_BI -> PENUP','LLAMADA_BI',1,'p_llamada_bi','memyselfcompiler.py',464),
  ('LLAMADA_BI -> PENDOWN','LLAMADA_BI',1,'p_llamada_bi','memyselfcompiler.py',465),
  ('LLAMADA_BI -> COLOR','LLAMADA_BI',1,'p_llamada_bi','memyselfcompiler.py',466),
  ('LLAMADA_BI -> SIZE','LLAMADA_BI',1,'p_llamada_bi','memyselfcompiler.py',467),
  ('LLAMADA_BI -> CLEAR','LLAMADA_BI',1,'p_llamada_bi','memyselfcompiler.py',468),
  ('LLAMADA_BI -> LINE','LLAMADA_BI',1,'p_llamada_bi','memyselfcompiler.py',469),
  ('LLAMADA_BI -> ARC','LLAMADA_BI',1,'p_llamada_bi','memyselfcompiler.py',470),
  ('CLEAR -> clear ( ) DO_CLEAR','CLEAR',4,'p_clear','memyselfcompiler.py',475),
  ('POINT -> point ( EXPRESION , EXPRESION ) DRAW_POINT','POINT',7,'p_point','memyselfcompiler.py',480),
  ('CIRCLE -> circle ( EXPRESION ) DRAW_CIRCLE','CIRCLE',5,'p_circle','memyselfcompiler.py',485),
  ('LINE -> line ( EXPRESION , EXPRESION , EXPRESION , EXPRESION ) DRAW_LINE','LINE',11,'p_line','memyselfcompiler.py',490),
  ('ARC -> arc ( EXPRESION , EXPRESION ) DRAW_ARC','ARC',7,'p_arc','memyselfcompiler.py',495),
  ('PENUP -> penup ( ) DO_PENUP','PENUP',4,'p_penup','memyselfcompiler.py',500),
  ('PENDOWN -> pendown ( ) DO_PENDOWN','PENDOWN',4,'p_pendown','memyselfcompiler.py',505),
  ('COLOR -> color ( DO_COLOR )','COLOR',4,'p_color','memyselfcompiler.py',510),
  ('SIZE -> size ( EXPRESION ) DO_SIZE','SIZE',5,'p_size','memyselfcompiler.py',515),
  ('SEM_GLOBAL_NAME -> id','SEM_GLOBAL_NAME',1,'p_sem_global_name','memyselfcompiler.py',538),
  ('SEM_MAIN_NAME -> main','SEM_MAIN_NAME',1,'p_sem_main_name','memyselfcompiler.py',549),
  ('SEM_FUNC_NAME -> id','SEM_FUNC_NAME',1,'p_sem_func_name','memyselfcompiler.py',560),
  ('SEM_ADD_FUNC -> <empty>','SEM_ADD_FUNC',0,'p_sem_add_func','memyselfcompiler.py',568),
  ('SEM_ADD_GLOBAL_VARIABLES -> <empty>','SEM_ADD_GLOBAL_VARIABLES',0,'p_sem_add_global_variables','memyselfcompiler.py',580),
  ('SEM_ADD_PLUS -> <empty>','SEM_ADD_PLUS',0,'p_sem_add_plus','memyselfcompiler.py',587),
  ('SEM_ADD_MINUS -> <empty>','SEM_ADD_MINUS',0,'p_sem_add_minus','memyselfcompiler.py',595),
  ('SEM_ADD_TIMES -> <empty>','SEM_ADD_TIMES',0,'p_sem_add_times','memyselfcompiler.py',602),
  ('SEM_ADD_DIVISION -> <empty>','SEM_ADD_DIVISION',0,'p_sem_add_division','memyselfcompiler.py',609),
  ('SEM_ADD_EQUALS -> <empty>','SEM_ADD_EQUALS',0,'p_sem_add_equals','memyselfcompiler.py',617),
  ('SEM_ADD_FONDO_FALSO -> <empty>','SEM_ADD_FONDO_FALSO',0,'p_sem_add_fondo_falso','memyselfcompiler.py',625),
  ('SEM_REMOVE_FONDO_FALSO -> <empty>','SEM_REMOVE_FONDO_FALSO',0,'p_sem_remove_fondo_falso','memyselfcompiler.py',633),
  ('SEM_ADD_GREATER_THAN -> <empty>','SEM_ADD_GREATER_THAN',0,'p_sem_add_greater_than','memyselfcompiler.py',641),
  ('SEM_ADD_LESS_THAN -> <empty>','SEM_ADD_LESS_THAN',0,'p_sem_add_less_than','memyselfcompiler.py',649),
  ('SEM_ADD_EQUALS_TO -> <empty>','SEM_ADD_EQUALS_TO',0,'p_sem_add_equals_to','memyselfcompiler.py',657),
  ('SEM_ADD_NOT_EQUALS_TO -> <empty>','SEM_ADD_NOT_EQUALS_TO',0,'p_sem_add_not_equals_to','memyselfcompiler.py',665),
  ('SEM_ADD_AND -> <empty>','SEM_ADD_AND',0,'p_sem_add_and','memyselfcompiler.py',673),
  ('SEM_ADD_OR -> <empty>','SEM_ADD_OR',0,'p_sem_add_or','memyselfcompiler.py',681),
  ('SEM_ADD_GOTOF -> <empty>','SEM_ADD_GOTOF',0,'p_sem_add_gotof','memyselfcompiler.py',691),
  ('SEM_FILL_GOTO_ANYKIND -> <empty>','SEM_FILL_GOTO_ANYKIND',0,'p_sem_fill_goto_anykind','memyselfcompiler.py',710),
  ('SEM_FILL_MAIN_GOTO -> <empty>','SEM_FILL_MAIN_GOTO',0,'p_sem_fill_main_goto','memyselfcompiler.py',724),
  ('SEM_ADD_GOTO_SIMPLE -> <empty>','SEM_ADD_GOTO_SIMPLE',0,'p_sem_add_goto_simple','memyselfcompiler.py',742),
  ('SEM_ADD_COND_INDEX -> <empty>','SEM_ADD_COND_INDEX',0,'p_sem_add_cond_index','memyselfcompiler.py',760),
  ('SEM_FILL_GOTO_COND_INDEX -> <empty>','SEM_FILL_GOTO_COND_INDEX',0,'p_sem_fill_goto_cond_index','memyselfcompiler.py',772),
  ('SEM_ADD_GOTOV -> <empty>','SEM_ADD_GOTOV',0,'p_sem_add_gotov','memyselfcompiler.py',787),
  ('SEM_ADD_GOTO_MAIN -> <empty>','SEM_ADD_GOTO_MAIN',0,'p_sem_add_goto_main','memyselfcompiler.py',806),
  ('SEM_ENDFUNC -> <empty>','SEM_ENDFUNC',0,'p_sem_endfunc','memyselfcompiler.py',819),
  ('SEM_VERIFY_FUNC_CALL -> id','SEM_VERIFY_FUNC_CALL',1,'p_sem_verify_func_call','memyselfcompiler.py',844),
  ('SEM_VERIFY_PARAM -> <empty>','SEM_VERIFY_PARAM',0,'p_sem_verify_param','memyselfcompiler.py',864),
  ('SEM_RESET_PARAM_COUNT -> <empty>','SEM_RESET_PARAM_COUNT',0,'p_sem_reset_param_count','memyselfcompiler.py',892),
  ('SEM_ADD_GOSUB -> <empty>','SEM_ADD_GOSUB',0,'p_sem_add_gosub','memyselfcompiler.py',900),
  ('SEM_VERIFY_RETURN_FUNC -> <empty>','SEM_VERIFY_RETURN_FUNC',0,'p_sem_verify_return_func','memyselfcompiler.py',921),
  ('SEM_MUST_BE_VOID_CALL -> <empty>','SEM_MUST_BE_VOID_CALL',0,'p_sem_must_be_void_call','memyselfcompiler.py',945),
  ('SEM_ADD_PRINT -> <empty>','SEM_ADD_PRINT',0,'p_sem_add_print','memyselfcompiler.py',953),
  ('SEM_ADD_PRINT_CTE_S -> cte_s','SEM_ADD_PRINT_CTE_S',1,'p_sem_add_print_cte_s','memyselfcompiler.py',969),
  ('SEM_ADD_READ -> <empty>','SEM_ADD_READ',0,'p_sem_add_read','memyselfcompiler.py',988),
  ('SEM_PENDING_EXPA_OP -> <empty>','SEM_PENDING_EXPA_OP',0,'p_sem_pending_expa_op','memyselfcompiler.py',1013),
  ('SEM_PENDING_TERMINO_OP -> <empty>','SEM_PENDING_TERMINO_OP',0,'p_sem_pending_termino_op','memyselfcompiler.py',1041),
  ('SEM_PENDING_ASSIGNATION_OP -> <empty>','SEM_PENDING_ASSIGNATION_OP',0,'p_sem_pending_assignation_op','memyselfcompiler.py',1070),
  ('SEM_PENDING_REL_OP -> <empty>','SEM_PENDING_REL_OP',0,'p_sem_pending_rel_op','memyselfcompiler.py',1092),
  ('SEM_PENDING_LOGIC_OP -> <empty>','SEM_PENDING_LOGIC_OP',0,'p_sem_pending_logic_op','memyselfcompiler.py',1122),
  ('DRAW_POINT -> <empty>','DRAW_POINT',0,'p_draw_point','memyselfcompiler.py',1155),
  ('DRAW_CIRCLE -> <empty>','DRAW_CIRCLE',0,'p_draw_circle','memyselfcompiler.py',1171),
  ('DRAW_LINE -> <empty>','DRAW_LINE',0,'p_draw_line','memyselfcompiler.py',1185),
  ('DRAW_ARC -> <empty>','DRAW_ARC',0,'p_draw_arc','memyselfcompiler.py',1203),
  ('DO_PENUP -> <empty>','DO_PENUP',0,'p_do_penup','memyselfcompiler.py',1218),
  ('DO_PENDOWN -> <empty>','DO_PENDOWN',0,'p_do_pendown','memyselfcompiler.py',1225),
  ('DO_COLOR -> cte_s','DO_COLOR',1,'p_do_color','memyselfcompiler.py',1232),
  ('DO_CLEAR -> <empty>','DO_CLEAR',0,'p_do_clear','memyselfcompiler.py',1249),
  ('DO_SIZE -> <empty>','DO_SIZE',0,'p_do_size','memyselfcompiler.py',1258),
]
