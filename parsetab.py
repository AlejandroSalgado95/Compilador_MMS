
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "leftandorleft><equalsnot_equalsleftminus+left*/and char circle clear color cte_c cte_f cte_i cte_s do else equals float for global id if int main minus module not_equals or pendown penup point program read return size then to var void while write\n     PROGRAMA : SEM_ADD_GOTO_MAIN program  SEM_GLOBAL_NAME  SEM_ADD_FUNC ';' PROGRAMA_OPTS PRINCIPAL \n               | SEM_ADD_GOTO_MAIN program  SEM_GLOBAL_NAME  SEM_ADD_FUNC ';' PRINCIPAL \n    \n    PROGRAMA_OPTS :  DEC_V FUNCS\n                    | DEC_V\n                    | FUNCS\n    \n    PRINCIPAL :   SEM_FILL_MAIN_GOTO SEM_MAIN_NAME SEM_ADD_FUNC '(' ')' SEM_ADD_GLOBAL_VARIABLES BLOQUE\n    \n    DEC_V : DEC_V var  TIPO_SIMPLE ':' LISTA_VAR ';' \n            | var TIPO_SIMPLE ':' LISTA_VAR ';'\n    \n    LISTA_VAR : LISTA_VAR ',' VARIABLE_FIX\n               | VARIABLE_FIX\n    \n    TIPO_SIMPLE : int \n                 | float \n                 | char\n    \n    FUNCS :  FUNCS FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC '(' ')' SEM_ADD_GLOBAL_VARIABLES BLOQUE  SEM_ENDFUNC\n           | FUNCS FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC '(' PARAMS ')' SEM_ADD_GLOBAL_VARIABLES BLOQUE  SEM_ENDFUNC\n           | FUNCS FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC '(' PARAMS ')' DEC_V SEM_ADD_GLOBAL_VARIABLES BLOQUE   SEM_ENDFUNC\n           | FUNCS FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC '(' ')' DEC_V SEM_ADD_GLOBAL_VARIABLES BLOQUE  SEM_ENDFUNC\n           | FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC '(' ')' SEM_ADD_GLOBAL_VARIABLES BLOQUE  SEM_ENDFUNC \n           | FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC '(' PARAMS ')' SEM_ADD_GLOBAL_VARIABLES BLOQUE  SEM_ENDFUNC \n           | FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC '(' PARAMS ')' DEC_V SEM_ADD_GLOBAL_VARIABLES BLOQUE  SEM_ENDFUNC \n           | FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC '(' ')' DEC_V SEM_ADD_GLOBAL_VARIABLES BLOQUE  SEM_ENDFUNC \n\n    \n    FUNC_TYPES :  char\n                 | float \n                 | int\n                 | void\n    \n    PARAMS : PARAMS ',' TIPO_SIMPLE PARAM_NAME\n            | TIPO_SIMPLE PARAM_NAME\n    \n  PARAM_NAME : id\n  \n    VARIABLE_FIX : id '[' cte_i ']' \n                  | id\n    \n    VARIABLE : SEM_ID_FOR_ARRAY '[' EXPRESION SEM_CHECK_ARRAY ']' \n              | id\n    \n  SEM_ID_FOR_ARRAY : id\n    \n  SEM_CHECK_ARRAY : \n  \n    BLOQUE : '{' LOOP_ESTATUTO return EXPRESION SEM_VERIFY_RETURN_FUNC ';' '}' \n              | '{' LOOP_ESTATUTO '}' \n              | '{' return EXPRESION SEM_VERIFY_RETURN_FUNC ';' '}' \n              | '{' '}'\n    \n    LOOP_ESTATUTO : LOOP_ESTATUTO ESTATUTO \n                    | ESTATUTO\n    \n    EXPRESION :  EXPRESION SEM_PENDING_LOGIC_OP  and  SEM_ADD_AND  EXP_R  SEM_PENDING_LOGIC_OP\n                | EXPRESION SEM_PENDING_LOGIC_OP  or  SEM_ADD_OR   EXP_R  SEM_PENDING_LOGIC_OP\n                | EXP_R \n    \n    EXP_R :  EXP_A '>' SEM_ADD_GREATER_THAN   EXP_A   SEM_PENDING_REL_OP\n            | EXP_A '<' SEM_ADD_LESS_THAN   EXP_A   SEM_PENDING_REL_OP\n            | EXP_A equals SEM_ADD_EQUALS_TO   EXP_A    SEM_PENDING_REL_OP\n            | EXP_A not_equals SEM_ADD_NOT_EQUALS_TO   EXP_A   SEM_PENDING_REL_OP\n            | EXP_A \n    \n    EXP_A :  EXP_A SEM_PENDING_EXPA_OP '+' SEM_ADD_PLUS TERMINO SEM_PENDING_EXPA_OP\n            | EXP_A SEM_PENDING_EXPA_OP minus SEM_ADD_MINUS TERMINO SEM_PENDING_EXPA_OP\n            | TERMINO \n    \n    TERMINO : TERMINO SEM_PENDING_TERMINO_OP '*' SEM_ADD_TIMES  FACTOR  SEM_PENDING_TERMINO_OP\n             | TERMINO SEM_PENDING_TERMINO_OP '/' SEM_ADD_DIVISION  FACTOR  SEM_PENDING_TERMINO_OP\n             | FACTOR \n    \n    ESTATUTO : ASIGNACION ';' \n              | CONDICION \n              | WHILE \n              | FOR \n              |  '/' SEM_MUST_BE_VOID_CALL LLAMADA ';' \n              | LECTURA ';'  \n              | ESCRITURA ';' \n              | LLAMADA_BI ';'\n    \n    FACTOR : LLAMADA \n            | CTE  \n            | VARIABLE \n            | '(' SEM_ADD_FONDO_FALSO EXPRESION ')' SEM_REMOVE_FONDO_FALSO\n    \n    CTE : cte_i \n         | cte_f \n         | cte_c\n    \n    LLAMADA :   SEM_VERIFY_FUNC_CALL '(' SEM_ADD_FONDO_FALSO LLAMADA_OPTS SEM_RESET_PARAM_COUNT ')' SEM_REMOVE_FONDO_FALSO SEM_ADD_GOSUB\n             |  SEM_VERIFY_FUNC_CALL '(' ')' SEM_ADD_GOSUB\n    \n    LLAMADA_OPTS : LLAMADA_OPTS ',' EXPRESION SEM_VERIFY_PARAM\n                 | EXPRESION SEM_VERIFY_PARAM\n    \n    ASIGNACION : VARIABLE '=' SEM_ADD_EQUALS EXPRESION SEM_PENDING_ASSIGNATION_OP\n    \n    CONDICION : if '(' EXPRESION ')' SEM_ADD_GOTOF then BLOQUE SEM_FILL_GOTO_ANYKIND \n               | if '(' EXPRESION ')' SEM_ADD_GOTOF then BLOQUE else SEM_ADD_GOTO_SIMPLE BLOQUE SEM_FILL_GOTO_ANYKIND\n    \n    WHILE : while  SEM_ADD_COND_INDEX '(' EXPRESION ')' SEM_ADD_GOTOF do BLOQUE SEM_ADD_GOTO_SIMPLE SEM_FILL_GOTO_COND_INDEX\n    \n    FOR : for ASIGNACION to SEM_ADD_COND_INDEX EXPRESION SEM_ADD_GOTOV do BLOQUE SEM_ADD_GOTO_SIMPLE SEM_FILL_GOTO_COND_INDEX\n    \n    LECTURA : read '(' LECTURA_OPTS ')'\n    \n    LECTURA_OPTS : LECTURA_OPTS ',' VARIABLE SEM_ADD_READ\n                  |  VARIABLE SEM_ADD_READ\n    \n    ESCRITURA : write '(' ESCRITURA_OPTS ')'\n    \n    ESCRITURA_OPTS :   ESCRITURA_OPTS ',' SEM_ADD_PRINT_CTE_S\n                       | ESCRITURA_OPTS ',' EXPRESION SEM_ADD_PRINT\n                       | SEM_ADD_PRINT_CTE_S \n                       | EXPRESION SEM_ADD_PRINT\n    \n    LLAMADA_BI :   POINT \n                 | CIRCLE\n                 | PENUP\n                 | PENDOWN \n                 | COLOR \n                 | SIZE \n                 | CLEAR\n    \n    CLEAR : clear '(' ')' DO_CLEAR\n    \n    POINT : point '(' EXPRESION ',' EXPRESION ')' DRAW_POINT\n    \n    CIRCLE : circle '(' EXPRESION ')' DRAW_CIRCLE\n    \n    PENUP : penup '(' ')' DO_PENUP\n    \n    PENDOWN : pendown '(' ')' DO_PENDOWN\n    \n    COLOR : color '(' DO_COLOR ')' \n    \n    SIZE : size '(' EXPRESION ')' DO_SIZE\n    \n    SEM_GLOBAL_NAME : id\n  \n    SEM_MAIN_NAME : main\n  \n    SEM_FUNC_NAME : id\n  \n  SEM_ADD_FUNC : \n  \n  SEM_ADD_GLOBAL_VARIABLES : \n  \n  SEM_ADD_PLUS : \n  \n  SEM_ADD_MINUS : \n  \n  SEM_ADD_TIMES : \n  \n  SEM_ADD_DIVISION : \n  \n  SEM_ADD_EQUALS : \n  \n  SEM_ADD_FONDO_FALSO : \n  \n  SEM_REMOVE_FONDO_FALSO : \n  \n  SEM_ADD_GREATER_THAN : \n  \n  SEM_ADD_LESS_THAN : \n  \n  SEM_ADD_EQUALS_TO : \n  \n  SEM_ADD_NOT_EQUALS_TO : \n  \n  SEM_ADD_AND : \n  \n  SEM_ADD_OR : \n  \n  SEM_ADD_GOTOF : \n  \n  SEM_FILL_GOTO_ANYKIND : \n  \n    SEM_FILL_MAIN_GOTO : \n  \n  SEM_ADD_GOTO_SIMPLE : \n  \n  SEM_ADD_COND_INDEX : \n  \n  SEM_FILL_GOTO_COND_INDEX : \n  \n  SEM_ADD_GOTOV : \n  \n  SEM_ADD_GOTO_MAIN : \n  \n  SEM_ENDFUNC : \n  \n    SEM_VERIFY_FUNC_CALL : id \n    \n    SEM_VERIFY_PARAM :\n    \n    SEM_RESET_PARAM_COUNT :\n    \n    SEM_ADD_GOSUB :\n    \n    SEM_VERIFY_RETURN_FUNC :\n    \n    SEM_MUST_BE_VOID_CALL :\n    \n    SEM_ADD_PRINT :\n    \n    SEM_ADD_PRINT_CTE_S : cte_s\n    \n    SEM_ADD_READ : \n    \n  SEM_PENDING_EXPA_OP : \n  \n  SEM_PENDING_TERMINO_OP : \n  \n  SEM_PENDING_ASSIGNATION_OP : \n  \n  SEM_PENDING_REL_OP : \n  \n  SEM_PENDING_LOGIC_OP : \n  \n  DRAW_POINT :\n  \n  DRAW_CIRCLE :\n  \n  DO_PENUP :\n  \n  DO_PENDOWN :\n  \n  DO_COLOR : cte_s\n  \n  DO_CLEAR :\n  \n  DO_SIZE :\n  "
    
_lr_action_items = {'program':([0,2,],[-126,3,]),'$end':([1,9,19,60,74,116,235,261,],[0,-2,-1,-6,-38,-36,-37,-35,]),'id':([3,26,27,28,29,31,33,36,47,57,61,72,73,74,75,77,78,79,80,87,110,115,116,117,126,132,133,134,135,136,137,138,141,142,143,144,145,149,163,164,165,166,169,170,173,175,176,200,201,202,203,204,205,206,207,208,209,211,213,217,219,222,225,235,236,237,242,243,244,245,261,274,290,296,298,299,302,303,304,305,306,307,],[5,-11,-12,-13,35,35,41,41,41,68,98,98,131,-38,-40,-56,-57,-58,-133,98,68,131,-36,-39,-111,-55,172,-60,-61,-62,-110,131,98,131,131,131,131,131,-113,-114,-115,-116,131,-111,131,131,-123,-117,-118,131,131,131,131,-106,-107,-108,-109,131,-59,131,98,131,131,-37,131,131,131,131,131,131,-35,131,-120,-75,-122,-122,-124,-124,-120,-77,-78,-76,]),';':([4,5,6,39,40,41,43,53,62,76,81,82,83,90,91,92,93,94,95,96,118,119,120,121,122,123,124,125,128,129,130,131,160,161,171,186,187,191,198,212,214,218,221,226,227,228,229,230,231,238,239,240,241,246,249,250,257,259,260,262,263,264,265,266,267,268,269,270,271,272,281,282,283,284,285,286,287,288,293,294,300,],[-104,-101,7,46,-10,-30,50,-9,-29,132,134,135,136,-87,-88,-89,-90,-91,-92,-93,-132,-43,-48,-51,-54,-63,-64,-65,-67,-68,-69,-32,-132,199,213,-144,-145,-147,234,-131,-139,-79,-82,-143,-97,-98,-99,-148,-94,-140,-140,-140,-140,-112,-71,-74,-31,-96,-100,-141,-141,-44,-45,-46,-47,-137,-137,-138,-138,-66,-142,-41,-42,-49,-50,-52,-53,-112,-95,-131,-70,]),'var':([7,10,46,50,55,58,64,65,70,71,109,114,],[13,21,-8,-7,13,13,21,13,21,13,21,21,]),'main':([7,8,10,11,12,20,46,50,74,106,111,116,151,152,153,156,157,158,192,193,194,195,196,197,232,233,235,261,],[-121,-121,-4,-5,24,-3,-8,-7,-38,-127,-127,-36,-18,-127,-127,-14,-127,-127,-21,-19,-127,-17,-15,-127,-20,-16,-37,-35,]),'char':([7,10,11,13,20,21,46,49,50,51,66,74,106,111,116,151,152,153,156,157,158,192,193,194,195,196,197,232,233,235,261,],[15,15,15,28,15,28,-8,28,-7,28,28,-38,-127,-127,-36,-18,-127,-127,-14,-127,-127,-21,-19,-127,-17,-15,-127,-20,-16,-37,-35,]),'float':([7,10,11,13,20,21,46,49,50,51,66,74,106,111,116,151,152,153,156,157,158,192,193,194,195,196,197,232,233,235,261,],[16,16,16,27,16,27,-8,27,-7,27,27,-38,-127,-127,-36,-18,-127,-127,-14,-127,-127,-21,-19,-127,-17,-15,-127,-20,-16,-37,-35,]),'int':([7,10,11,13,20,21,46,49,50,51,66,74,106,111,116,151,152,153,156,157,158,192,193,194,195,196,197,232,233,235,261,],[17,17,17,26,17,26,-8,26,-7,26,26,-38,-127,-127,-36,-18,-127,-127,-14,-127,-127,-21,-19,-127,-17,-15,-127,-20,-16,-37,-35,]),'void':([7,10,11,20,46,50,74,106,111,116,151,152,153,156,157,158,192,193,194,195,196,197,232,233,235,261,],[18,18,18,18,-8,-7,-38,-127,-127,-36,-18,-127,-127,-14,-127,-127,-21,-19,-127,-17,-15,-127,-20,-16,-37,-35,]),'module':([14,15,16,17,18,22,],[29,-22,-23,-24,-25,31,]),'(':([23,24,32,34,35,37,42,44,73,85,86,88,89,99,100,101,102,103,104,105,115,126,127,131,137,138,139,142,143,144,145,149,163,164,165,166,169,170,172,173,175,176,200,201,202,203,204,205,206,207,208,209,211,217,222,225,236,237,242,243,244,245,274,],[-104,-102,38,-104,-103,-104,49,51,126,138,-123,141,142,144,145,146,147,148,149,150,126,-111,170,-128,-110,126,175,126,126,126,126,126,-113,-114,-115,-116,126,-111,-128,126,126,-123,-117,-118,126,126,126,126,-106,-107,-108,-109,126,126,126,126,126,126,126,126,126,126,126,]),':':([25,26,27,28,30,],[33,-11,-12,-13,36,]),')':([38,49,51,56,59,67,68,98,119,120,121,122,123,124,125,128,129,130,131,146,147,150,155,170,174,177,178,179,180,181,182,185,188,189,190,210,212,216,220,223,238,239,240,241,246,247,248,249,254,255,256,257,258,262,263,264,265,266,267,268,269,270,271,272,273,275,279,280,282,283,284,285,286,287,288,289,294,295,300,],[45,55,58,65,71,-27,-28,-32,-43,-48,-51,-54,-63,-64,-65,-67,-68,-69,-32,186,187,191,-26,212,215,218,-136,221,-85,-134,-135,226,229,-146,230,246,-131,252,-81,-86,-140,-140,-140,-140,-112,-130,-129,-71,-136,-83,-134,-31,281,-141,-141,-44,-45,-46,-47,-137,-137,-138,-138,-66,288,-73,-80,-84,-41,-42,-49,-50,-52,-53,-112,-129,-131,-72,-70,]),',':([39,40,41,43,53,56,59,62,67,68,98,119,120,121,122,123,124,125,128,129,130,131,155,177,178,179,180,181,182,184,212,220,223,238,239,240,241,246,247,248,249,254,255,256,257,262,263,264,265,266,267,268,269,270,271,272,275,279,280,282,283,284,285,286,287,288,289,294,295,300,],[47,-10,-30,47,-9,66,66,-29,-27,-28,-32,-43,-48,-51,-54,-63,-64,-65,-67,-68,-69,-32,-26,219,-136,222,-85,-134,-135,225,-131,-81,-86,-140,-140,-140,-140,-112,274,-129,-71,-136,-83,-134,-31,-141,-141,-44,-45,-46,-47,-137,-137,-138,-138,-66,-73,-80,-84,-41,-42,-49,-50,-52,-53,-112,-129,-131,-72,-70,]),'[':([41,97,98,131,],[48,143,-33,-33,]),'{':([45,46,50,52,55,58,63,64,65,69,70,71,107,108,109,112,113,114,154,159,276,291,292,297,301,],[-105,-8,-7,61,-105,-105,61,-105,-105,61,-105,-105,61,61,-105,61,61,-105,61,61,61,61,61,-122,61,]),'cte_i':([48,73,115,126,137,138,142,143,144,145,149,163,164,165,166,169,170,173,175,176,200,201,202,203,204,205,206,207,208,209,211,217,222,225,236,237,242,243,244,245,274,],[54,128,128,-111,-110,128,128,128,128,128,128,-113,-114,-115,-116,128,-111,128,128,-123,-117,-118,128,128,128,128,-106,-107,-108,-109,128,128,128,128,128,128,128,128,128,128,128,]),']':([54,119,120,121,122,123,124,125,128,129,130,131,183,212,224,238,239,240,241,246,249,257,262,263,264,265,266,267,268,269,270,271,272,282,283,284,285,286,287,288,294,300,],[62,-43,-48,-51,-54,-63,-64,-65,-67,-68,-69,-32,-34,-131,257,-140,-140,-140,-140,-112,-71,-31,-141,-141,-44,-45,-46,-47,-137,-137,-138,-138,-66,-41,-42,-49,-50,-52,-53,-112,-131,-70,]),'return':([61,72,74,75,77,78,79,116,117,132,134,135,136,213,235,261,290,296,298,299,302,303,304,305,306,307,],[73,115,-38,-40,-56,-57,-58,-36,-39,-55,-60,-61,-62,-59,-37,-35,-120,-75,-122,-122,-124,-124,-120,-77,-78,-76,]),'}':([61,72,74,75,77,78,79,116,117,132,134,135,136,199,213,234,235,261,290,296,298,299,302,303,304,305,306,307,],[74,116,-38,-40,-56,-57,-58,-36,-39,-55,-60,-61,-62,235,-59,261,-37,-35,-120,-75,-122,-122,-124,-124,-120,-77,-78,-76,]),'/':([61,72,74,75,77,78,79,116,117,121,122,123,124,125,128,129,130,131,132,134,135,136,168,212,213,235,246,249,257,261,268,269,270,271,272,286,287,288,290,294,296,298,299,300,302,303,304,305,306,307,],[80,80,-38,-40,-56,-57,-58,-36,-39,-138,-54,-63,-64,-65,-67,-68,-69,-32,-55,-60,-61,-62,209,-131,-59,-37,-112,-71,-31,-35,-138,-138,-138,-138,-66,-52,-53,-112,-120,-131,-75,-122,-122,-70,-124,-124,-120,-77,-78,-76,]),'if':([61,72,74,75,77,78,79,116,117,132,134,135,136,213,235,261,290,296,298,299,302,303,304,305,306,307,],[85,85,-38,-40,-56,-57,-58,-36,-39,-55,-60,-61,-62,-59,-37,-35,-120,-75,-122,-122,-124,-124,-120,-77,-78,-76,]),'while':([61,72,74,75,77,78,79,116,117,132,134,135,136,213,235,261,290,296,298,299,302,303,304,305,306,307,],[86,86,-38,-40,-56,-57,-58,-36,-39,-55,-60,-61,-62,-59,-37,-35,-120,-75,-122,-122,-124,-124,-120,-77,-78,-76,]),'for':([61,72,74,75,77,78,79,116,117,132,134,135,136,213,235,261,290,296,298,299,302,303,304,305,306,307,],[87,87,-38,-40,-56,-57,-58,-36,-39,-55,-60,-61,-62,-59,-37,-35,-120,-75,-122,-122,-124,-124,-120,-77,-78,-76,]),'read':([61,72,74,75,77,78,79,116,117,132,134,135,136,213,235,261,290,296,298,299,302,303,304,305,306,307,],[88,88,-38,-40,-56,-57,-58,-36,-39,-55,-60,-61,-62,-59,-37,-35,-120,-75,-122,-122,-124,-124,-120,-77,-78,-76,]),'write':([61,72,74,75,77,78,79,116,117,132,134,135,136,213,235,261,290,296,298,299,302,303,304,305,306,307,],[89,89,-38,-40,-56,-57,-58,-36,-39,-55,-60,-61,-62,-59,-37,-35,-120,-75,-122,-122,-124,-124,-120,-77,-78,-76,]),'point':([61,72,74,75,77,78,79,116,117,132,134,135,136,213,235,261,290,296,298,299,302,303,304,305,306,307,],[99,99,-38,-40,-56,-57,-58,-36,-39,-55,-60,-61,-62,-59,-37,-35,-120,-75,-122,-122,-124,-124,-120,-77,-78,-76,]),'circle':([61,72,74,75,77,78,79,116,117,132,134,135,136,213,235,261,290,296,298,299,302,303,304,305,306,307,],[100,100,-38,-40,-56,-57,-58,-36,-39,-55,-60,-61,-62,-59,-37,-35,-120,-75,-122,-122,-124,-124,-120,-77,-78,-76,]),'penup':([61,72,74,75,77,78,79,116,117,132,134,135,136,213,235,261,290,296,298,299,302,303,304,305,306,307,],[101,101,-38,-40,-56,-57,-58,-36,-39,-55,-60,-61,-62,-59,-37,-35,-120,-75,-122,-122,-124,-124,-120,-77,-78,-76,]),'pendown':([61,72,74,75,77,78,79,116,117,132,134,135,136,213,235,261,290,296,298,299,302,303,304,305,306,307,],[102,102,-38,-40,-56,-57,-58,-36,-39,-55,-60,-61,-62,-59,-37,-35,-120,-75,-122,-122,-124,-124,-120,-77,-78,-76,]),'color':([61,72,74,75,77,78,79,116,117,132,134,135,136,213,235,261,290,296,298,299,302,303,304,305,306,307,],[103,103,-38,-40,-56,-57,-58,-36,-39,-55,-60,-61,-62,-59,-37,-35,-120,-75,-122,-122,-124,-124,-120,-77,-78,-76,]),'size':([61,72,74,75,77,78,79,116,117,132,134,135,136,213,235,261,290,296,298,299,302,303,304,305,306,307,],[104,104,-38,-40,-56,-57,-58,-36,-39,-55,-60,-61,-62,-59,-37,-35,-120,-75,-122,-122,-124,-124,-120,-77,-78,-76,]),'clear':([61,72,74,75,77,78,79,116,117,132,134,135,136,213,235,261,290,296,298,299,302,303,304,305,306,307,],[105,105,-38,-40,-56,-57,-58,-36,-39,-55,-60,-61,-62,-59,-37,-35,-120,-75,-122,-122,-124,-124,-120,-77,-78,-76,]),'cte_f':([73,115,126,137,138,142,143,144,145,149,163,164,165,166,169,170,173,175,176,200,201,202,203,204,205,206,207,208,209,211,217,222,225,236,237,242,243,244,245,274,],[129,129,-111,-110,129,129,129,129,129,129,-113,-114,-115,-116,129,-111,129,129,-123,-117,-118,129,129,129,129,-106,-107,-108,-109,129,129,129,129,129,129,129,129,129,129,129,]),'cte_c':([73,115,126,137,138,142,143,144,145,149,163,164,165,166,169,170,173,175,176,200,201,202,203,204,205,206,207,208,209,211,217,222,225,236,237,242,243,244,245,274,],[130,130,-111,-110,130,130,130,130,130,130,-113,-114,-115,-116,130,-111,130,130,-123,-117,-118,130,130,130,130,-106,-107,-108,-109,130,130,130,130,130,130,130,130,130,130,130,]),'else':([74,116,235,261,290,],[-38,-36,-37,-35,297,]),'=':([84,98,257,],[137,-32,-31,]),'and':([118,119,120,121,122,123,124,125,128,129,130,131,160,162,174,181,183,184,185,190,210,212,214,216,238,239,240,241,246,248,249,253,256,257,258,262,263,264,265,266,267,268,269,270,271,272,282,283,284,285,286,287,288,289,294,300,],[-141,-43,-48,-51,-54,-63,-64,-65,-67,-68,-69,-32,-141,200,-141,-141,-141,-141,-141,-141,-141,-131,-141,-141,-140,-140,-140,-140,-112,-141,-71,-141,-141,-31,-141,-141,-141,-44,-45,-46,-47,-137,-137,-138,-138,-66,-41,-42,-49,-50,-52,-53,-112,-141,-131,-70,]),'or':([118,119,120,121,122,123,124,125,128,129,130,131,160,162,174,181,183,184,185,190,210,212,214,216,238,239,240,241,246,248,249,253,256,257,258,262,263,264,265,266,267,268,269,270,271,272,282,283,284,285,286,287,288,289,294,300,],[-141,-43,-48,-51,-54,-63,-64,-65,-67,-68,-69,-32,-141,201,-141,-141,-141,-141,-141,-141,-141,-131,-141,-141,-140,-140,-140,-140,-112,-141,-71,-141,-141,-31,-141,-141,-141,-44,-45,-46,-47,-137,-137,-138,-138,-66,-41,-42,-49,-50,-52,-53,-112,-141,-131,-70,]),'to':([119,120,121,122,123,124,125,128,129,130,131,140,212,214,238,239,240,241,246,249,250,257,262,263,264,265,266,267,268,269,270,271,272,282,283,284,285,286,287,288,294,300,],[-43,-48,-51,-54,-63,-64,-65,-67,-68,-69,-32,176,-131,-139,-140,-140,-140,-140,-112,-71,-74,-31,-141,-141,-44,-45,-46,-47,-137,-137,-138,-138,-66,-41,-42,-49,-50,-52,-53,-112,-131,-70,]),'do':([119,120,121,122,123,124,125,128,129,130,131,212,238,239,240,241,246,249,252,253,257,262,263,264,265,266,267,268,269,270,271,272,277,278,282,283,284,285,286,287,288,294,300,],[-43,-48,-51,-54,-63,-64,-65,-67,-68,-69,-32,-131,-140,-140,-140,-140,-112,-71,-119,-125,-31,-141,-141,-44,-45,-46,-47,-137,-137,-138,-138,-66,291,292,-41,-42,-49,-50,-52,-53,-112,-131,-70,]),'>':([120,121,122,123,124,125,128,129,130,131,212,246,249,257,268,269,270,271,272,284,285,286,287,288,294,300,],[163,-51,-54,-63,-64,-65,-67,-68,-69,-32,-131,-112,-71,-31,-137,-137,-138,-138,-66,-49,-50,-52,-53,-112,-131,-70,]),'<':([120,121,122,123,124,125,128,129,130,131,212,246,249,257,268,269,270,271,272,284,285,286,287,288,294,300,],[164,-51,-54,-63,-64,-65,-67,-68,-69,-32,-131,-112,-71,-31,-137,-137,-138,-138,-66,-49,-50,-52,-53,-112,-131,-70,]),'equals':([120,121,122,123,124,125,128,129,130,131,212,246,249,257,268,269,270,271,272,284,285,286,287,288,294,300,],[165,-51,-54,-63,-64,-65,-67,-68,-69,-32,-131,-112,-71,-31,-137,-137,-138,-138,-66,-49,-50,-52,-53,-112,-131,-70,]),'not_equals':([120,121,122,123,124,125,128,129,130,131,212,246,249,257,268,269,270,271,272,284,285,286,287,288,294,300,],[166,-51,-54,-63,-64,-65,-67,-68,-69,-32,-131,-112,-71,-31,-137,-137,-138,-138,-66,-49,-50,-52,-53,-112,-131,-70,]),'+':([120,121,122,123,124,125,128,129,130,131,167,212,238,239,240,241,246,249,257,268,269,270,271,272,284,285,286,287,288,294,300,],[-137,-51,-54,-63,-64,-65,-67,-68,-69,-32,206,-131,-137,-137,-137,-137,-112,-71,-31,-137,-137,-138,-138,-66,-49,-50,-52,-53,-112,-131,-70,]),'minus':([120,121,122,123,124,125,128,129,130,131,167,212,238,239,240,241,246,249,257,268,269,270,271,272,284,285,286,287,288,294,300,],[-137,-51,-54,-63,-64,-65,-67,-68,-69,-32,207,-131,-137,-137,-137,-137,-112,-71,-31,-137,-137,-138,-138,-66,-49,-50,-52,-53,-112,-131,-70,]),'*':([121,122,123,124,125,128,129,130,131,168,212,246,249,257,268,269,270,271,272,286,287,288,294,300,],[-138,-54,-63,-64,-65,-67,-68,-69,-32,208,-131,-112,-71,-31,-138,-138,-138,-138,-66,-52,-53,-112,-131,-70,]),'cte_s':([142,148,222,],[182,189,182,]),'then':([215,251,],[-119,276,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAMA':([0,],[1,]),'SEM_ADD_GOTO_MAIN':([0,],[2,]),'SEM_GLOBAL_NAME':([3,],[4,]),'SEM_ADD_FUNC':([4,23,34,37,],[6,32,42,44,]),'PROGRAMA_OPTS':([7,],[8,]),'PRINCIPAL':([7,8,],[9,19,]),'DEC_V':([7,55,58,65,71,],[10,64,70,109,114,]),'FUNCS':([7,10,],[11,20,]),'SEM_FILL_MAIN_GOTO':([7,8,],[12,12,]),'FUNC_TYPES':([7,10,11,20,],[14,14,22,22,]),'SEM_MAIN_NAME':([12,],[23,]),'TIPO_SIMPLE':([13,21,49,51,66,],[25,30,57,57,110,]),'SEM_FUNC_NAME':([29,31,],[34,37,]),'LISTA_VAR':([33,36,],[39,43,]),'VARIABLE_FIX':([33,36,47,],[40,40,53,]),'SEM_ADD_GLOBAL_VARIABLES':([45,55,58,64,65,70,71,109,114,],[52,63,69,107,108,112,113,154,159,]),'PARAMS':([49,51,],[56,59,]),'BLOQUE':([52,63,69,107,108,112,113,154,159,276,291,292,301,],[60,106,111,152,153,157,158,194,197,290,298,299,304,]),'PARAM_NAME':([57,110,],[67,155,]),'LOOP_ESTATUTO':([61,],[72,]),'ESTATUTO':([61,72,],[75,117,]),'ASIGNACION':([61,72,87,],[76,76,140,]),'CONDICION':([61,72,],[77,77,]),'WHILE':([61,72,],[78,78,]),'FOR':([61,72,],[79,79,]),'LECTURA':([61,72,],[81,81,]),'ESCRITURA':([61,72,],[82,82,]),'LLAMADA_BI':([61,72,],[83,83,]),'VARIABLE':([61,72,73,87,115,138,141,142,143,144,145,149,169,173,175,202,203,204,205,211,217,219,222,225,236,237,242,243,244,245,274,],[84,84,125,84,125,125,178,125,125,125,125,125,125,125,125,125,125,125,125,125,125,254,125,125,125,125,125,125,125,125,125,]),'POINT':([61,72,],[90,90,]),'CIRCLE':([61,72,],[91,91,]),'PENUP':([61,72,],[92,92,]),'PENDOWN':([61,72,],[93,93,]),'COLOR':([61,72,],[94,94,]),'SIZE':([61,72,],[95,95,]),'CLEAR':([61,72,],[96,96,]),'SEM_ID_FOR_ARRAY':([61,72,73,87,115,138,141,142,143,144,145,149,169,173,175,202,203,204,205,211,217,219,222,225,236,237,242,243,244,245,274,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'EXPRESION':([73,115,138,142,143,144,145,149,169,173,175,211,217,222,225,274,],[118,160,174,181,183,184,185,190,210,214,216,248,253,256,258,289,]),'EXP_R':([73,115,138,142,143,144,145,149,169,173,175,211,217,222,225,236,237,274,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,262,263,119,]),'EXP_A':([73,115,138,142,143,144,145,149,169,173,175,202,203,204,205,211,217,222,225,236,237,274,],[120,120,120,120,120,120,120,120,120,120,120,238,239,240,241,120,120,120,120,120,120,120,]),'TERMINO':([73,115,138,142,143,144,145,149,169,173,175,202,203,204,205,211,217,222,225,236,237,242,243,274,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,268,269,121,]),'FACTOR':([73,115,138,142,143,144,145,149,169,173,175,202,203,204,205,211,217,222,225,236,237,242,243,244,245,274,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,270,271,122,]),'LLAMADA':([73,115,133,138,142,143,144,145,149,169,173,175,202,203,204,205,211,217,222,225,236,237,242,243,244,245,274,],[123,123,171,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,]),'CTE':([73,115,138,142,143,144,145,149,169,173,175,202,203,204,205,211,217,222,225,236,237,242,243,244,245,274,],[124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'SEM_VERIFY_FUNC_CALL':([73,115,133,138,142,143,144,145,149,169,173,175,202,203,204,205,211,217,222,225,236,237,242,243,244,245,274,],[127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,]),'SEM_MUST_BE_VOID_CALL':([80,],[133,]),'SEM_ADD_COND_INDEX':([86,176,],[139,217,]),'SEM_ENDFUNC':([106,111,152,153,157,158,194,197,],[151,156,192,193,195,196,232,233,]),'SEM_VERIFY_RETURN_FUNC':([118,160,],[161,198,]),'SEM_PENDING_LOGIC_OP':([118,160,174,181,183,184,185,190,210,214,216,248,253,256,258,262,263,289,],[162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,282,283,162,]),'SEM_PENDING_EXPA_OP':([120,238,239,240,241,268,269,],[167,167,167,167,167,284,285,]),'SEM_PENDING_TERMINO_OP':([121,268,269,270,271,],[168,168,168,286,287,]),'SEM_ADD_FONDO_FALSO':([126,170,],[169,211,]),'SEM_ADD_EQUALS':([137,],[173,]),'LECTURA_OPTS':([141,],[177,]),'ESCRITURA_OPTS':([142,],[179,]),'SEM_ADD_PRINT_CTE_S':([142,222,],[180,255,]),'DO_COLOR':([148,],[188,]),'SEM_ADD_GREATER_THAN':([163,],[202,]),'SEM_ADD_LESS_THAN':([164,],[203,]),'SEM_ADD_EQUALS_TO':([165,],[204,]),'SEM_ADD_NOT_EQUALS_TO':([166,],[205,]),'SEM_ADD_READ':([178,254,],[220,279,]),'SEM_ADD_PRINT':([181,256,],[223,280,]),'SEM_CHECK_ARRAY':([183,],[224,]),'DO_PENUP':([186,],[227,]),'DO_PENDOWN':([187,],[228,]),'DO_CLEAR':([191,],[231,]),'SEM_ADD_AND':([200,],[236,]),'SEM_ADD_OR':([201,],[237,]),'SEM_ADD_PLUS':([206,],[242,]),'SEM_ADD_MINUS':([207,],[243,]),'SEM_ADD_TIMES':([208,],[244,]),'SEM_ADD_DIVISION':([209,],[245,]),'LLAMADA_OPTS':([211,],[247,]),'SEM_ADD_GOSUB':([212,294,],[249,300,]),'SEM_PENDING_ASSIGNATION_OP':([214,],[250,]),'SEM_ADD_GOTOF':([215,252,],[251,277,]),'DRAW_CIRCLE':([226,],[259,]),'DO_SIZE':([230,],[260,]),'SEM_PENDING_REL_OP':([238,239,240,241,],[264,265,266,267,]),'SEM_REMOVE_FONDO_FALSO':([246,288,],[272,294,]),'SEM_RESET_PARAM_COUNT':([247,],[273,]),'SEM_VERIFY_PARAM':([248,289,],[275,295,]),'SEM_ADD_GOTOV':([253,],[278,]),'DRAW_POINT':([281,],[293,]),'SEM_FILL_GOTO_ANYKIND':([290,304,],[296,307,]),'SEM_ADD_GOTO_SIMPLE':([297,298,299,],[301,302,303,]),'SEM_FILL_GOTO_COND_INDEX':([302,303,],[305,306,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAMA","S'",1,None,None,None),
  ('PROGRAMA -> SEM_ADD_GOTO_MAIN program SEM_GLOBAL_NAME SEM_ADD_FUNC ; PROGRAMA_OPTS PRINCIPAL','PROGRAMA',7,'p_programa','memyselfcompiler.py',74),
  ('PROGRAMA -> SEM_ADD_GOTO_MAIN program SEM_GLOBAL_NAME SEM_ADD_FUNC ; PRINCIPAL','PROGRAMA',6,'p_programa','memyselfcompiler.py',75),
  ('PROGRAMA_OPTS -> DEC_V FUNCS','PROGRAMA_OPTS',2,'p_programa_opts','memyselfcompiler.py',94),
  ('PROGRAMA_OPTS -> DEC_V','PROGRAMA_OPTS',1,'p_programa_opts','memyselfcompiler.py',95),
  ('PROGRAMA_OPTS -> FUNCS','PROGRAMA_OPTS',1,'p_programa_opts','memyselfcompiler.py',96),
  ('PRINCIPAL -> SEM_FILL_MAIN_GOTO SEM_MAIN_NAME SEM_ADD_FUNC ( ) SEM_ADD_GLOBAL_VARIABLES BLOQUE','PRINCIPAL',7,'p_principal','memyselfcompiler.py',102),
  ('DEC_V -> DEC_V var TIPO_SIMPLE : LISTA_VAR ;','DEC_V',6,'p_dec_v','memyselfcompiler.py',107),
  ('DEC_V -> var TIPO_SIMPLE : LISTA_VAR ;','DEC_V',5,'p_dec_v','memyselfcompiler.py',108),
  ('LISTA_VAR -> LISTA_VAR , VARIABLE_FIX','LISTA_VAR',3,'p_lista_var','memyselfcompiler.py',116),
  ('LISTA_VAR -> VARIABLE_FIX','LISTA_VAR',1,'p_lista_var','memyselfcompiler.py',117),
  ('TIPO_SIMPLE -> int','TIPO_SIMPLE',1,'p_tipo_simple','memyselfcompiler.py',122),
  ('TIPO_SIMPLE -> float','TIPO_SIMPLE',1,'p_tipo_simple','memyselfcompiler.py',123),
  ('TIPO_SIMPLE -> char','TIPO_SIMPLE',1,'p_tipo_simple','memyselfcompiler.py',124),
  ('FUNCS -> FUNCS FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC ( ) SEM_ADD_GLOBAL_VARIABLES BLOQUE SEM_ENDFUNC','FUNCS',10,'p_funcs','memyselfcompiler.py',133),
  ('FUNCS -> FUNCS FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC ( PARAMS ) SEM_ADD_GLOBAL_VARIABLES BLOQUE SEM_ENDFUNC','FUNCS',11,'p_funcs','memyselfcompiler.py',134),
  ('FUNCS -> FUNCS FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC ( PARAMS ) DEC_V SEM_ADD_GLOBAL_VARIABLES BLOQUE SEM_ENDFUNC','FUNCS',12,'p_funcs','memyselfcompiler.py',135),
  ('FUNCS -> FUNCS FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC ( ) DEC_V SEM_ADD_GLOBAL_VARIABLES BLOQUE SEM_ENDFUNC','FUNCS',11,'p_funcs','memyselfcompiler.py',136),
  ('FUNCS -> FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC ( ) SEM_ADD_GLOBAL_VARIABLES BLOQUE SEM_ENDFUNC','FUNCS',9,'p_funcs','memyselfcompiler.py',137),
  ('FUNCS -> FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC ( PARAMS ) SEM_ADD_GLOBAL_VARIABLES BLOQUE SEM_ENDFUNC','FUNCS',10,'p_funcs','memyselfcompiler.py',138),
  ('FUNCS -> FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC ( PARAMS ) DEC_V SEM_ADD_GLOBAL_VARIABLES BLOQUE SEM_ENDFUNC','FUNCS',11,'p_funcs','memyselfcompiler.py',139),
  ('FUNCS -> FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC ( ) DEC_V SEM_ADD_GLOBAL_VARIABLES BLOQUE SEM_ENDFUNC','FUNCS',10,'p_funcs','memyselfcompiler.py',140),
  ('FUNC_TYPES -> char','FUNC_TYPES',1,'p_func_types','memyselfcompiler.py',146),
  ('FUNC_TYPES -> float','FUNC_TYPES',1,'p_func_types','memyselfcompiler.py',147),
  ('FUNC_TYPES -> int','FUNC_TYPES',1,'p_func_types','memyselfcompiler.py',148),
  ('FUNC_TYPES -> void','FUNC_TYPES',1,'p_func_types','memyselfcompiler.py',149),
  ('PARAMS -> PARAMS , TIPO_SIMPLE PARAM_NAME','PARAMS',4,'p_params','memyselfcompiler.py',158),
  ('PARAMS -> TIPO_SIMPLE PARAM_NAME','PARAMS',2,'p_params','memyselfcompiler.py',159),
  ('PARAM_NAME -> id','PARAM_NAME',1,'p_param_name','memyselfcompiler.py',164),
  ('VARIABLE_FIX -> id [ cte_i ]','VARIABLE_FIX',4,'p_variable_fix','memyselfcompiler.py',188),
  ('VARIABLE_FIX -> id','VARIABLE_FIX',1,'p_variable_fix','memyselfcompiler.py',189),
  ('VARIABLE -> SEM_ID_FOR_ARRAY [ EXPRESION SEM_CHECK_ARRAY ]','VARIABLE',5,'p_variable','memyselfcompiler.py',237),
  ('VARIABLE -> id','VARIABLE',1,'p_variable','memyselfcompiler.py',238),
  ('SEM_ID_FOR_ARRAY -> id','SEM_ID_FOR_ARRAY',1,'p_sem_id_for_array','memyselfcompiler.py',259),
  ('SEM_CHECK_ARRAY -> <empty>','SEM_CHECK_ARRAY',0,'p_sem_check_array','memyselfcompiler.py',267),
  ('BLOQUE -> { LOOP_ESTATUTO return EXPRESION SEM_VERIFY_RETURN_FUNC ; }','BLOQUE',7,'p_bloque','memyselfcompiler.py',303),
  ('BLOQUE -> { LOOP_ESTATUTO }','BLOQUE',3,'p_bloque','memyselfcompiler.py',304),
  ('BLOQUE -> { return EXPRESION SEM_VERIFY_RETURN_FUNC ; }','BLOQUE',6,'p_bloque','memyselfcompiler.py',305),
  ('BLOQUE -> { }','BLOQUE',2,'p_bloque','memyselfcompiler.py',306),
  ('LOOP_ESTATUTO -> LOOP_ESTATUTO ESTATUTO','LOOP_ESTATUTO',2,'p_loop_estatuto','memyselfcompiler.py',311),
  ('LOOP_ESTATUTO -> ESTATUTO','LOOP_ESTATUTO',1,'p_loop_estatuto','memyselfcompiler.py',312),
  ('EXPRESION -> EXPRESION SEM_PENDING_LOGIC_OP and SEM_ADD_AND EXP_R SEM_PENDING_LOGIC_OP','EXPRESION',6,'p_expresion','memyselfcompiler.py',317),
  ('EXPRESION -> EXPRESION SEM_PENDING_LOGIC_OP or SEM_ADD_OR EXP_R SEM_PENDING_LOGIC_OP','EXPRESION',6,'p_expresion','memyselfcompiler.py',318),
  ('EXPRESION -> EXP_R','EXPRESION',1,'p_expresion','memyselfcompiler.py',319),
  ('EXP_R -> EXP_A > SEM_ADD_GREATER_THAN EXP_A SEM_PENDING_REL_OP','EXP_R',5,'p_exp_r','memyselfcompiler.py',324),
  ('EXP_R -> EXP_A < SEM_ADD_LESS_THAN EXP_A SEM_PENDING_REL_OP','EXP_R',5,'p_exp_r','memyselfcompiler.py',325),
  ('EXP_R -> EXP_A equals SEM_ADD_EQUALS_TO EXP_A SEM_PENDING_REL_OP','EXP_R',5,'p_exp_r','memyselfcompiler.py',326),
  ('EXP_R -> EXP_A not_equals SEM_ADD_NOT_EQUALS_TO EXP_A SEM_PENDING_REL_OP','EXP_R',5,'p_exp_r','memyselfcompiler.py',327),
  ('EXP_R -> EXP_A','EXP_R',1,'p_exp_r','memyselfcompiler.py',328),
  ('EXP_A -> EXP_A SEM_PENDING_EXPA_OP + SEM_ADD_PLUS TERMINO SEM_PENDING_EXPA_OP','EXP_A',6,'p_exp_a','memyselfcompiler.py',333),
  ('EXP_A -> EXP_A SEM_PENDING_EXPA_OP minus SEM_ADD_MINUS TERMINO SEM_PENDING_EXPA_OP','EXP_A',6,'p_exp_a','memyselfcompiler.py',334),
  ('EXP_A -> TERMINO','EXP_A',1,'p_exp_a','memyselfcompiler.py',335),
  ('TERMINO -> TERMINO SEM_PENDING_TERMINO_OP * SEM_ADD_TIMES FACTOR SEM_PENDING_TERMINO_OP','TERMINO',6,'p_termino','memyselfcompiler.py',340),
  ('TERMINO -> TERMINO SEM_PENDING_TERMINO_OP / SEM_ADD_DIVISION FACTOR SEM_PENDING_TERMINO_OP','TERMINO',6,'p_termino','memyselfcompiler.py',341),
  ('TERMINO -> FACTOR','TERMINO',1,'p_termino','memyselfcompiler.py',342),
  ('ESTATUTO -> ASIGNACION ;','ESTATUTO',2,'p_estatuto','memyselfcompiler.py',347),
  ('ESTATUTO -> CONDICION','ESTATUTO',1,'p_estatuto','memyselfcompiler.py',348),
  ('ESTATUTO -> WHILE','ESTATUTO',1,'p_estatuto','memyselfcompiler.py',349),
  ('ESTATUTO -> FOR','ESTATUTO',1,'p_estatuto','memyselfcompiler.py',350),
  ('ESTATUTO -> / SEM_MUST_BE_VOID_CALL LLAMADA ;','ESTATUTO',4,'p_estatuto','memyselfcompiler.py',351),
  ('ESTATUTO -> LECTURA ;','ESTATUTO',2,'p_estatuto','memyselfcompiler.py',352),
  ('ESTATUTO -> ESCRITURA ;','ESTATUTO',2,'p_estatuto','memyselfcompiler.py',353),
  ('ESTATUTO -> LLAMADA_BI ;','ESTATUTO',2,'p_estatuto','memyselfcompiler.py',354),
  ('FACTOR -> LLAMADA','FACTOR',1,'p_factor','memyselfcompiler.py',359),
  ('FACTOR -> CTE','FACTOR',1,'p_factor','memyselfcompiler.py',360),
  ('FACTOR -> VARIABLE','FACTOR',1,'p_factor','memyselfcompiler.py',361),
  ('FACTOR -> ( SEM_ADD_FONDO_FALSO EXPRESION ) SEM_REMOVE_FONDO_FALSO','FACTOR',5,'p_factor','memyselfcompiler.py',362),
  ('CTE -> cte_i','CTE',1,'p_cte','memyselfcompiler.py',374),
  ('CTE -> cte_f','CTE',1,'p_cte','memyselfcompiler.py',375),
  ('CTE -> cte_c','CTE',1,'p_cte','memyselfcompiler.py',376),
  ('LLAMADA -> SEM_VERIFY_FUNC_CALL ( SEM_ADD_FONDO_FALSO LLAMADA_OPTS SEM_RESET_PARAM_COUNT ) SEM_REMOVE_FONDO_FALSO SEM_ADD_GOSUB','LLAMADA',8,'p_llamada','memyselfcompiler.py',405),
  ('LLAMADA -> SEM_VERIFY_FUNC_CALL ( ) SEM_ADD_GOSUB','LLAMADA',4,'p_llamada','memyselfcompiler.py',406),
  ('LLAMADA_OPTS -> LLAMADA_OPTS , EXPRESION SEM_VERIFY_PARAM','LLAMADA_OPTS',4,'p_llamada_opts','memyselfcompiler.py',411),
  ('LLAMADA_OPTS -> EXPRESION SEM_VERIFY_PARAM','LLAMADA_OPTS',2,'p_llamada_opts','memyselfcompiler.py',412),
  ('ASIGNACION -> VARIABLE = SEM_ADD_EQUALS EXPRESION SEM_PENDING_ASSIGNATION_OP','ASIGNACION',5,'p_asignacion','memyselfcompiler.py',417),
  ('CONDICION -> if ( EXPRESION ) SEM_ADD_GOTOF then BLOQUE SEM_FILL_GOTO_ANYKIND','CONDICION',8,'p_condicion','memyselfcompiler.py',422),
  ('CONDICION -> if ( EXPRESION ) SEM_ADD_GOTOF then BLOQUE else SEM_ADD_GOTO_SIMPLE BLOQUE SEM_FILL_GOTO_ANYKIND','CONDICION',11,'p_condicion','memyselfcompiler.py',423),
  ('WHILE -> while SEM_ADD_COND_INDEX ( EXPRESION ) SEM_ADD_GOTOF do BLOQUE SEM_ADD_GOTO_SIMPLE SEM_FILL_GOTO_COND_INDEX','WHILE',10,'p_while','memyselfcompiler.py',428),
  ('FOR -> for ASIGNACION to SEM_ADD_COND_INDEX EXPRESION SEM_ADD_GOTOV do BLOQUE SEM_ADD_GOTO_SIMPLE SEM_FILL_GOTO_COND_INDEX','FOR',10,'p_for','memyselfcompiler.py',433),
  ('LECTURA -> read ( LECTURA_OPTS )','LECTURA',4,'p_lectura','memyselfcompiler.py',438),
  ('LECTURA_OPTS -> LECTURA_OPTS , VARIABLE SEM_ADD_READ','LECTURA_OPTS',4,'p_lectura_opts','memyselfcompiler.py',443),
  ('LECTURA_OPTS -> VARIABLE SEM_ADD_READ','LECTURA_OPTS',2,'p_lectura_opts','memyselfcompiler.py',444),
  ('ESCRITURA -> write ( ESCRITURA_OPTS )','ESCRITURA',4,'p_escritura','memyselfcompiler.py',449),
  ('ESCRITURA_OPTS -> ESCRITURA_OPTS , SEM_ADD_PRINT_CTE_S','ESCRITURA_OPTS',3,'p_escritura_opts','memyselfcompiler.py',454),
  ('ESCRITURA_OPTS -> ESCRITURA_OPTS , EXPRESION SEM_ADD_PRINT','ESCRITURA_OPTS',4,'p_escritura_opts','memyselfcompiler.py',455),
  ('ESCRITURA_OPTS -> SEM_ADD_PRINT_CTE_S','ESCRITURA_OPTS',1,'p_escritura_opts','memyselfcompiler.py',456),
  ('ESCRITURA_OPTS -> EXPRESION SEM_ADD_PRINT','ESCRITURA_OPTS',2,'p_escritura_opts','memyselfcompiler.py',457),
  ('LLAMADA_BI -> POINT','LLAMADA_BI',1,'p_llamada_bi','memyselfcompiler.py',462),
  ('LLAMADA_BI -> CIRCLE','LLAMADA_BI',1,'p_llamada_bi','memyselfcompiler.py',463),
  ('LLAMADA_BI -> PENUP','LLAMADA_BI',1,'p_llamada_bi','memyselfcompiler.py',464),
  ('LLAMADA_BI -> PENDOWN','LLAMADA_BI',1,'p_llamada_bi','memyselfcompiler.py',465),
  ('LLAMADA_BI -> COLOR','LLAMADA_BI',1,'p_llamada_bi','memyselfcompiler.py',466),
  ('LLAMADA_BI -> SIZE','LLAMADA_BI',1,'p_llamada_bi','memyselfcompiler.py',467),
  ('LLAMADA_BI -> CLEAR','LLAMADA_BI',1,'p_llamada_bi','memyselfcompiler.py',468),
  ('CLEAR -> clear ( ) DO_CLEAR','CLEAR',4,'p_clear','memyselfcompiler.py',473),
  ('POINT -> point ( EXPRESION , EXPRESION ) DRAW_POINT','POINT',7,'p_point','memyselfcompiler.py',478),
  ('CIRCLE -> circle ( EXPRESION ) DRAW_CIRCLE','CIRCLE',5,'p_circle','memyselfcompiler.py',483),
  ('PENUP -> penup ( ) DO_PENUP','PENUP',4,'p_penup','memyselfcompiler.py',488),
  ('PENDOWN -> pendown ( ) DO_PENDOWN','PENDOWN',4,'p_pendown','memyselfcompiler.py',493),
  ('COLOR -> color ( DO_COLOR )','COLOR',4,'p_color','memyselfcompiler.py',498),
  ('SIZE -> size ( EXPRESION ) DO_SIZE','SIZE',5,'p_size','memyselfcompiler.py',503),
  ('SEM_GLOBAL_NAME -> id','SEM_GLOBAL_NAME',1,'p_sem_global_name','memyselfcompiler.py',526),
  ('SEM_MAIN_NAME -> main','SEM_MAIN_NAME',1,'p_sem_main_name','memyselfcompiler.py',537),
  ('SEM_FUNC_NAME -> id','SEM_FUNC_NAME',1,'p_sem_func_name','memyselfcompiler.py',548),
  ('SEM_ADD_FUNC -> <empty>','SEM_ADD_FUNC',0,'p_sem_add_func','memyselfcompiler.py',556),
  ('SEM_ADD_GLOBAL_VARIABLES -> <empty>','SEM_ADD_GLOBAL_VARIABLES',0,'p_sem_add_global_variables','memyselfcompiler.py',568),
  ('SEM_ADD_PLUS -> <empty>','SEM_ADD_PLUS',0,'p_sem_add_plus','memyselfcompiler.py',575),
  ('SEM_ADD_MINUS -> <empty>','SEM_ADD_MINUS',0,'p_sem_add_minus','memyselfcompiler.py',583),
  ('SEM_ADD_TIMES -> <empty>','SEM_ADD_TIMES',0,'p_sem_add_times','memyselfcompiler.py',590),
  ('SEM_ADD_DIVISION -> <empty>','SEM_ADD_DIVISION',0,'p_sem_add_division','memyselfcompiler.py',597),
  ('SEM_ADD_EQUALS -> <empty>','SEM_ADD_EQUALS',0,'p_sem_add_equals','memyselfcompiler.py',605),
  ('SEM_ADD_FONDO_FALSO -> <empty>','SEM_ADD_FONDO_FALSO',0,'p_sem_add_fondo_falso','memyselfcompiler.py',613),
  ('SEM_REMOVE_FONDO_FALSO -> <empty>','SEM_REMOVE_FONDO_FALSO',0,'p_sem_remove_fondo_falso','memyselfcompiler.py',621),
  ('SEM_ADD_GREATER_THAN -> <empty>','SEM_ADD_GREATER_THAN',0,'p_sem_add_greater_than','memyselfcompiler.py',629),
  ('SEM_ADD_LESS_THAN -> <empty>','SEM_ADD_LESS_THAN',0,'p_sem_add_less_than','memyselfcompiler.py',637),
  ('SEM_ADD_EQUALS_TO -> <empty>','SEM_ADD_EQUALS_TO',0,'p_sem_add_equals_to','memyselfcompiler.py',645),
  ('SEM_ADD_NOT_EQUALS_TO -> <empty>','SEM_ADD_NOT_EQUALS_TO',0,'p_sem_add_not_equals_to','memyselfcompiler.py',653),
  ('SEM_ADD_AND -> <empty>','SEM_ADD_AND',0,'p_sem_add_and','memyselfcompiler.py',661),
  ('SEM_ADD_OR -> <empty>','SEM_ADD_OR',0,'p_sem_add_or','memyselfcompiler.py',669),
  ('SEM_ADD_GOTOF -> <empty>','SEM_ADD_GOTOF',0,'p_sem_add_gotof','memyselfcompiler.py',679),
  ('SEM_FILL_GOTO_ANYKIND -> <empty>','SEM_FILL_GOTO_ANYKIND',0,'p_sem_fill_goto_anykind','memyselfcompiler.py',698),
  ('SEM_FILL_MAIN_GOTO -> <empty>','SEM_FILL_MAIN_GOTO',0,'p_sem_fill_main_goto','memyselfcompiler.py',712),
  ('SEM_ADD_GOTO_SIMPLE -> <empty>','SEM_ADD_GOTO_SIMPLE',0,'p_sem_add_goto_simple','memyselfcompiler.py',730),
  ('SEM_ADD_COND_INDEX -> <empty>','SEM_ADD_COND_INDEX',0,'p_sem_add_cond_index','memyselfcompiler.py',748),
  ('SEM_FILL_GOTO_COND_INDEX -> <empty>','SEM_FILL_GOTO_COND_INDEX',0,'p_sem_fill_goto_cond_index','memyselfcompiler.py',760),
  ('SEM_ADD_GOTOV -> <empty>','SEM_ADD_GOTOV',0,'p_sem_add_gotov','memyselfcompiler.py',775),
  ('SEM_ADD_GOTO_MAIN -> <empty>','SEM_ADD_GOTO_MAIN',0,'p_sem_add_goto_main','memyselfcompiler.py',794),
  ('SEM_ENDFUNC -> <empty>','SEM_ENDFUNC',0,'p_sem_endfunc','memyselfcompiler.py',807),
  ('SEM_VERIFY_FUNC_CALL -> id','SEM_VERIFY_FUNC_CALL',1,'p_sem_verify_func_call','memyselfcompiler.py',832),
  ('SEM_VERIFY_PARAM -> <empty>','SEM_VERIFY_PARAM',0,'p_sem_verify_param','memyselfcompiler.py',852),
  ('SEM_RESET_PARAM_COUNT -> <empty>','SEM_RESET_PARAM_COUNT',0,'p_sem_reset_param_count','memyselfcompiler.py',880),
  ('SEM_ADD_GOSUB -> <empty>','SEM_ADD_GOSUB',0,'p_sem_add_gosub','memyselfcompiler.py',888),
  ('SEM_VERIFY_RETURN_FUNC -> <empty>','SEM_VERIFY_RETURN_FUNC',0,'p_sem_verify_return_func','memyselfcompiler.py',909),
  ('SEM_MUST_BE_VOID_CALL -> <empty>','SEM_MUST_BE_VOID_CALL',0,'p_sem_must_be_void_call','memyselfcompiler.py',933),
  ('SEM_ADD_PRINT -> <empty>','SEM_ADD_PRINT',0,'p_sem_add_print','memyselfcompiler.py',941),
  ('SEM_ADD_PRINT_CTE_S -> cte_s','SEM_ADD_PRINT_CTE_S',1,'p_sem_add_print_cte_s','memyselfcompiler.py',957),
  ('SEM_ADD_READ -> <empty>','SEM_ADD_READ',0,'p_sem_add_read','memyselfcompiler.py',976),
  ('SEM_PENDING_EXPA_OP -> <empty>','SEM_PENDING_EXPA_OP',0,'p_sem_pending_expa_op','memyselfcompiler.py',1001),
  ('SEM_PENDING_TERMINO_OP -> <empty>','SEM_PENDING_TERMINO_OP',0,'p_sem_pending_termino_op','memyselfcompiler.py',1029),
  ('SEM_PENDING_ASSIGNATION_OP -> <empty>','SEM_PENDING_ASSIGNATION_OP',0,'p_sem_pending_assignation_op','memyselfcompiler.py',1058),
  ('SEM_PENDING_REL_OP -> <empty>','SEM_PENDING_REL_OP',0,'p_sem_pending_rel_op','memyselfcompiler.py',1080),
  ('SEM_PENDING_LOGIC_OP -> <empty>','SEM_PENDING_LOGIC_OP',0,'p_sem_pending_logic_op','memyselfcompiler.py',1110),
  ('DRAW_POINT -> <empty>','DRAW_POINT',0,'p_draw_point','memyselfcompiler.py',1143),
  ('DRAW_CIRCLE -> <empty>','DRAW_CIRCLE',0,'p_draw_circle','memyselfcompiler.py',1159),
  ('DO_PENUP -> <empty>','DO_PENUP',0,'p_do_penup','memyselfcompiler.py',1172),
  ('DO_PENDOWN -> <empty>','DO_PENDOWN',0,'p_do_pendown','memyselfcompiler.py',1179),
  ('DO_COLOR -> cte_s','DO_COLOR',1,'p_do_color','memyselfcompiler.py',1186),
  ('DO_CLEAR -> <empty>','DO_CLEAR',0,'p_do_clear','memyselfcompiler.py',1203),
  ('DO_SIZE -> <empty>','DO_SIZE',0,'p_do_size','memyselfcompiler.py',1212),
]
