
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "leftandorleft><equalsnot_equalsleftminus+left*/and char circle clear color cte_c cte_f cte_i cte_s do else equals float for global id if int main minus module not_equals or pendown penup point program read return size then to var void while write\n     PROGRAMA : SEM_ADD_GOTO_MAIN program  SEM_GLOBAL_NAME  SEM_ADD_FUNC ';' PROGRAMA_OPTS PRINCIPAL \n               | SEM_ADD_GOTO_MAIN program  SEM_GLOBAL_NAME  SEM_ADD_FUNC ';' PRINCIPAL \n    \n    PROGRAMA_OPTS :  DEC_V FUNCS\n                    | DEC_V\n                    | FUNCS\n    \n    PRINCIPAL :   SEM_FILL_GOTO_ANYKIND SEM_MAIN_NAME SEM_ADD_FUNC '(' ')' SEM_ADD_GLOBAL_VARIABLES BLOQUE\n    \n    DEC_V : DEC_V var  TIPO_SIMPLE ':' LISTA_VAR ';' \n            | var TIPO_SIMPLE ':' LISTA_VAR ';'\n    \n    LISTA_VAR : LISTA_VAR ',' VARIABLE_FIX\n               | VARIABLE_FIX\n    \n    TIPO_SIMPLE : int \n                 | float \n                 | char\n    \n    FUNCS :  FUNCS FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC '(' ')' SEM_ADD_GLOBAL_VARIABLES BLOQUE  SEM_ENDFUNC\n           | FUNCS FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC '(' PARAMS ')' SEM_ADD_GLOBAL_VARIABLES BLOQUE  SEM_ENDFUNC\n           | FUNCS FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC '(' PARAMS ')' DEC_V SEM_ADD_GLOBAL_VARIABLES BLOQUE   SEM_ENDFUNC\n           | FUNCS FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC '(' ')' DEC_V SEM_ADD_GLOBAL_VARIABLES BLOQUE  SEM_ENDFUNC\n           | FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC '(' ')' SEM_ADD_GLOBAL_VARIABLES BLOQUE  SEM_ENDFUNC \n           | FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC '(' PARAMS ')' SEM_ADD_GLOBAL_VARIABLES BLOQUE  SEM_ENDFUNC \n           | FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC '(' PARAMS ')' DEC_V SEM_ADD_GLOBAL_VARIABLES BLOQUE  SEM_ENDFUNC \n           | FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC '(' ')' DEC_V SEM_ADD_GLOBAL_VARIABLES BLOQUE  SEM_ENDFUNC \n\n    \n    FUNC_TYPES :  char\n                 | float \n                 | int\n                 | void\n    \n    PARAMS : PARAMS ',' TIPO_SIMPLE PARAM_NAME\n            | TIPO_SIMPLE PARAM_NAME\n    \n  PARAM_NAME : id\n  \n    VARIABLE_FIX : id '[' cte_i ']' \n                  | id\n    \n    VARIABLE : id '[' EXPRESION ']' \n              | id\n    \n    BLOQUE : '{' LOOP_ESTATUTO return EXPRESION SEM_VERIFY_RETURN_FUNC ';' '}' \n              | '{' LOOP_ESTATUTO '}' \n              | '{' return EXPRESION SEM_VERIFY_RETURN_FUNC ';' '}' \n              | '{' '}'\n    \n    LOOP_ESTATUTO : LOOP_ESTATUTO ESTATUTO \n                    | ESTATUTO\n    \n    EXPRESION :  EXPRESION SEM_PENDING_LOGIC_OP  and  SEM_ADD_AND  EXP_R  SEM_PENDING_LOGIC_OP\n                | EXPRESION SEM_PENDING_LOGIC_OP  or  SEM_ADD_OR   EXP_R  SEM_PENDING_LOGIC_OP\n                | EXP_R \n    \n    EXP_R :  EXP_A '>' SEM_ADD_GREATER_THAN   EXP_A   SEM_PENDING_REL_OP\n            | EXP_A '<' SEM_ADD_LESS_THAN   EXP_A   SEM_PENDING_REL_OP\n            | EXP_A equals SEM_ADD_EQUALS_TO   EXP_A    SEM_PENDING_REL_OP\n            | EXP_A not_equals SEM_ADD_NOT_EQUALS_TO   EXP_A   SEM_PENDING_REL_OP\n            | EXP_A \n    \n    EXP_A :  EXP_A SEM_PENDING_EXPA_OP '+' SEM_ADD_PLUS TERMINO SEM_PENDING_EXPA_OP\n            | EXP_A SEM_PENDING_EXPA_OP minus SEM_ADD_MINUS TERMINO SEM_PENDING_EXPA_OP\n            | TERMINO \n    \n    TERMINO : TERMINO SEM_PENDING_TERMINO_OP '*' SEM_ADD_TIMES  FACTOR  SEM_PENDING_TERMINO_OP\n             | TERMINO SEM_PENDING_TERMINO_OP '/' SEM_ADD_DIVISION  FACTOR  SEM_PENDING_TERMINO_OP\n             | FACTOR \n    \n    ESTATUTO : ASIGNACION ';' \n              | CONDICION \n              | WHILE \n              | FOR \n              | LLAMADA ';' \n              | LECTURA ';'  \n              | ESCRITURA ';' \n              | LLAMADA_BI ';'\n    \n    FACTOR : LLAMADA \n            | CTE  \n            | VARIABLE \n            | '(' SEM_ADD_FONDO_FALSO EXPRESION ')' SEM_REMOVE_FONDO_FALSO\n    \n    CTE : cte_i \n         | cte_f \n         | cte_c\n    \n    LLAMADA :   SEM_VERIFY_FUNC_CALL '(' LLAMADA_OPTS SEM_RESET_PARAM_COUNT ')' SEM_ADD_GOSUB\n             |  SEM_VERIFY_FUNC_CALL '(' ')' SEM_ADD_GOSUB\n    \n    LLAMADA_OPTS : LLAMADA_OPTS ',' EXPRESION SEM_VERIFY_PARAM\n                 | EXPRESION SEM_VERIFY_PARAM\n    \n    ASIGNACION : VARIABLE '=' SEM_ADD_EQUALS EXPRESION SEM_PENDING_ASSIGNATION_OP\n    \n    CONDICION : if '(' EXPRESION ')' SEM_ADD_GOTOF then BLOQUE SEM_FILL_GOTO_ANYKIND \n               | if '(' EXPRESION ')' SEM_ADD_GOTOF then BLOQUE else SEM_ADD_GOTO_SIMPLE BLOQUE SEM_FILL_GOTO_ANYKIND\n    \n    WHILE : while  SEM_ADD_COND_INDEX '(' EXPRESION ')' SEM_ADD_GOTOF do BLOQUE SEM_ADD_GOTO_SIMPLE SEM_FILL_GOTO_COND_INDEX\n    \n    FOR : for ASIGNACION to SEM_ADD_COND_INDEX EXPRESION SEM_ADD_GOTOV do BLOQUE SEM_ADD_GOTO_SIMPLE SEM_FILL_GOTO_COND_INDEX\n    \n    LECTURA : read '(' LECTURA_OPTS ')'\n    \n    LECTURA_OPTS : LECTURA_OPTS ',' id \n                  | id\n    \n    ESCRITURA : write '(' ESCRITURA_OPTS ')'\n    \n    ESCRITURA_OPTS :   ESCRITURA_OPTS ',' cte_s\n                       | ESCRITURA_OPTS ',' EXPRESION \n                       | cte_s \n                       | EXPRESION\n    \n    LLAMADA_BI :   POINT \n                 | CIRCLE\n                 | PENUP\n                 | PENDOWN \n                 | COLOR \n                 | SIZE \n                 | CLEAR\n    \n    CLEAR : clear '(' ')'\n    \n    POINT : point '(' EXPRESION ',' EXPRESION ')'\n    \n    CIRCLE : circle '(' EXPRESION ')' \n    \n    PENUP : penup '(' ')'\n    \n    PENDOWN : pendown '(' ')'\n    \n    COLOR : color '(' cte_s ')' \n    \n    SIZE : size '(' EXPRESION ')' \n    \n    SEM_GLOBAL_NAME : id\n  \n    SEM_MAIN_NAME : main\n  \n    SEM_FUNC_NAME : id\n  \n  SEM_ADD_FUNC : \n  \n  SEM_ADD_GLOBAL_VARIABLES : \n  \n  SEM_ADD_PLUS : \n  \n  SEM_ADD_MINUS : \n  \n  SEM_ADD_TIMES : \n  \n  SEM_ADD_DIVISION : \n  \n  SEM_ADD_EQUALS : \n  \n  SEM_ADD_FONDO_FALSO : \n  \n  SEM_REMOVE_FONDO_FALSO : \n  \n  SEM_ADD_GREATER_THAN : \n  \n  SEM_ADD_LESS_THAN : \n  \n  SEM_ADD_EQUALS_TO : \n  \n  SEM_ADD_NOT_EQUALS_TO : \n  \n  SEM_ADD_AND : \n  \n  SEM_ADD_OR : \n  \n  SEM_ADD_GOTOF : \n  \n  SEM_FILL_GOTO_ANYKIND : \n  \n  SEM_ADD_GOTO_SIMPLE : \n  \n  SEM_ADD_COND_INDEX : \n  \n  SEM_FILL_GOTO_COND_INDEX : \n  \n  SEM_ADD_GOTOV : \n  \n  SEM_ADD_GOTO_MAIN : \n  \n  SEM_ENDFUNC : \n  \n    SEM_VERIFY_FUNC_CALL : id \n    \n    SEM_VERIFY_PARAM :\n    \n    SEM_RESET_PARAM_COUNT :\n    \n    SEM_ADD_GOSUB :\n    \n    SEM_VERIFY_RETURN_FUNC :\n    \n  SEM_PENDING_EXPA_OP : \n  \n  SEM_PENDING_TERMINO_OP : \n  \n  SEM_PENDING_ASSIGNATION_OP : \n  \n  SEM_PENDING_REL_OP : \n  \n  SEM_PENDING_LOGIC_OP : \n  "
    
_lr_action_items = {'program':([0,2,],[-123,3,]),'$end':([1,9,19,60,74,116,229,251,],[0,-2,-1,-6,-36,-34,-35,-33,]),'id':([3,26,27,28,29,31,33,36,47,57,61,72,73,74,75,77,78,79,87,110,115,116,117,126,130,131,132,133,134,135,136,140,141,142,143,144,145,149,163,164,165,166,169,170,172,173,198,199,200,201,202,203,204,205,206,207,212,214,218,220,222,229,230,231,236,237,238,239,251,275,278,280,281,283,284,285,286,287,288,],[5,-11,-12,-13,35,35,41,41,41,68,98,98,98,-36,-38,-54,-55,-56,139,68,98,-34,-37,-109,-53,-57,-58,-59,-60,-108,98,98,178,98,98,98,98,98,-111,-112,-113,-114,98,98,98,-120,-115,-116,98,98,98,98,-104,-105,-106,-107,98,98,247,98,98,-35,98,98,98,98,98,98,-33,-118,-73,-119,-119,-121,-121,-118,-75,-76,-74,]),';':([4,5,6,39,40,41,43,53,62,76,80,81,82,83,91,92,93,94,95,96,97,98,118,119,120,121,122,123,124,125,127,128,129,160,161,175,185,186,189,196,209,215,217,219,221,223,224,225,232,233,234,235,240,241,245,252,253,254,255,256,257,258,259,260,261,262,266,268,269,270,271,272,273,274,],[-102,-99,7,46,-10,-30,50,-9,-29,130,131,132,133,134,-85,-86,-87,-88,-89,-90,-91,-32,-129,-41,-46,-49,-52,-61,-62,-63,-65,-66,-67,-129,197,-128,-95,-96,-92,228,-132,-69,-77,-80,-31,-94,-97,-98,-133,-133,-133,-133,-110,-72,-128,-134,-134,-42,-43,-44,-45,-130,-130,-131,-131,-64,-68,-93,-39,-40,-47,-48,-50,-51,]),'var':([7,10,46,50,55,58,64,65,70,71,109,114,],[13,21,-8,-7,13,13,21,13,21,13,21,21,]),'main':([7,8,10,11,12,20,46,50,74,106,111,116,151,152,153,156,157,158,190,191,192,193,194,195,226,227,229,251,],[-118,-118,-4,-5,24,-3,-8,-7,-36,-124,-124,-34,-18,-124,-124,-14,-124,-124,-21,-19,-124,-17,-15,-124,-20,-16,-35,-33,]),'char':([7,10,11,13,20,21,46,49,50,51,66,74,106,111,116,151,152,153,156,157,158,190,191,192,193,194,195,226,227,229,251,],[15,15,15,28,15,28,-8,28,-7,28,28,-36,-124,-124,-34,-18,-124,-124,-14,-124,-124,-21,-19,-124,-17,-15,-124,-20,-16,-35,-33,]),'float':([7,10,11,13,20,21,46,49,50,51,66,74,106,111,116,151,152,153,156,157,158,190,191,192,193,194,195,226,227,229,251,],[16,16,16,27,16,27,-8,27,-7,27,27,-36,-124,-124,-34,-18,-124,-124,-14,-124,-124,-21,-19,-124,-17,-15,-124,-20,-16,-35,-33,]),'int':([7,10,11,13,20,21,46,49,50,51,66,74,106,111,116,151,152,153,156,157,158,190,191,192,193,194,195,226,227,229,251,],[17,17,17,26,17,26,-8,26,-7,26,26,-36,-124,-124,-34,-18,-124,-124,-14,-124,-124,-21,-19,-124,-17,-15,-124,-20,-16,-35,-33,]),'void':([7,10,11,20,46,50,74,106,111,116,151,152,153,156,157,158,190,191,192,193,194,195,226,227,229,251,],[18,18,18,18,-8,-7,-36,-124,-124,-34,-18,-124,-124,-14,-124,-124,-21,-19,-124,-17,-15,-124,-20,-16,-35,-33,]),'module':([14,15,16,17,18,22,],[29,-22,-23,-24,-25,31,]),'(':([23,24,32,34,35,37,42,44,73,85,86,88,89,90,98,99,100,101,102,103,104,105,115,126,135,136,137,140,142,143,144,145,149,163,164,165,166,169,170,172,173,198,199,200,201,202,203,204,205,206,207,212,214,220,222,230,231,236,237,238,239,],[-102,-100,38,-102,-101,-102,49,51,126,136,-120,140,141,142,-125,144,145,146,147,148,149,150,126,-109,-108,126,172,126,126,126,126,126,126,-111,-112,-113,-114,126,126,126,-120,-115,-116,126,126,126,126,-104,-105,-106,-107,126,126,126,126,126,126,126,126,126,126,]),':':([25,26,27,28,30,],[33,-11,-12,-13,36,]),')':([38,49,51,56,59,67,68,98,119,120,121,122,123,124,125,127,128,129,140,146,147,150,155,171,174,175,176,177,178,179,180,181,184,187,188,208,211,213,215,216,221,232,233,234,235,240,245,246,247,248,249,250,252,253,254,255,256,257,258,259,260,261,262,266,267,269,270,271,272,273,274,],[45,55,58,65,71,-27,-28,-32,-41,-46,-49,-52,-61,-62,-63,-65,-66,-67,175,185,186,189,-26,210,-127,-128,-126,217,-79,219,-83,-84,223,224,225,240,243,245,-69,-71,-31,-133,-133,-133,-133,-110,-128,-126,-78,-81,-82,268,-134,-134,-42,-43,-44,-45,-130,-130,-131,-131,-64,-68,-70,-39,-40,-47,-48,-50,-51,]),',':([39,40,41,43,53,56,59,62,67,68,98,119,120,121,122,123,124,125,127,128,129,155,174,175,176,177,178,179,180,181,183,215,216,221,232,233,234,235,240,245,246,247,248,249,252,253,254,255,256,257,258,259,260,261,262,266,267,269,270,271,272,273,274,],[47,-10,-30,47,-9,66,66,-29,-27,-28,-32,-41,-46,-49,-52,-61,-62,-63,-65,-66,-67,-26,214,-128,-126,218,-79,220,-83,-84,222,-69,-71,-31,-133,-133,-133,-133,-110,-128,-126,-78,-81,-82,-134,-134,-42,-43,-44,-45,-130,-130,-131,-131,-64,-68,-70,-39,-40,-47,-48,-50,-51,]),'[':([41,98,139,],[48,143,143,]),'{':([45,46,50,52,55,58,63,64,65,69,70,71,107,108,109,112,113,114,154,159,263,276,277,279,282,],[-103,-8,-7,61,-103,-103,61,-103,-103,61,-103,-103,61,61,-103,61,61,-103,61,61,61,61,61,-119,61,]),'cte_i':([48,73,115,126,135,136,140,142,143,144,145,149,163,164,165,166,169,170,172,173,198,199,200,201,202,203,204,205,206,207,212,214,220,222,230,231,236,237,238,239,],[54,127,127,-109,-108,127,127,127,127,127,127,127,-111,-112,-113,-114,127,127,127,-120,-115,-116,127,127,127,127,-104,-105,-106,-107,127,127,127,127,127,127,127,127,127,127,]),']':([54,98,119,120,121,122,123,124,125,127,128,129,175,182,215,221,232,233,234,235,240,245,252,253,254,255,256,257,258,259,260,261,262,266,269,270,271,272,273,274,],[62,-32,-41,-46,-49,-52,-61,-62,-63,-65,-66,-67,-128,221,-69,-31,-133,-133,-133,-133,-110,-128,-134,-134,-42,-43,-44,-45,-130,-130,-131,-131,-64,-68,-39,-40,-47,-48,-50,-51,]),'return':([61,72,74,75,77,78,79,116,117,130,131,132,133,134,229,251,275,278,280,281,283,284,285,286,287,288,],[73,115,-36,-38,-54,-55,-56,-34,-37,-53,-57,-58,-59,-60,-35,-33,-118,-73,-119,-119,-121,-121,-118,-75,-76,-74,]),'}':([61,72,74,75,77,78,79,116,117,130,131,132,133,134,197,228,229,251,275,278,280,281,283,284,285,286,287,288,],[74,116,-36,-38,-54,-55,-56,-34,-37,-53,-57,-58,-59,-60,229,251,-35,-33,-118,-73,-119,-119,-121,-121,-118,-75,-76,-74,]),'if':([61,72,74,75,77,78,79,116,117,130,131,132,133,134,229,251,275,278,280,281,283,284,285,286,287,288,],[85,85,-36,-38,-54,-55,-56,-34,-37,-53,-57,-58,-59,-60,-35,-33,-118,-73,-119,-119,-121,-121,-118,-75,-76,-74,]),'while':([61,72,74,75,77,78,79,116,117,130,131,132,133,134,229,251,275,278,280,281,283,284,285,286,287,288,],[86,86,-36,-38,-54,-55,-56,-34,-37,-53,-57,-58,-59,-60,-35,-33,-118,-73,-119,-119,-121,-121,-118,-75,-76,-74,]),'for':([61,72,74,75,77,78,79,116,117,130,131,132,133,134,229,251,275,278,280,281,283,284,285,286,287,288,],[87,87,-36,-38,-54,-55,-56,-34,-37,-53,-57,-58,-59,-60,-35,-33,-118,-73,-119,-119,-121,-121,-118,-75,-76,-74,]),'read':([61,72,74,75,77,78,79,116,117,130,131,132,133,134,229,251,275,278,280,281,283,284,285,286,287,288,],[89,89,-36,-38,-54,-55,-56,-34,-37,-53,-57,-58,-59,-60,-35,-33,-118,-73,-119,-119,-121,-121,-118,-75,-76,-74,]),'write':([61,72,74,75,77,78,79,116,117,130,131,132,133,134,229,251,275,278,280,281,283,284,285,286,287,288,],[90,90,-36,-38,-54,-55,-56,-34,-37,-53,-57,-58,-59,-60,-35,-33,-118,-73,-119,-119,-121,-121,-118,-75,-76,-74,]),'point':([61,72,74,75,77,78,79,116,117,130,131,132,133,134,229,251,275,278,280,281,283,284,285,286,287,288,],[99,99,-36,-38,-54,-55,-56,-34,-37,-53,-57,-58,-59,-60,-35,-33,-118,-73,-119,-119,-121,-121,-118,-75,-76,-74,]),'circle':([61,72,74,75,77,78,79,116,117,130,131,132,133,134,229,251,275,278,280,281,283,284,285,286,287,288,],[100,100,-36,-38,-54,-55,-56,-34,-37,-53,-57,-58,-59,-60,-35,-33,-118,-73,-119,-119,-121,-121,-118,-75,-76,-74,]),'penup':([61,72,74,75,77,78,79,116,117,130,131,132,133,134,229,251,275,278,280,281,283,284,285,286,287,288,],[101,101,-36,-38,-54,-55,-56,-34,-37,-53,-57,-58,-59,-60,-35,-33,-118,-73,-119,-119,-121,-121,-118,-75,-76,-74,]),'pendown':([61,72,74,75,77,78,79,116,117,130,131,132,133,134,229,251,275,278,280,281,283,284,285,286,287,288,],[102,102,-36,-38,-54,-55,-56,-34,-37,-53,-57,-58,-59,-60,-35,-33,-118,-73,-119,-119,-121,-121,-118,-75,-76,-74,]),'color':([61,72,74,75,77,78,79,116,117,130,131,132,133,134,229,251,275,278,280,281,283,284,285,286,287,288,],[103,103,-36,-38,-54,-55,-56,-34,-37,-53,-57,-58,-59,-60,-35,-33,-118,-73,-119,-119,-121,-121,-118,-75,-76,-74,]),'size':([61,72,74,75,77,78,79,116,117,130,131,132,133,134,229,251,275,278,280,281,283,284,285,286,287,288,],[104,104,-36,-38,-54,-55,-56,-34,-37,-53,-57,-58,-59,-60,-35,-33,-118,-73,-119,-119,-121,-121,-118,-75,-76,-74,]),'clear':([61,72,74,75,77,78,79,116,117,130,131,132,133,134,229,251,275,278,280,281,283,284,285,286,287,288,],[105,105,-36,-38,-54,-55,-56,-34,-37,-53,-57,-58,-59,-60,-35,-33,-118,-73,-119,-119,-121,-121,-118,-75,-76,-74,]),'cte_f':([73,115,126,135,136,140,142,143,144,145,149,163,164,165,166,169,170,172,173,198,199,200,201,202,203,204,205,206,207,212,214,220,222,230,231,236,237,238,239,],[128,128,-109,-108,128,128,128,128,128,128,128,-111,-112,-113,-114,128,128,128,-120,-115,-116,128,128,128,128,-104,-105,-106,-107,128,128,128,128,128,128,128,128,128,128,]),'cte_c':([73,115,126,135,136,140,142,143,144,145,149,163,164,165,166,169,170,172,173,198,199,200,201,202,203,204,205,206,207,212,214,220,222,230,231,236,237,238,239,],[129,129,-109,-108,129,129,129,129,129,129,129,-111,-112,-113,-114,129,129,129,-120,-115,-116,129,129,129,129,-104,-105,-106,-107,129,129,129,129,129,129,129,129,129,129,]),'else':([74,116,229,251,275,],[-36,-34,-35,-33,279,]),'=':([84,98,139,221,],[135,-32,-32,-31,]),'*':([98,121,122,123,124,125,127,128,129,168,175,215,221,240,245,258,259,260,261,262,266,273,274,],[-32,-131,-52,-61,-62,-63,-65,-66,-67,206,-128,-69,-31,-110,-128,-131,-131,-131,-131,-64,-68,-50,-51,]),'/':([98,121,122,123,124,125,127,128,129,168,175,215,221,240,245,258,259,260,261,262,266,273,274,],[-32,-131,-52,-61,-62,-63,-65,-66,-67,207,-128,-69,-31,-110,-128,-131,-131,-131,-131,-64,-68,-50,-51,]),'>':([98,120,121,122,123,124,125,127,128,129,175,215,221,240,245,258,259,260,261,262,266,271,272,273,274,],[-32,163,-49,-52,-61,-62,-63,-65,-66,-67,-128,-69,-31,-110,-128,-130,-130,-131,-131,-64,-68,-47,-48,-50,-51,]),'<':([98,120,121,122,123,124,125,127,128,129,175,215,221,240,245,258,259,260,261,262,266,271,272,273,274,],[-32,164,-49,-52,-61,-62,-63,-65,-66,-67,-128,-69,-31,-110,-128,-130,-130,-131,-131,-64,-68,-47,-48,-50,-51,]),'equals':([98,120,121,122,123,124,125,127,128,129,175,215,221,240,245,258,259,260,261,262,266,271,272,273,274,],[-32,165,-49,-52,-61,-62,-63,-65,-66,-67,-128,-69,-31,-110,-128,-130,-130,-131,-131,-64,-68,-47,-48,-50,-51,]),'not_equals':([98,120,121,122,123,124,125,127,128,129,175,215,221,240,245,258,259,260,261,262,266,271,272,273,274,],[-32,166,-49,-52,-61,-62,-63,-65,-66,-67,-128,-69,-31,-110,-128,-130,-130,-131,-131,-64,-68,-47,-48,-50,-51,]),'+':([98,120,121,122,123,124,125,127,128,129,167,175,215,221,232,233,234,235,240,245,258,259,260,261,262,266,271,272,273,274,],[-32,-130,-49,-52,-61,-62,-63,-65,-66,-67,204,-128,-69,-31,-130,-130,-130,-130,-110,-128,-130,-130,-131,-131,-64,-68,-47,-48,-50,-51,]),'minus':([98,120,121,122,123,124,125,127,128,129,167,175,215,221,232,233,234,235,240,245,258,259,260,261,262,266,271,272,273,274,],[-32,-130,-49,-52,-61,-62,-63,-65,-66,-67,205,-128,-69,-31,-130,-130,-130,-130,-110,-128,-130,-130,-131,-131,-64,-68,-47,-48,-50,-51,]),'and':([98,118,119,120,121,122,123,124,125,127,128,129,160,162,171,175,176,181,182,183,184,188,208,209,211,215,221,232,233,234,235,240,244,245,246,249,250,252,253,254,255,256,257,258,259,260,261,262,266,269,270,271,272,273,274,],[-32,-134,-41,-46,-49,-52,-61,-62,-63,-65,-66,-67,-134,198,-134,-128,-134,-134,-134,-134,-134,-134,-134,-134,-134,-69,-31,-133,-133,-133,-133,-110,-134,-128,-134,-134,-134,-134,-134,-42,-43,-44,-45,-130,-130,-131,-131,-64,-68,-39,-40,-47,-48,-50,-51,]),'or':([98,118,119,120,121,122,123,124,125,127,128,129,160,162,171,175,176,181,182,183,184,188,208,209,211,215,221,232,233,234,235,240,244,245,246,249,250,252,253,254,255,256,257,258,259,260,261,262,266,269,270,271,272,273,274,],[-32,-134,-41,-46,-49,-52,-61,-62,-63,-65,-66,-67,-134,199,-134,-128,-134,-134,-134,-134,-134,-134,-134,-134,-134,-69,-31,-133,-133,-133,-133,-110,-134,-128,-134,-134,-134,-134,-134,-42,-43,-44,-45,-130,-130,-131,-131,-64,-68,-39,-40,-47,-48,-50,-51,]),'to':([98,119,120,121,122,123,124,125,127,128,129,138,175,209,215,221,232,233,234,235,240,241,245,252,253,254,255,256,257,258,259,260,261,262,266,269,270,271,272,273,274,],[-32,-41,-46,-49,-52,-61,-62,-63,-65,-66,-67,173,-128,-132,-69,-31,-133,-133,-133,-133,-110,-72,-128,-134,-134,-42,-43,-44,-45,-130,-130,-131,-131,-64,-68,-39,-40,-47,-48,-50,-51,]),'do':([98,119,120,121,122,123,124,125,127,128,129,175,215,221,232,233,234,235,240,243,244,245,252,253,254,255,256,257,258,259,260,261,262,264,265,266,269,270,271,272,273,274,],[-32,-41,-46,-49,-52,-61,-62,-63,-65,-66,-67,-128,-69,-31,-133,-133,-133,-133,-110,-117,-122,-128,-134,-134,-42,-43,-44,-45,-130,-130,-131,-131,-64,276,277,-68,-39,-40,-47,-48,-50,-51,]),'cte_s':([142,148,220,],[180,187,248,]),'then':([210,242,],[-117,263,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAMA':([0,],[1,]),'SEM_ADD_GOTO_MAIN':([0,],[2,]),'SEM_GLOBAL_NAME':([3,],[4,]),'SEM_ADD_FUNC':([4,23,34,37,],[6,32,42,44,]),'PROGRAMA_OPTS':([7,],[8,]),'PRINCIPAL':([7,8,],[9,19,]),'DEC_V':([7,55,58,65,71,],[10,64,70,109,114,]),'FUNCS':([7,10,],[11,20,]),'SEM_FILL_GOTO_ANYKIND':([7,8,275,285,],[12,12,278,288,]),'FUNC_TYPES':([7,10,11,20,],[14,14,22,22,]),'SEM_MAIN_NAME':([12,],[23,]),'TIPO_SIMPLE':([13,21,49,51,66,],[25,30,57,57,110,]),'SEM_FUNC_NAME':([29,31,],[34,37,]),'LISTA_VAR':([33,36,],[39,43,]),'VARIABLE_FIX':([33,36,47,],[40,40,53,]),'SEM_ADD_GLOBAL_VARIABLES':([45,55,58,64,65,70,71,109,114,],[52,63,69,107,108,112,113,154,159,]),'PARAMS':([49,51,],[56,59,]),'BLOQUE':([52,63,69,107,108,112,113,154,159,263,276,277,282,],[60,106,111,152,153,157,158,192,195,275,280,281,285,]),'PARAM_NAME':([57,110,],[67,155,]),'LOOP_ESTATUTO':([61,],[72,]),'ESTATUTO':([61,72,],[75,117,]),'ASIGNACION':([61,72,87,],[76,76,138,]),'CONDICION':([61,72,],[77,77,]),'WHILE':([61,72,],[78,78,]),'FOR':([61,72,],[79,79,]),'LLAMADA':([61,72,73,115,136,140,142,143,144,145,149,169,170,172,200,201,202,203,212,214,220,222,230,231,236,237,238,239,],[80,80,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,]),'LECTURA':([61,72,],[81,81,]),'ESCRITURA':([61,72,],[82,82,]),'LLAMADA_BI':([61,72,],[83,83,]),'VARIABLE':([61,72,73,87,115,136,140,142,143,144,145,149,169,170,172,200,201,202,203,212,214,220,222,230,231,236,237,238,239,],[84,84,125,84,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,]),'SEM_VERIFY_FUNC_CALL':([61,72,73,115,136,140,142,143,144,145,149,169,170,172,200,201,202,203,212,214,220,222,230,231,236,237,238,239,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'POINT':([61,72,],[91,91,]),'CIRCLE':([61,72,],[92,92,]),'PENUP':([61,72,],[93,93,]),'PENDOWN':([61,72,],[94,94,]),'COLOR':([61,72,],[95,95,]),'SIZE':([61,72,],[96,96,]),'CLEAR':([61,72,],[97,97,]),'EXPRESION':([73,115,136,140,142,143,144,145,149,169,170,172,212,214,220,222,],[118,160,171,176,181,182,183,184,188,208,209,211,244,246,249,250,]),'EXP_R':([73,115,136,140,142,143,144,145,149,169,170,172,212,214,220,222,230,231,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,252,253,]),'EXP_A':([73,115,136,140,142,143,144,145,149,169,170,172,200,201,202,203,212,214,220,222,230,231,],[120,120,120,120,120,120,120,120,120,120,120,120,232,233,234,235,120,120,120,120,120,120,]),'TERMINO':([73,115,136,140,142,143,144,145,149,169,170,172,200,201,202,203,212,214,220,222,230,231,236,237,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,258,259,]),'FACTOR':([73,115,136,140,142,143,144,145,149,169,170,172,200,201,202,203,212,214,220,222,230,231,236,237,238,239,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,260,261,]),'CTE':([73,115,136,140,142,143,144,145,149,169,170,172,200,201,202,203,212,214,220,222,230,231,236,237,238,239,],[124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'SEM_ADD_COND_INDEX':([86,173,],[137,212,]),'SEM_ENDFUNC':([106,111,152,153,157,158,192,195,],[151,156,190,191,193,194,226,227,]),'SEM_VERIFY_RETURN_FUNC':([118,160,],[161,196,]),'SEM_PENDING_LOGIC_OP':([118,160,171,176,181,182,183,184,188,208,209,211,244,246,249,250,252,253,],[162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,269,270,]),'SEM_PENDING_EXPA_OP':([120,232,233,234,235,258,259,],[167,167,167,167,167,271,272,]),'SEM_PENDING_TERMINO_OP':([121,258,259,260,261,],[168,168,168,273,274,]),'SEM_ADD_FONDO_FALSO':([126,],[169,]),'SEM_ADD_EQUALS':([135,],[170,]),'LLAMADA_OPTS':([140,],[174,]),'LECTURA_OPTS':([141,],[177,]),'ESCRITURA_OPTS':([142,],[179,]),'SEM_ADD_GREATER_THAN':([163,],[200,]),'SEM_ADD_LESS_THAN':([164,],[201,]),'SEM_ADD_EQUALS_TO':([165,],[202,]),'SEM_ADD_NOT_EQUALS_TO':([166,],[203,]),'SEM_RESET_PARAM_COUNT':([174,],[213,]),'SEM_ADD_GOSUB':([175,245,],[215,266,]),'SEM_VERIFY_PARAM':([176,246,],[216,267,]),'SEM_ADD_AND':([198,],[230,]),'SEM_ADD_OR':([199,],[231,]),'SEM_ADD_PLUS':([204,],[236,]),'SEM_ADD_MINUS':([205,],[237,]),'SEM_ADD_TIMES':([206,],[238,]),'SEM_ADD_DIVISION':([207,],[239,]),'SEM_PENDING_ASSIGNATION_OP':([209,],[241,]),'SEM_ADD_GOTOF':([210,243,],[242,264,]),'SEM_PENDING_REL_OP':([232,233,234,235,],[254,255,256,257,]),'SEM_REMOVE_FONDO_FALSO':([240,],[262,]),'SEM_ADD_GOTOV':([244,],[265,]),'SEM_ADD_GOTO_SIMPLE':([279,280,281,],[282,283,284,]),'SEM_FILL_GOTO_COND_INDEX':([283,284,],[286,287,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAMA","S'",1,None,None,None),
  ('PROGRAMA -> SEM_ADD_GOTO_MAIN program SEM_GLOBAL_NAME SEM_ADD_FUNC ; PROGRAMA_OPTS PRINCIPAL','PROGRAMA',7,'p_programa','parser.py',68),
  ('PROGRAMA -> SEM_ADD_GOTO_MAIN program SEM_GLOBAL_NAME SEM_ADD_FUNC ; PRINCIPAL','PROGRAMA',6,'p_programa','parser.py',69),
  ('PROGRAMA_OPTS -> DEC_V FUNCS','PROGRAMA_OPTS',2,'p_programa_opts','parser.py',88),
  ('PROGRAMA_OPTS -> DEC_V','PROGRAMA_OPTS',1,'p_programa_opts','parser.py',89),
  ('PROGRAMA_OPTS -> FUNCS','PROGRAMA_OPTS',1,'p_programa_opts','parser.py',90),
  ('PRINCIPAL -> SEM_FILL_GOTO_ANYKIND SEM_MAIN_NAME SEM_ADD_FUNC ( ) SEM_ADD_GLOBAL_VARIABLES BLOQUE','PRINCIPAL',7,'p_principal','parser.py',96),
  ('DEC_V -> DEC_V var TIPO_SIMPLE : LISTA_VAR ;','DEC_V',6,'p_dec_v','parser.py',101),
  ('DEC_V -> var TIPO_SIMPLE : LISTA_VAR ;','DEC_V',5,'p_dec_v','parser.py',102),
  ('LISTA_VAR -> LISTA_VAR , VARIABLE_FIX','LISTA_VAR',3,'p_lista_var','parser.py',109),
  ('LISTA_VAR -> VARIABLE_FIX','LISTA_VAR',1,'p_lista_var','parser.py',110),
  ('TIPO_SIMPLE -> int','TIPO_SIMPLE',1,'p_tipo_simple','parser.py',115),
  ('TIPO_SIMPLE -> float','TIPO_SIMPLE',1,'p_tipo_simple','parser.py',116),
  ('TIPO_SIMPLE -> char','TIPO_SIMPLE',1,'p_tipo_simple','parser.py',117),
  ('FUNCS -> FUNCS FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC ( ) SEM_ADD_GLOBAL_VARIABLES BLOQUE SEM_ENDFUNC','FUNCS',10,'p_funcs','parser.py',126),
  ('FUNCS -> FUNCS FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC ( PARAMS ) SEM_ADD_GLOBAL_VARIABLES BLOQUE SEM_ENDFUNC','FUNCS',11,'p_funcs','parser.py',127),
  ('FUNCS -> FUNCS FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC ( PARAMS ) DEC_V SEM_ADD_GLOBAL_VARIABLES BLOQUE SEM_ENDFUNC','FUNCS',12,'p_funcs','parser.py',128),
  ('FUNCS -> FUNCS FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC ( ) DEC_V SEM_ADD_GLOBAL_VARIABLES BLOQUE SEM_ENDFUNC','FUNCS',11,'p_funcs','parser.py',129),
  ('FUNCS -> FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC ( ) SEM_ADD_GLOBAL_VARIABLES BLOQUE SEM_ENDFUNC','FUNCS',9,'p_funcs','parser.py',130),
  ('FUNCS -> FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC ( PARAMS ) SEM_ADD_GLOBAL_VARIABLES BLOQUE SEM_ENDFUNC','FUNCS',10,'p_funcs','parser.py',131),
  ('FUNCS -> FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC ( PARAMS ) DEC_V SEM_ADD_GLOBAL_VARIABLES BLOQUE SEM_ENDFUNC','FUNCS',11,'p_funcs','parser.py',132),
  ('FUNCS -> FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC ( ) DEC_V SEM_ADD_GLOBAL_VARIABLES BLOQUE SEM_ENDFUNC','FUNCS',10,'p_funcs','parser.py',133),
  ('FUNC_TYPES -> char','FUNC_TYPES',1,'p_func_types','parser.py',139),
  ('FUNC_TYPES -> float','FUNC_TYPES',1,'p_func_types','parser.py',140),
  ('FUNC_TYPES -> int','FUNC_TYPES',1,'p_func_types','parser.py',141),
  ('FUNC_TYPES -> void','FUNC_TYPES',1,'p_func_types','parser.py',142),
  ('PARAMS -> PARAMS , TIPO_SIMPLE PARAM_NAME','PARAMS',4,'p_params','parser.py',151),
  ('PARAMS -> TIPO_SIMPLE PARAM_NAME','PARAMS',2,'p_params','parser.py',152),
  ('PARAM_NAME -> id','PARAM_NAME',1,'p_param_name','parser.py',157),
  ('VARIABLE_FIX -> id [ cte_i ]','VARIABLE_FIX',4,'p_variable_fix','parser.py',172),
  ('VARIABLE_FIX -> id','VARIABLE_FIX',1,'p_variable_fix','parser.py',173),
  ('VARIABLE -> id [ EXPRESION ]','VARIABLE',4,'p_variable','parser.py',200),
  ('VARIABLE -> id','VARIABLE',1,'p_variable','parser.py',201),
  ('BLOQUE -> { LOOP_ESTATUTO return EXPRESION SEM_VERIFY_RETURN_FUNC ; }','BLOQUE',7,'p_bloque','parser.py',222),
  ('BLOQUE -> { LOOP_ESTATUTO }','BLOQUE',3,'p_bloque','parser.py',223),
  ('BLOQUE -> { return EXPRESION SEM_VERIFY_RETURN_FUNC ; }','BLOQUE',6,'p_bloque','parser.py',224),
  ('BLOQUE -> { }','BLOQUE',2,'p_bloque','parser.py',225),
  ('LOOP_ESTATUTO -> LOOP_ESTATUTO ESTATUTO','LOOP_ESTATUTO',2,'p_loop_estatuto','parser.py',230),
  ('LOOP_ESTATUTO -> ESTATUTO','LOOP_ESTATUTO',1,'p_loop_estatuto','parser.py',231),
  ('EXPRESION -> EXPRESION SEM_PENDING_LOGIC_OP and SEM_ADD_AND EXP_R SEM_PENDING_LOGIC_OP','EXPRESION',6,'p_expresion','parser.py',236),
  ('EXPRESION -> EXPRESION SEM_PENDING_LOGIC_OP or SEM_ADD_OR EXP_R SEM_PENDING_LOGIC_OP','EXPRESION',6,'p_expresion','parser.py',237),
  ('EXPRESION -> EXP_R','EXPRESION',1,'p_expresion','parser.py',238),
  ('EXP_R -> EXP_A > SEM_ADD_GREATER_THAN EXP_A SEM_PENDING_REL_OP','EXP_R',5,'p_exp_r','parser.py',243),
  ('EXP_R -> EXP_A < SEM_ADD_LESS_THAN EXP_A SEM_PENDING_REL_OP','EXP_R',5,'p_exp_r','parser.py',244),
  ('EXP_R -> EXP_A equals SEM_ADD_EQUALS_TO EXP_A SEM_PENDING_REL_OP','EXP_R',5,'p_exp_r','parser.py',245),
  ('EXP_R -> EXP_A not_equals SEM_ADD_NOT_EQUALS_TO EXP_A SEM_PENDING_REL_OP','EXP_R',5,'p_exp_r','parser.py',246),
  ('EXP_R -> EXP_A','EXP_R',1,'p_exp_r','parser.py',247),
  ('EXP_A -> EXP_A SEM_PENDING_EXPA_OP + SEM_ADD_PLUS TERMINO SEM_PENDING_EXPA_OP','EXP_A',6,'p_exp_a','parser.py',252),
  ('EXP_A -> EXP_A SEM_PENDING_EXPA_OP minus SEM_ADD_MINUS TERMINO SEM_PENDING_EXPA_OP','EXP_A',6,'p_exp_a','parser.py',253),
  ('EXP_A -> TERMINO','EXP_A',1,'p_exp_a','parser.py',254),
  ('TERMINO -> TERMINO SEM_PENDING_TERMINO_OP * SEM_ADD_TIMES FACTOR SEM_PENDING_TERMINO_OP','TERMINO',6,'p_termino','parser.py',259),
  ('TERMINO -> TERMINO SEM_PENDING_TERMINO_OP / SEM_ADD_DIVISION FACTOR SEM_PENDING_TERMINO_OP','TERMINO',6,'p_termino','parser.py',260),
  ('TERMINO -> FACTOR','TERMINO',1,'p_termino','parser.py',261),
  ('ESTATUTO -> ASIGNACION ;','ESTATUTO',2,'p_estatuto','parser.py',266),
  ('ESTATUTO -> CONDICION','ESTATUTO',1,'p_estatuto','parser.py',267),
  ('ESTATUTO -> WHILE','ESTATUTO',1,'p_estatuto','parser.py',268),
  ('ESTATUTO -> FOR','ESTATUTO',1,'p_estatuto','parser.py',269),
  ('ESTATUTO -> LLAMADA ;','ESTATUTO',2,'p_estatuto','parser.py',270),
  ('ESTATUTO -> LECTURA ;','ESTATUTO',2,'p_estatuto','parser.py',271),
  ('ESTATUTO -> ESCRITURA ;','ESTATUTO',2,'p_estatuto','parser.py',272),
  ('ESTATUTO -> LLAMADA_BI ;','ESTATUTO',2,'p_estatuto','parser.py',273),
  ('FACTOR -> LLAMADA','FACTOR',1,'p_factor','parser.py',278),
  ('FACTOR -> CTE','FACTOR',1,'p_factor','parser.py',279),
  ('FACTOR -> VARIABLE','FACTOR',1,'p_factor','parser.py',280),
  ('FACTOR -> ( SEM_ADD_FONDO_FALSO EXPRESION ) SEM_REMOVE_FONDO_FALSO','FACTOR',5,'p_factor','parser.py',281),
  ('CTE -> cte_i','CTE',1,'p_cte','parser.py',286),
  ('CTE -> cte_f','CTE',1,'p_cte','parser.py',287),
  ('CTE -> cte_c','CTE',1,'p_cte','parser.py',288),
  ('LLAMADA -> SEM_VERIFY_FUNC_CALL ( LLAMADA_OPTS SEM_RESET_PARAM_COUNT ) SEM_ADD_GOSUB','LLAMADA',6,'p_llamada','parser.py',316),
  ('LLAMADA -> SEM_VERIFY_FUNC_CALL ( ) SEM_ADD_GOSUB','LLAMADA',4,'p_llamada','parser.py',317),
  ('LLAMADA_OPTS -> LLAMADA_OPTS , EXPRESION SEM_VERIFY_PARAM','LLAMADA_OPTS',4,'p_llamada_opts','parser.py',322),
  ('LLAMADA_OPTS -> EXPRESION SEM_VERIFY_PARAM','LLAMADA_OPTS',2,'p_llamada_opts','parser.py',323),
  ('ASIGNACION -> VARIABLE = SEM_ADD_EQUALS EXPRESION SEM_PENDING_ASSIGNATION_OP','ASIGNACION',5,'p_asignacion','parser.py',328),
  ('CONDICION -> if ( EXPRESION ) SEM_ADD_GOTOF then BLOQUE SEM_FILL_GOTO_ANYKIND','CONDICION',8,'p_condicion','parser.py',333),
  ('CONDICION -> if ( EXPRESION ) SEM_ADD_GOTOF then BLOQUE else SEM_ADD_GOTO_SIMPLE BLOQUE SEM_FILL_GOTO_ANYKIND','CONDICION',11,'p_condicion','parser.py',334),
  ('WHILE -> while SEM_ADD_COND_INDEX ( EXPRESION ) SEM_ADD_GOTOF do BLOQUE SEM_ADD_GOTO_SIMPLE SEM_FILL_GOTO_COND_INDEX','WHILE',10,'p_while','parser.py',339),
  ('FOR -> for ASIGNACION to SEM_ADD_COND_INDEX EXPRESION SEM_ADD_GOTOV do BLOQUE SEM_ADD_GOTO_SIMPLE SEM_FILL_GOTO_COND_INDEX','FOR',10,'p_for','parser.py',344),
  ('LECTURA -> read ( LECTURA_OPTS )','LECTURA',4,'p_lectura','parser.py',349),
  ('LECTURA_OPTS -> LECTURA_OPTS , id','LECTURA_OPTS',3,'p_lectura_opts','parser.py',354),
  ('LECTURA_OPTS -> id','LECTURA_OPTS',1,'p_lectura_opts','parser.py',355),
  ('ESCRITURA -> write ( ESCRITURA_OPTS )','ESCRITURA',4,'p_escritura','parser.py',360),
  ('ESCRITURA_OPTS -> ESCRITURA_OPTS , cte_s','ESCRITURA_OPTS',3,'p_escritura_opts','parser.py',365),
  ('ESCRITURA_OPTS -> ESCRITURA_OPTS , EXPRESION','ESCRITURA_OPTS',3,'p_escritura_opts','parser.py',366),
  ('ESCRITURA_OPTS -> cte_s','ESCRITURA_OPTS',1,'p_escritura_opts','parser.py',367),
  ('ESCRITURA_OPTS -> EXPRESION','ESCRITURA_OPTS',1,'p_escritura_opts','parser.py',368),
  ('LLAMADA_BI -> POINT','LLAMADA_BI',1,'p_llamada_bi','parser.py',373),
  ('LLAMADA_BI -> CIRCLE','LLAMADA_BI',1,'p_llamada_bi','parser.py',374),
  ('LLAMADA_BI -> PENUP','LLAMADA_BI',1,'p_llamada_bi','parser.py',375),
  ('LLAMADA_BI -> PENDOWN','LLAMADA_BI',1,'p_llamada_bi','parser.py',376),
  ('LLAMADA_BI -> COLOR','LLAMADA_BI',1,'p_llamada_bi','parser.py',377),
  ('LLAMADA_BI -> SIZE','LLAMADA_BI',1,'p_llamada_bi','parser.py',378),
  ('LLAMADA_BI -> CLEAR','LLAMADA_BI',1,'p_llamada_bi','parser.py',379),
  ('CLEAR -> clear ( )','CLEAR',3,'p_clear','parser.py',384),
  ('POINT -> point ( EXPRESION , EXPRESION )','POINT',6,'p_point','parser.py',389),
  ('CIRCLE -> circle ( EXPRESION )','CIRCLE',4,'p_circle','parser.py',394),
  ('PENUP -> penup ( )','PENUP',3,'p_penup','parser.py',399),
  ('PENDOWN -> pendown ( )','PENDOWN',3,'p_pendown','parser.py',404),
  ('COLOR -> color ( cte_s )','COLOR',4,'p_color','parser.py',409),
  ('SIZE -> size ( EXPRESION )','SIZE',4,'p_size','parser.py',414),
  ('SEM_GLOBAL_NAME -> id','SEM_GLOBAL_NAME',1,'p_sem_global_name','parser.py',435),
  ('SEM_MAIN_NAME -> main','SEM_MAIN_NAME',1,'p_sem_main_name','parser.py',444),
  ('SEM_FUNC_NAME -> id','SEM_FUNC_NAME',1,'p_sem_func_name','parser.py',455),
  ('SEM_ADD_FUNC -> <empty>','SEM_ADD_FUNC',0,'p_sem_add_func','parser.py',463),
  ('SEM_ADD_GLOBAL_VARIABLES -> <empty>','SEM_ADD_GLOBAL_VARIABLES',0,'p_sem_add_global_variables','parser.py',470),
  ('SEM_ADD_PLUS -> <empty>','SEM_ADD_PLUS',0,'p_sem_add_plus','parser.py',477),
  ('SEM_ADD_MINUS -> <empty>','SEM_ADD_MINUS',0,'p_sem_add_minus','parser.py',485),
  ('SEM_ADD_TIMES -> <empty>','SEM_ADD_TIMES',0,'p_sem_add_times','parser.py',493),
  ('SEM_ADD_DIVISION -> <empty>','SEM_ADD_DIVISION',0,'p_sem_add_division','parser.py',500),
  ('SEM_ADD_EQUALS -> <empty>','SEM_ADD_EQUALS',0,'p_sem_add_equals','parser.py',508),
  ('SEM_ADD_FONDO_FALSO -> <empty>','SEM_ADD_FONDO_FALSO',0,'p_sem_add_fondo_falso','parser.py',516),
  ('SEM_REMOVE_FONDO_FALSO -> <empty>','SEM_REMOVE_FONDO_FALSO',0,'p_sem_remove_fondo_falso','parser.py',524),
  ('SEM_ADD_GREATER_THAN -> <empty>','SEM_ADD_GREATER_THAN',0,'p_sem_add_greater_than','parser.py',532),
  ('SEM_ADD_LESS_THAN -> <empty>','SEM_ADD_LESS_THAN',0,'p_sem_add_less_than','parser.py',540),
  ('SEM_ADD_EQUALS_TO -> <empty>','SEM_ADD_EQUALS_TO',0,'p_sem_add_equals_to','parser.py',548),
  ('SEM_ADD_NOT_EQUALS_TO -> <empty>','SEM_ADD_NOT_EQUALS_TO',0,'p_sem_add_not_equals_to','parser.py',556),
  ('SEM_ADD_AND -> <empty>','SEM_ADD_AND',0,'p_sem_add_and','parser.py',564),
  ('SEM_ADD_OR -> <empty>','SEM_ADD_OR',0,'p_sem_add_or','parser.py',572),
  ('SEM_ADD_GOTOF -> <empty>','SEM_ADD_GOTOF',0,'p_sem_add_gotof','parser.py',582),
  ('SEM_FILL_GOTO_ANYKIND -> <empty>','SEM_FILL_GOTO_ANYKIND',0,'p_sem_fill_goto_anykind','parser.py',601),
  ('SEM_ADD_GOTO_SIMPLE -> <empty>','SEM_ADD_GOTO_SIMPLE',0,'p_sem_add_goto_simple','parser.py',616),
  ('SEM_ADD_COND_INDEX -> <empty>','SEM_ADD_COND_INDEX',0,'p_sem_add_cond_index','parser.py',634),
  ('SEM_FILL_GOTO_COND_INDEX -> <empty>','SEM_FILL_GOTO_COND_INDEX',0,'p_sem_fill_goto_cond_index','parser.py',646),
  ('SEM_ADD_GOTOV -> <empty>','SEM_ADD_GOTOV',0,'p_sem_add_gotov','parser.py',657),
  ('SEM_ADD_GOTO_MAIN -> <empty>','SEM_ADD_GOTO_MAIN',0,'p_sem_add_goto_main','parser.py',674),
  ('SEM_ENDFUNC -> <empty>','SEM_ENDFUNC',0,'p_sem_endfunc','parser.py',685),
  ('SEM_VERIFY_FUNC_CALL -> id','SEM_VERIFY_FUNC_CALL',1,'p_sem_verify_func_call','parser.py',698),
  ('SEM_VERIFY_PARAM -> <empty>','SEM_VERIFY_PARAM',0,'p_sem_verify_param','parser.py',715),
  ('SEM_RESET_PARAM_COUNT -> <empty>','SEM_RESET_PARAM_COUNT',0,'p_sem_reset_param_count','parser.py',741),
  ('SEM_ADD_GOSUB -> <empty>','SEM_ADD_GOSUB',0,'p_sem_add_gosub','parser.py',749),
  ('SEM_VERIFY_RETURN_FUNC -> <empty>','SEM_VERIFY_RETURN_FUNC',0,'p_sem_verify_return_func','parser.py',761),
  ('SEM_PENDING_EXPA_OP -> <empty>','SEM_PENDING_EXPA_OP',0,'p_sem_pending_expa_op','parser.py',785),
  ('SEM_PENDING_TERMINO_OP -> <empty>','SEM_PENDING_TERMINO_OP',0,'p_sem_pending_termino_op','parser.py',813),
  ('SEM_PENDING_ASSIGNATION_OP -> <empty>','SEM_PENDING_ASSIGNATION_OP',0,'p_sem_pending_assignation_op','parser.py',842),
  ('SEM_PENDING_REL_OP -> <empty>','SEM_PENDING_REL_OP',0,'p_sem_pending_rel_op','parser.py',864),
  ('SEM_PENDING_LOGIC_OP -> <empty>','SEM_PENDING_LOGIC_OP',0,'p_sem_pending_logic_op','parser.py',894),
]
