
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "leftandorleft><equalsnot_equalsleftminus+left*/and char circle clear color cte_c cte_f cte_i cte_s do else equals float for global id if int main minus module not_equals or pendown penup point program read return size then to var void while write\n     PROGRAMA : SEM_ADD_GOTO_MAIN program  SEM_GLOBAL_NAME  SEM_ADD_FUNC ';' PROGRAMA_OPTS PRINCIPAL \n               | SEM_ADD_GOTO_MAIN program  SEM_GLOBAL_NAME  SEM_ADD_FUNC ';' PRINCIPAL \n    \n    PROGRAMA_OPTS :  DEC_V FUNCS\n                    | DEC_V\n                    | FUNCS\n    \n    PRINCIPAL :   SEM_FILL_MAIN_GOTO SEM_MAIN_NAME SEM_ADD_FUNC '(' ')' SEM_ADD_GLOBAL_VARIABLES BLOQUE\n    \n    DEC_V : DEC_V var  TIPO_SIMPLE ':' LISTA_VAR ';' \n            | var TIPO_SIMPLE ':' LISTA_VAR ';'\n    \n    LISTA_VAR : LISTA_VAR ',' VARIABLE_FIX\n               | VARIABLE_FIX\n    \n    TIPO_SIMPLE : int \n                 | float \n                 | char\n    \n    FUNCS :  FUNCS FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC '(' ')' SEM_ADD_GLOBAL_VARIABLES BLOQUE  SEM_ENDFUNC\n           | FUNCS FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC '(' PARAMS ')' SEM_ADD_GLOBAL_VARIABLES BLOQUE  SEM_ENDFUNC\n           | FUNCS FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC '(' PARAMS ')' DEC_V SEM_ADD_GLOBAL_VARIABLES BLOQUE   SEM_ENDFUNC\n           | FUNCS FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC '(' ')' DEC_V SEM_ADD_GLOBAL_VARIABLES BLOQUE  SEM_ENDFUNC\n           | FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC '(' ')' SEM_ADD_GLOBAL_VARIABLES BLOQUE  SEM_ENDFUNC \n           | FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC '(' PARAMS ')' SEM_ADD_GLOBAL_VARIABLES BLOQUE  SEM_ENDFUNC \n           | FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC '(' PARAMS ')' DEC_V SEM_ADD_GLOBAL_VARIABLES BLOQUE  SEM_ENDFUNC \n           | FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC '(' ')' DEC_V SEM_ADD_GLOBAL_VARIABLES BLOQUE  SEM_ENDFUNC \n\n    \n    FUNC_TYPES :  char\n                 | float \n                 | int\n                 | void\n    \n    PARAMS : PARAMS ',' TIPO_SIMPLE PARAM_NAME\n            | TIPO_SIMPLE PARAM_NAME\n    \n  PARAM_NAME : id\n  \n    VARIABLE_FIX : id '[' cte_i ']' \n                  | id\n    \n    VARIABLE : id '[' EXPRESION ']' \n              | id\n    \n    BLOQUE : '{' LOOP_ESTATUTO return EXPRESION SEM_VERIFY_RETURN_FUNC ';' '}' \n              | '{' LOOP_ESTATUTO '}' \n              | '{' return EXPRESION SEM_VERIFY_RETURN_FUNC ';' '}' \n              | '{' '}'\n    \n    LOOP_ESTATUTO : LOOP_ESTATUTO ESTATUTO \n                    | ESTATUTO\n    \n    EXPRESION :  EXPRESION SEM_PENDING_LOGIC_OP  and  SEM_ADD_AND  EXP_R  SEM_PENDING_LOGIC_OP\n                | EXPRESION SEM_PENDING_LOGIC_OP  or  SEM_ADD_OR   EXP_R  SEM_PENDING_LOGIC_OP\n                | EXP_R \n    \n    EXP_R :  EXP_A '>' SEM_ADD_GREATER_THAN   EXP_A   SEM_PENDING_REL_OP\n            | EXP_A '<' SEM_ADD_LESS_THAN   EXP_A   SEM_PENDING_REL_OP\n            | EXP_A equals SEM_ADD_EQUALS_TO   EXP_A    SEM_PENDING_REL_OP\n            | EXP_A not_equals SEM_ADD_NOT_EQUALS_TO   EXP_A   SEM_PENDING_REL_OP\n            | EXP_A \n    \n    EXP_A :  EXP_A SEM_PENDING_EXPA_OP '+' SEM_ADD_PLUS TERMINO SEM_PENDING_EXPA_OP\n            | EXP_A SEM_PENDING_EXPA_OP minus SEM_ADD_MINUS TERMINO SEM_PENDING_EXPA_OP\n            | TERMINO \n    \n    TERMINO : TERMINO SEM_PENDING_TERMINO_OP '*' SEM_ADD_TIMES  FACTOR  SEM_PENDING_TERMINO_OP\n             | TERMINO SEM_PENDING_TERMINO_OP '/' SEM_ADD_DIVISION  FACTOR  SEM_PENDING_TERMINO_OP\n             | FACTOR \n    \n    ESTATUTO : ASIGNACION ';' \n              | CONDICION \n              | WHILE \n              | FOR \n              |  '/' SEM_MUST_BE_VOID_CALL LLAMADA ';' \n              | LECTURA ';'  \n              | ESCRITURA ';' \n              | LLAMADA_BI ';'\n    \n    FACTOR : LLAMADA \n            | CTE  \n            | VARIABLE \n            | '(' SEM_ADD_FONDO_FALSO EXPRESION ')' SEM_REMOVE_FONDO_FALSO\n    \n    CTE : cte_i \n         | cte_f \n         | cte_c\n    \n    LLAMADA :   SEM_VERIFY_FUNC_CALL '(' LLAMADA_OPTS SEM_RESET_PARAM_COUNT ')' SEM_ADD_GOSUB\n             |  SEM_VERIFY_FUNC_CALL '(' ')' SEM_ADD_GOSUB\n    \n    LLAMADA_OPTS : LLAMADA_OPTS ',' EXPRESION SEM_VERIFY_PARAM\n                 | EXPRESION SEM_VERIFY_PARAM\n    \n    ASIGNACION : VARIABLE '=' SEM_ADD_EQUALS EXPRESION SEM_PENDING_ASSIGNATION_OP\n    \n    CONDICION : if '(' EXPRESION ')' SEM_ADD_GOTOF then BLOQUE SEM_FILL_GOTO_ANYKIND \n               | if '(' EXPRESION ')' SEM_ADD_GOTOF then BLOQUE else SEM_ADD_GOTO_SIMPLE BLOQUE SEM_FILL_GOTO_ANYKIND\n    \n    WHILE : while  SEM_ADD_COND_INDEX '(' EXPRESION ')' SEM_ADD_GOTOF do BLOQUE SEM_ADD_GOTO_SIMPLE SEM_FILL_GOTO_COND_INDEX\n    \n    FOR : for ASIGNACION to SEM_ADD_COND_INDEX EXPRESION SEM_ADD_GOTOV do BLOQUE SEM_ADD_GOTO_SIMPLE SEM_FILL_GOTO_COND_INDEX\n    \n    LECTURA : read '(' LECTURA_OPTS ')'\n    \n    LECTURA_OPTS : LECTURA_OPTS ',' SEM_ADD_READ\n                  |  SEM_ADD_READ\n    \n    ESCRITURA : write '(' ESCRITURA_OPTS ')'\n    \n    ESCRITURA_OPTS :   ESCRITURA_OPTS ',' SEM_ADD_PRINT_CTE_S\n                       | ESCRITURA_OPTS ',' EXPRESION SEM_ADD_PRINT\n                       | SEM_ADD_PRINT_CTE_S \n                       | EXPRESION SEM_ADD_PRINT\n    \n    LLAMADA_BI :   POINT \n                 | CIRCLE\n                 | PENUP\n                 | PENDOWN \n                 | COLOR \n                 | SIZE \n                 | CLEAR\n    \n    CLEAR : clear '(' ')'\n    \n    POINT : point '(' EXPRESION ',' EXPRESION ')'\n    \n    CIRCLE : circle '(' EXPRESION ')' \n    \n    PENUP : penup '(' ')'\n    \n    PENDOWN : pendown '(' ')'\n    \n    COLOR : color '(' cte_s ')' \n    \n    SIZE : size '(' EXPRESION ')' \n    \n    SEM_GLOBAL_NAME : id\n  \n    SEM_MAIN_NAME : main\n  \n    SEM_FUNC_NAME : id\n  \n  SEM_ADD_FUNC : \n  \n  SEM_ADD_GLOBAL_VARIABLES : \n  \n  SEM_ADD_PLUS : \n  \n  SEM_ADD_MINUS : \n  \n  SEM_ADD_TIMES : \n  \n  SEM_ADD_DIVISION : \n  \n  SEM_ADD_EQUALS : \n  \n  SEM_ADD_FONDO_FALSO : \n  \n  SEM_REMOVE_FONDO_FALSO : \n  \n  SEM_ADD_GREATER_THAN : \n  \n  SEM_ADD_LESS_THAN : \n  \n  SEM_ADD_EQUALS_TO : \n  \n  SEM_ADD_NOT_EQUALS_TO : \n  \n  SEM_ADD_AND : \n  \n  SEM_ADD_OR : \n  \n  SEM_ADD_GOTOF : \n  \n  SEM_FILL_GOTO_ANYKIND : \n  \n    SEM_FILL_MAIN_GOTO : \n  \n  SEM_ADD_GOTO_SIMPLE : \n  \n  SEM_ADD_COND_INDEX : \n  \n  SEM_FILL_GOTO_COND_INDEX : \n  \n  SEM_ADD_GOTOV : \n  \n  SEM_ADD_GOTO_MAIN : \n  \n  SEM_ENDFUNC : \n  \n    SEM_VERIFY_FUNC_CALL : id \n    \n    SEM_VERIFY_PARAM :\n    \n    SEM_RESET_PARAM_COUNT :\n    \n    SEM_ADD_GOSUB :\n    \n    SEM_VERIFY_RETURN_FUNC :\n    \n    SEM_MUST_BE_VOID_CALL :\n    \n    SEM_ADD_PRINT :\n    \n    SEM_ADD_PRINT_CTE_S : cte_s\n    \n    SEM_ADD_READ : id\n    \n  SEM_PENDING_EXPA_OP : \n  \n  SEM_PENDING_TERMINO_OP : \n  \n  SEM_PENDING_ASSIGNATION_OP : \n  \n  SEM_PENDING_REL_OP : \n  \n  SEM_PENDING_LOGIC_OP : \n  "
    
_lr_action_items = {'program':([0,2,],[-124,3,]),'$end':([1,9,19,60,74,115,231,255,],[0,-2,-1,-6,-36,-34,-35,-33,]),'id':([3,26,27,28,29,31,33,36,47,57,61,72,73,74,75,77,78,79,80,87,109,114,115,116,125,131,132,133,134,135,136,137,140,141,142,143,144,148,162,163,164,165,168,169,172,174,175,199,200,201,202,203,204,205,206,207,208,213,217,219,221,224,231,232,233,238,239,240,241,244,255,282,285,287,288,290,291,292,293,294,295,],[5,-11,-12,-13,35,35,41,41,41,68,97,97,130,-36,-38,-54,-55,-56,-131,97,68,130,-34,-37,-109,-53,171,-58,-59,-60,-108,130,178,130,130,130,130,130,-111,-112,-113,-114,130,130,130,130,-121,-115,-116,130,130,130,130,-104,-105,-106,-107,-57,130,178,130,130,-35,130,130,130,130,130,130,130,-33,-118,-73,-120,-120,-122,-122,-118,-75,-76,-74,]),';':([4,5,6,39,40,41,43,53,62,76,81,82,83,90,91,92,93,94,95,96,117,118,119,120,121,122,123,124,127,128,129,130,159,160,170,186,187,190,197,211,214,218,220,223,225,226,227,234,235,236,237,242,245,247,256,257,258,259,260,261,262,263,264,265,266,267,273,274,275,276,277,278,279,280,],[-102,-99,7,46,-10,-30,50,-9,-29,131,133,134,135,-85,-86,-87,-88,-89,-90,-91,-130,-41,-46,-49,-52,-61,-62,-63,-65,-66,-67,-32,-130,198,213,-95,-96,-92,230,-129,-137,-77,-80,-31,-94,-97,-98,-138,-138,-138,-138,-110,-69,-72,-139,-139,-42,-43,-44,-45,-135,-135,-136,-136,-64,-129,-93,-39,-40,-47,-48,-50,-51,-68,]),'var':([7,10,46,50,55,58,64,65,70,71,108,113,],[13,21,-8,-7,13,13,21,13,21,13,21,21,]),'main':([7,8,10,11,12,20,46,50,74,105,110,115,150,151,152,155,156,157,191,192,193,194,195,196,228,229,231,255,],[-119,-119,-4,-5,24,-3,-8,-7,-36,-125,-125,-34,-18,-125,-125,-14,-125,-125,-21,-19,-125,-17,-15,-125,-20,-16,-35,-33,]),'char':([7,10,11,13,20,21,46,49,50,51,66,74,105,110,115,150,151,152,155,156,157,191,192,193,194,195,196,228,229,231,255,],[15,15,15,28,15,28,-8,28,-7,28,28,-36,-125,-125,-34,-18,-125,-125,-14,-125,-125,-21,-19,-125,-17,-15,-125,-20,-16,-35,-33,]),'float':([7,10,11,13,20,21,46,49,50,51,66,74,105,110,115,150,151,152,155,156,157,191,192,193,194,195,196,228,229,231,255,],[16,16,16,27,16,27,-8,27,-7,27,27,-36,-125,-125,-34,-18,-125,-125,-14,-125,-125,-21,-19,-125,-17,-15,-125,-20,-16,-35,-33,]),'int':([7,10,11,13,20,21,46,49,50,51,66,74,105,110,115,150,151,152,155,156,157,191,192,193,194,195,196,228,229,231,255,],[17,17,17,26,17,26,-8,26,-7,26,26,-36,-125,-125,-34,-18,-125,-125,-14,-125,-125,-21,-19,-125,-17,-15,-125,-20,-16,-35,-33,]),'void':([7,10,11,20,46,50,74,105,110,115,150,151,152,155,156,157,191,192,193,194,195,196,228,229,231,255,],[18,18,18,18,-8,-7,-36,-125,-125,-34,-18,-125,-125,-14,-125,-125,-21,-19,-125,-17,-15,-125,-20,-16,-35,-33,]),'module':([14,15,16,17,18,22,],[29,-22,-23,-24,-25,31,]),'(':([23,24,32,34,35,37,42,44,73,85,86,88,89,98,99,100,101,102,103,104,114,125,126,130,136,137,138,141,142,143,144,148,162,163,164,165,168,169,171,172,174,175,199,200,201,202,203,204,205,206,207,208,217,221,224,232,233,238,239,240,241,244,],[-102,-100,38,-102,-101,-102,49,51,125,137,-121,140,141,143,144,145,146,147,148,149,125,-109,169,-126,-108,125,174,125,125,125,125,125,-111,-112,-113,-114,125,125,-126,125,125,-121,-115,-116,125,125,125,125,-104,-105,-106,-107,125,125,125,125,125,125,125,125,125,125,]),':':([25,26,27,28,30,],[33,-11,-12,-13,36,]),')':([38,49,51,56,59,67,68,118,119,120,121,122,123,124,127,128,129,130,145,146,149,154,169,173,176,177,178,179,180,181,182,185,188,189,209,210,211,212,216,222,223,234,235,236,237,242,243,245,246,251,252,253,254,256,257,258,259,260,261,262,263,264,265,266,267,268,272,274,275,276,277,278,279,280,281,],[45,55,58,65,71,-27,-28,-41,-46,-49,-52,-61,-62,-63,-65,-66,-67,-32,186,187,190,-26,211,215,218,-79,-134,220,-83,-132,-133,225,226,227,242,-128,-129,-127,249,-84,-31,-138,-138,-138,-138,-110,267,-69,-71,-78,-81,-132,273,-139,-139,-42,-43,-44,-45,-135,-135,-136,-136,-64,-129,-127,-82,-39,-40,-47,-48,-50,-51,-68,-70,]),',':([39,40,41,43,53,56,59,62,67,68,118,119,120,121,122,123,124,127,128,129,130,154,176,177,178,179,180,181,182,184,210,211,212,222,223,234,235,236,237,242,245,246,251,252,253,256,257,258,259,260,261,262,263,264,265,266,267,268,272,274,275,276,277,278,279,280,281,],[47,-10,-30,47,-9,66,66,-29,-27,-28,-41,-46,-49,-52,-61,-62,-63,-65,-66,-67,-32,-26,219,-79,-134,221,-83,-132,-133,224,244,-129,-127,-84,-31,-138,-138,-138,-138,-110,-69,-71,-78,-81,-132,-139,-139,-42,-43,-44,-45,-135,-135,-136,-136,-64,-129,-127,-82,-39,-40,-47,-48,-50,-51,-68,-70,]),'[':([41,97,130,],[48,142,142,]),'{':([45,46,50,52,55,58,63,64,65,69,70,71,106,107,108,111,112,113,153,158,269,283,284,286,289,],[-103,-8,-7,61,-103,-103,61,-103,-103,61,-103,-103,61,61,-103,61,61,-103,61,61,61,61,61,-120,61,]),'cte_i':([48,73,114,125,136,137,141,142,143,144,148,162,163,164,165,168,169,172,174,175,199,200,201,202,203,204,205,206,207,208,217,221,224,232,233,238,239,240,241,244,],[54,127,127,-109,-108,127,127,127,127,127,127,-111,-112,-113,-114,127,127,127,127,-121,-115,-116,127,127,127,127,-104,-105,-106,-107,127,127,127,127,127,127,127,127,127,127,]),']':([54,118,119,120,121,122,123,124,127,128,129,130,183,211,223,234,235,236,237,242,245,256,257,258,259,260,261,262,263,264,265,266,267,274,275,276,277,278,279,280,],[62,-41,-46,-49,-52,-61,-62,-63,-65,-66,-67,-32,223,-129,-31,-138,-138,-138,-138,-110,-69,-139,-139,-42,-43,-44,-45,-135,-135,-136,-136,-64,-129,-39,-40,-47,-48,-50,-51,-68,]),'return':([61,72,74,75,77,78,79,115,116,131,133,134,135,213,231,255,282,285,287,288,290,291,292,293,294,295,],[73,114,-36,-38,-54,-55,-56,-34,-37,-53,-58,-59,-60,-57,-35,-33,-118,-73,-120,-120,-122,-122,-118,-75,-76,-74,]),'}':([61,72,74,75,77,78,79,115,116,131,133,134,135,198,213,230,231,255,282,285,287,288,290,291,292,293,294,295,],[74,115,-36,-38,-54,-55,-56,-34,-37,-53,-58,-59,-60,231,-57,255,-35,-33,-118,-73,-120,-120,-122,-122,-118,-75,-76,-74,]),'/':([61,72,74,75,77,78,79,115,116,120,121,122,123,124,127,128,129,130,131,133,134,135,167,211,213,223,231,242,245,255,262,263,264,265,266,267,278,279,280,282,285,287,288,290,291,292,293,294,295,],[80,80,-36,-38,-54,-55,-56,-34,-37,-136,-52,-61,-62,-63,-65,-66,-67,-32,-53,-58,-59,-60,208,-129,-57,-31,-35,-110,-69,-33,-136,-136,-136,-136,-64,-129,-50,-51,-68,-118,-73,-120,-120,-122,-122,-118,-75,-76,-74,]),'if':([61,72,74,75,77,78,79,115,116,131,133,134,135,213,231,255,282,285,287,288,290,291,292,293,294,295,],[85,85,-36,-38,-54,-55,-56,-34,-37,-53,-58,-59,-60,-57,-35,-33,-118,-73,-120,-120,-122,-122,-118,-75,-76,-74,]),'while':([61,72,74,75,77,78,79,115,116,131,133,134,135,213,231,255,282,285,287,288,290,291,292,293,294,295,],[86,86,-36,-38,-54,-55,-56,-34,-37,-53,-58,-59,-60,-57,-35,-33,-118,-73,-120,-120,-122,-122,-118,-75,-76,-74,]),'for':([61,72,74,75,77,78,79,115,116,131,133,134,135,213,231,255,282,285,287,288,290,291,292,293,294,295,],[87,87,-36,-38,-54,-55,-56,-34,-37,-53,-58,-59,-60,-57,-35,-33,-118,-73,-120,-120,-122,-122,-118,-75,-76,-74,]),'read':([61,72,74,75,77,78,79,115,116,131,133,134,135,213,231,255,282,285,287,288,290,291,292,293,294,295,],[88,88,-36,-38,-54,-55,-56,-34,-37,-53,-58,-59,-60,-57,-35,-33,-118,-73,-120,-120,-122,-122,-118,-75,-76,-74,]),'write':([61,72,74,75,77,78,79,115,116,131,133,134,135,213,231,255,282,285,287,288,290,291,292,293,294,295,],[89,89,-36,-38,-54,-55,-56,-34,-37,-53,-58,-59,-60,-57,-35,-33,-118,-73,-120,-120,-122,-122,-118,-75,-76,-74,]),'point':([61,72,74,75,77,78,79,115,116,131,133,134,135,213,231,255,282,285,287,288,290,291,292,293,294,295,],[98,98,-36,-38,-54,-55,-56,-34,-37,-53,-58,-59,-60,-57,-35,-33,-118,-73,-120,-120,-122,-122,-118,-75,-76,-74,]),'circle':([61,72,74,75,77,78,79,115,116,131,133,134,135,213,231,255,282,285,287,288,290,291,292,293,294,295,],[99,99,-36,-38,-54,-55,-56,-34,-37,-53,-58,-59,-60,-57,-35,-33,-118,-73,-120,-120,-122,-122,-118,-75,-76,-74,]),'penup':([61,72,74,75,77,78,79,115,116,131,133,134,135,213,231,255,282,285,287,288,290,291,292,293,294,295,],[100,100,-36,-38,-54,-55,-56,-34,-37,-53,-58,-59,-60,-57,-35,-33,-118,-73,-120,-120,-122,-122,-118,-75,-76,-74,]),'pendown':([61,72,74,75,77,78,79,115,116,131,133,134,135,213,231,255,282,285,287,288,290,291,292,293,294,295,],[101,101,-36,-38,-54,-55,-56,-34,-37,-53,-58,-59,-60,-57,-35,-33,-118,-73,-120,-120,-122,-122,-118,-75,-76,-74,]),'color':([61,72,74,75,77,78,79,115,116,131,133,134,135,213,231,255,282,285,287,288,290,291,292,293,294,295,],[102,102,-36,-38,-54,-55,-56,-34,-37,-53,-58,-59,-60,-57,-35,-33,-118,-73,-120,-120,-122,-122,-118,-75,-76,-74,]),'size':([61,72,74,75,77,78,79,115,116,131,133,134,135,213,231,255,282,285,287,288,290,291,292,293,294,295,],[103,103,-36,-38,-54,-55,-56,-34,-37,-53,-58,-59,-60,-57,-35,-33,-118,-73,-120,-120,-122,-122,-118,-75,-76,-74,]),'clear':([61,72,74,75,77,78,79,115,116,131,133,134,135,213,231,255,282,285,287,288,290,291,292,293,294,295,],[104,104,-36,-38,-54,-55,-56,-34,-37,-53,-58,-59,-60,-57,-35,-33,-118,-73,-120,-120,-122,-122,-118,-75,-76,-74,]),'cte_f':([73,114,125,136,137,141,142,143,144,148,162,163,164,165,168,169,172,174,175,199,200,201,202,203,204,205,206,207,208,217,221,224,232,233,238,239,240,241,244,],[128,128,-109,-108,128,128,128,128,128,128,-111,-112,-113,-114,128,128,128,128,-121,-115,-116,128,128,128,128,-104,-105,-106,-107,128,128,128,128,128,128,128,128,128,128,]),'cte_c':([73,114,125,136,137,141,142,143,144,148,162,163,164,165,168,169,172,174,175,199,200,201,202,203,204,205,206,207,208,217,221,224,232,233,238,239,240,241,244,],[129,129,-109,-108,129,129,129,129,129,129,-111,-112,-113,-114,129,129,129,129,-121,-115,-116,129,129,129,129,-104,-105,-106,-107,129,129,129,129,129,129,129,129,129,129,]),'else':([74,115,231,255,282,],[-36,-34,-35,-33,286,]),'=':([84,97,223,],[136,-32,-31,]),'and':([117,118,119,120,121,122,123,124,127,128,129,130,159,161,173,181,183,184,185,189,209,211,212,214,216,223,234,235,236,237,242,245,250,253,254,256,257,258,259,260,261,262,263,264,265,266,267,268,274,275,276,277,278,279,280,],[-139,-41,-46,-49,-52,-61,-62,-63,-65,-66,-67,-32,-139,199,-139,-139,-139,-139,-139,-139,-139,-129,-139,-139,-139,-31,-138,-138,-138,-138,-110,-69,-139,-139,-139,-139,-139,-42,-43,-44,-45,-135,-135,-136,-136,-64,-129,-139,-39,-40,-47,-48,-50,-51,-68,]),'or':([117,118,119,120,121,122,123,124,127,128,129,130,159,161,173,181,183,184,185,189,209,211,212,214,216,223,234,235,236,237,242,245,250,253,254,256,257,258,259,260,261,262,263,264,265,266,267,268,274,275,276,277,278,279,280,],[-139,-41,-46,-49,-52,-61,-62,-63,-65,-66,-67,-32,-139,200,-139,-139,-139,-139,-139,-139,-139,-129,-139,-139,-139,-31,-138,-138,-138,-138,-110,-69,-139,-139,-139,-139,-139,-42,-43,-44,-45,-135,-135,-136,-136,-64,-129,-139,-39,-40,-47,-48,-50,-51,-68,]),'to':([118,119,120,121,122,123,124,127,128,129,130,139,211,214,223,234,235,236,237,242,245,247,256,257,258,259,260,261,262,263,264,265,266,267,274,275,276,277,278,279,280,],[-41,-46,-49,-52,-61,-62,-63,-65,-66,-67,-32,175,-129,-137,-31,-138,-138,-138,-138,-110,-69,-72,-139,-139,-42,-43,-44,-45,-135,-135,-136,-136,-64,-129,-39,-40,-47,-48,-50,-51,-68,]),'do':([118,119,120,121,122,123,124,127,128,129,130,211,223,234,235,236,237,242,245,249,250,256,257,258,259,260,261,262,263,264,265,266,267,270,271,274,275,276,277,278,279,280,],[-41,-46,-49,-52,-61,-62,-63,-65,-66,-67,-32,-129,-31,-138,-138,-138,-138,-110,-69,-117,-123,-139,-139,-42,-43,-44,-45,-135,-135,-136,-136,-64,-129,283,284,-39,-40,-47,-48,-50,-51,-68,]),'>':([119,120,121,122,123,124,127,128,129,130,211,223,242,245,262,263,264,265,266,267,276,277,278,279,280,],[162,-49,-52,-61,-62,-63,-65,-66,-67,-32,-129,-31,-110,-69,-135,-135,-136,-136,-64,-129,-47,-48,-50,-51,-68,]),'<':([119,120,121,122,123,124,127,128,129,130,211,223,242,245,262,263,264,265,266,267,276,277,278,279,280,],[163,-49,-52,-61,-62,-63,-65,-66,-67,-32,-129,-31,-110,-69,-135,-135,-136,-136,-64,-129,-47,-48,-50,-51,-68,]),'equals':([119,120,121,122,123,124,127,128,129,130,211,223,242,245,262,263,264,265,266,267,276,277,278,279,280,],[164,-49,-52,-61,-62,-63,-65,-66,-67,-32,-129,-31,-110,-69,-135,-135,-136,-136,-64,-129,-47,-48,-50,-51,-68,]),'not_equals':([119,120,121,122,123,124,127,128,129,130,211,223,242,245,262,263,264,265,266,267,276,277,278,279,280,],[165,-49,-52,-61,-62,-63,-65,-66,-67,-32,-129,-31,-110,-69,-135,-135,-136,-136,-64,-129,-47,-48,-50,-51,-68,]),'+':([119,120,121,122,123,124,127,128,129,130,166,211,223,234,235,236,237,242,245,262,263,264,265,266,267,276,277,278,279,280,],[-135,-49,-52,-61,-62,-63,-65,-66,-67,-32,205,-129,-31,-135,-135,-135,-135,-110,-69,-135,-135,-136,-136,-64,-129,-47,-48,-50,-51,-68,]),'minus':([119,120,121,122,123,124,127,128,129,130,166,211,223,234,235,236,237,242,245,262,263,264,265,266,267,276,277,278,279,280,],[-135,-49,-52,-61,-62,-63,-65,-66,-67,-32,206,-129,-31,-135,-135,-135,-135,-110,-69,-135,-135,-136,-136,-64,-129,-47,-48,-50,-51,-68,]),'*':([120,121,122,123,124,127,128,129,130,167,211,223,242,245,262,263,264,265,266,267,278,279,280,],[-136,-52,-61,-62,-63,-65,-66,-67,-32,207,-129,-31,-110,-69,-136,-136,-136,-136,-64,-129,-50,-51,-68,]),'cte_s':([141,147,221,],[182,188,182,]),'then':([215,248,],[-117,269,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAMA':([0,],[1,]),'SEM_ADD_GOTO_MAIN':([0,],[2,]),'SEM_GLOBAL_NAME':([3,],[4,]),'SEM_ADD_FUNC':([4,23,34,37,],[6,32,42,44,]),'PROGRAMA_OPTS':([7,],[8,]),'PRINCIPAL':([7,8,],[9,19,]),'DEC_V':([7,55,58,65,71,],[10,64,70,108,113,]),'FUNCS':([7,10,],[11,20,]),'SEM_FILL_MAIN_GOTO':([7,8,],[12,12,]),'FUNC_TYPES':([7,10,11,20,],[14,14,22,22,]),'SEM_MAIN_NAME':([12,],[23,]),'TIPO_SIMPLE':([13,21,49,51,66,],[25,30,57,57,109,]),'SEM_FUNC_NAME':([29,31,],[34,37,]),'LISTA_VAR':([33,36,],[39,43,]),'VARIABLE_FIX':([33,36,47,],[40,40,53,]),'SEM_ADD_GLOBAL_VARIABLES':([45,55,58,64,65,70,71,108,113,],[52,63,69,106,107,111,112,153,158,]),'PARAMS':([49,51,],[56,59,]),'BLOQUE':([52,63,69,106,107,111,112,153,158,269,283,284,289,],[60,105,110,151,152,156,157,193,196,282,287,288,292,]),'PARAM_NAME':([57,109,],[67,154,]),'LOOP_ESTATUTO':([61,],[72,]),'ESTATUTO':([61,72,],[75,116,]),'ASIGNACION':([61,72,87,],[76,76,139,]),'CONDICION':([61,72,],[77,77,]),'WHILE':([61,72,],[78,78,]),'FOR':([61,72,],[79,79,]),'LECTURA':([61,72,],[81,81,]),'ESCRITURA':([61,72,],[82,82,]),'LLAMADA_BI':([61,72,],[83,83,]),'VARIABLE':([61,72,73,87,114,137,141,142,143,144,148,168,169,172,174,201,202,203,204,217,221,224,232,233,238,239,240,241,244,],[84,84,124,84,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'POINT':([61,72,],[90,90,]),'CIRCLE':([61,72,],[91,91,]),'PENUP':([61,72,],[92,92,]),'PENDOWN':([61,72,],[93,93,]),'COLOR':([61,72,],[94,94,]),'SIZE':([61,72,],[95,95,]),'CLEAR':([61,72,],[96,96,]),'EXPRESION':([73,114,137,141,142,143,144,148,168,169,172,174,217,221,224,244,],[117,159,173,181,183,184,185,189,209,212,214,216,250,253,254,268,]),'EXP_R':([73,114,137,141,142,143,144,148,168,169,172,174,217,221,224,232,233,244,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,256,257,118,]),'EXP_A':([73,114,137,141,142,143,144,148,168,169,172,174,201,202,203,204,217,221,224,232,233,244,],[119,119,119,119,119,119,119,119,119,119,119,119,234,235,236,237,119,119,119,119,119,119,]),'TERMINO':([73,114,137,141,142,143,144,148,168,169,172,174,201,202,203,204,217,221,224,232,233,238,239,244,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,262,263,120,]),'FACTOR':([73,114,137,141,142,143,144,148,168,169,172,174,201,202,203,204,217,221,224,232,233,238,239,240,241,244,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,264,265,121,]),'LLAMADA':([73,114,132,137,141,142,143,144,148,168,169,172,174,201,202,203,204,217,221,224,232,233,238,239,240,241,244,],[122,122,170,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'CTE':([73,114,137,141,142,143,144,148,168,169,172,174,201,202,203,204,217,221,224,232,233,238,239,240,241,244,],[123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,]),'SEM_VERIFY_FUNC_CALL':([73,114,132,137,141,142,143,144,148,168,169,172,174,201,202,203,204,217,221,224,232,233,238,239,240,241,244,],[126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,]),'SEM_MUST_BE_VOID_CALL':([80,],[132,]),'SEM_ADD_COND_INDEX':([86,175,],[138,217,]),'SEM_ENDFUNC':([105,110,151,152,156,157,193,196,],[150,155,191,192,194,195,228,229,]),'SEM_VERIFY_RETURN_FUNC':([117,159,],[160,197,]),'SEM_PENDING_LOGIC_OP':([117,159,173,181,183,184,185,189,209,212,214,216,250,253,254,256,257,268,],[161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,274,275,161,]),'SEM_PENDING_EXPA_OP':([119,234,235,236,237,262,263,],[166,166,166,166,166,276,277,]),'SEM_PENDING_TERMINO_OP':([120,262,263,264,265,],[167,167,167,278,279,]),'SEM_ADD_FONDO_FALSO':([125,],[168,]),'SEM_ADD_EQUALS':([136,],[172,]),'LECTURA_OPTS':([140,],[176,]),'SEM_ADD_READ':([140,219,],[177,251,]),'ESCRITURA_OPTS':([141,],[179,]),'SEM_ADD_PRINT_CTE_S':([141,221,],[180,252,]),'SEM_ADD_GREATER_THAN':([162,],[201,]),'SEM_ADD_LESS_THAN':([163,],[202,]),'SEM_ADD_EQUALS_TO':([164,],[203,]),'SEM_ADD_NOT_EQUALS_TO':([165,],[204,]),'LLAMADA_OPTS':([169,],[210,]),'SEM_ADD_PRINT':([181,253,],[222,272,]),'SEM_ADD_AND':([199,],[232,]),'SEM_ADD_OR':([200,],[233,]),'SEM_ADD_PLUS':([205,],[238,]),'SEM_ADD_MINUS':([206,],[239,]),'SEM_ADD_TIMES':([207,],[240,]),'SEM_ADD_DIVISION':([208,],[241,]),'SEM_RESET_PARAM_COUNT':([210,],[243,]),'SEM_ADD_GOSUB':([211,267,],[245,280,]),'SEM_VERIFY_PARAM':([212,268,],[246,281,]),'SEM_PENDING_ASSIGNATION_OP':([214,],[247,]),'SEM_ADD_GOTOF':([215,249,],[248,270,]),'SEM_PENDING_REL_OP':([234,235,236,237,],[258,259,260,261,]),'SEM_REMOVE_FONDO_FALSO':([242,],[266,]),'SEM_ADD_GOTOV':([250,],[271,]),'SEM_FILL_GOTO_ANYKIND':([282,292,],[285,295,]),'SEM_ADD_GOTO_SIMPLE':([286,287,288,],[289,290,291,]),'SEM_FILL_GOTO_COND_INDEX':([290,291,],[293,294,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAMA","S'",1,None,None,None),
  ('PROGRAMA -> SEM_ADD_GOTO_MAIN program SEM_GLOBAL_NAME SEM_ADD_FUNC ; PROGRAMA_OPTS PRINCIPAL','PROGRAMA',7,'p_programa','parser.py',73),
  ('PROGRAMA -> SEM_ADD_GOTO_MAIN program SEM_GLOBAL_NAME SEM_ADD_FUNC ; PRINCIPAL','PROGRAMA',6,'p_programa','parser.py',74),
  ('PROGRAMA_OPTS -> DEC_V FUNCS','PROGRAMA_OPTS',2,'p_programa_opts','parser.py',93),
  ('PROGRAMA_OPTS -> DEC_V','PROGRAMA_OPTS',1,'p_programa_opts','parser.py',94),
  ('PROGRAMA_OPTS -> FUNCS','PROGRAMA_OPTS',1,'p_programa_opts','parser.py',95),
  ('PRINCIPAL -> SEM_FILL_MAIN_GOTO SEM_MAIN_NAME SEM_ADD_FUNC ( ) SEM_ADD_GLOBAL_VARIABLES BLOQUE','PRINCIPAL',7,'p_principal','parser.py',101),
  ('DEC_V -> DEC_V var TIPO_SIMPLE : LISTA_VAR ;','DEC_V',6,'p_dec_v','parser.py',106),
  ('DEC_V -> var TIPO_SIMPLE : LISTA_VAR ;','DEC_V',5,'p_dec_v','parser.py',107),
  ('LISTA_VAR -> LISTA_VAR , VARIABLE_FIX','LISTA_VAR',3,'p_lista_var','parser.py',114),
  ('LISTA_VAR -> VARIABLE_FIX','LISTA_VAR',1,'p_lista_var','parser.py',115),
  ('TIPO_SIMPLE -> int','TIPO_SIMPLE',1,'p_tipo_simple','parser.py',120),
  ('TIPO_SIMPLE -> float','TIPO_SIMPLE',1,'p_tipo_simple','parser.py',121),
  ('TIPO_SIMPLE -> char','TIPO_SIMPLE',1,'p_tipo_simple','parser.py',122),
  ('FUNCS -> FUNCS FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC ( ) SEM_ADD_GLOBAL_VARIABLES BLOQUE SEM_ENDFUNC','FUNCS',10,'p_funcs','parser.py',131),
  ('FUNCS -> FUNCS FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC ( PARAMS ) SEM_ADD_GLOBAL_VARIABLES BLOQUE SEM_ENDFUNC','FUNCS',11,'p_funcs','parser.py',132),
  ('FUNCS -> FUNCS FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC ( PARAMS ) DEC_V SEM_ADD_GLOBAL_VARIABLES BLOQUE SEM_ENDFUNC','FUNCS',12,'p_funcs','parser.py',133),
  ('FUNCS -> FUNCS FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC ( ) DEC_V SEM_ADD_GLOBAL_VARIABLES BLOQUE SEM_ENDFUNC','FUNCS',11,'p_funcs','parser.py',134),
  ('FUNCS -> FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC ( ) SEM_ADD_GLOBAL_VARIABLES BLOQUE SEM_ENDFUNC','FUNCS',9,'p_funcs','parser.py',135),
  ('FUNCS -> FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC ( PARAMS ) SEM_ADD_GLOBAL_VARIABLES BLOQUE SEM_ENDFUNC','FUNCS',10,'p_funcs','parser.py',136),
  ('FUNCS -> FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC ( PARAMS ) DEC_V SEM_ADD_GLOBAL_VARIABLES BLOQUE SEM_ENDFUNC','FUNCS',11,'p_funcs','parser.py',137),
  ('FUNCS -> FUNC_TYPES module SEM_FUNC_NAME SEM_ADD_FUNC ( ) DEC_V SEM_ADD_GLOBAL_VARIABLES BLOQUE SEM_ENDFUNC','FUNCS',10,'p_funcs','parser.py',138),
  ('FUNC_TYPES -> char','FUNC_TYPES',1,'p_func_types','parser.py',144),
  ('FUNC_TYPES -> float','FUNC_TYPES',1,'p_func_types','parser.py',145),
  ('FUNC_TYPES -> int','FUNC_TYPES',1,'p_func_types','parser.py',146),
  ('FUNC_TYPES -> void','FUNC_TYPES',1,'p_func_types','parser.py',147),
  ('PARAMS -> PARAMS , TIPO_SIMPLE PARAM_NAME','PARAMS',4,'p_params','parser.py',156),
  ('PARAMS -> TIPO_SIMPLE PARAM_NAME','PARAMS',2,'p_params','parser.py',157),
  ('PARAM_NAME -> id','PARAM_NAME',1,'p_param_name','parser.py',162),
  ('VARIABLE_FIX -> id [ cte_i ]','VARIABLE_FIX',4,'p_variable_fix','parser.py',183),
  ('VARIABLE_FIX -> id','VARIABLE_FIX',1,'p_variable_fix','parser.py',184),
  ('VARIABLE -> id [ EXPRESION ]','VARIABLE',4,'p_variable','parser.py',215),
  ('VARIABLE -> id','VARIABLE',1,'p_variable','parser.py',216),
  ('BLOQUE -> { LOOP_ESTATUTO return EXPRESION SEM_VERIFY_RETURN_FUNC ; }','BLOQUE',7,'p_bloque','parser.py',241),
  ('BLOQUE -> { LOOP_ESTATUTO }','BLOQUE',3,'p_bloque','parser.py',242),
  ('BLOQUE -> { return EXPRESION SEM_VERIFY_RETURN_FUNC ; }','BLOQUE',6,'p_bloque','parser.py',243),
  ('BLOQUE -> { }','BLOQUE',2,'p_bloque','parser.py',244),
  ('LOOP_ESTATUTO -> LOOP_ESTATUTO ESTATUTO','LOOP_ESTATUTO',2,'p_loop_estatuto','parser.py',249),
  ('LOOP_ESTATUTO -> ESTATUTO','LOOP_ESTATUTO',1,'p_loop_estatuto','parser.py',250),
  ('EXPRESION -> EXPRESION SEM_PENDING_LOGIC_OP and SEM_ADD_AND EXP_R SEM_PENDING_LOGIC_OP','EXPRESION',6,'p_expresion','parser.py',255),
  ('EXPRESION -> EXPRESION SEM_PENDING_LOGIC_OP or SEM_ADD_OR EXP_R SEM_PENDING_LOGIC_OP','EXPRESION',6,'p_expresion','parser.py',256),
  ('EXPRESION -> EXP_R','EXPRESION',1,'p_expresion','parser.py',257),
  ('EXP_R -> EXP_A > SEM_ADD_GREATER_THAN EXP_A SEM_PENDING_REL_OP','EXP_R',5,'p_exp_r','parser.py',262),
  ('EXP_R -> EXP_A < SEM_ADD_LESS_THAN EXP_A SEM_PENDING_REL_OP','EXP_R',5,'p_exp_r','parser.py',263),
  ('EXP_R -> EXP_A equals SEM_ADD_EQUALS_TO EXP_A SEM_PENDING_REL_OP','EXP_R',5,'p_exp_r','parser.py',264),
  ('EXP_R -> EXP_A not_equals SEM_ADD_NOT_EQUALS_TO EXP_A SEM_PENDING_REL_OP','EXP_R',5,'p_exp_r','parser.py',265),
  ('EXP_R -> EXP_A','EXP_R',1,'p_exp_r','parser.py',266),
  ('EXP_A -> EXP_A SEM_PENDING_EXPA_OP + SEM_ADD_PLUS TERMINO SEM_PENDING_EXPA_OP','EXP_A',6,'p_exp_a','parser.py',271),
  ('EXP_A -> EXP_A SEM_PENDING_EXPA_OP minus SEM_ADD_MINUS TERMINO SEM_PENDING_EXPA_OP','EXP_A',6,'p_exp_a','parser.py',272),
  ('EXP_A -> TERMINO','EXP_A',1,'p_exp_a','parser.py',273),
  ('TERMINO -> TERMINO SEM_PENDING_TERMINO_OP * SEM_ADD_TIMES FACTOR SEM_PENDING_TERMINO_OP','TERMINO',6,'p_termino','parser.py',278),
  ('TERMINO -> TERMINO SEM_PENDING_TERMINO_OP / SEM_ADD_DIVISION FACTOR SEM_PENDING_TERMINO_OP','TERMINO',6,'p_termino','parser.py',279),
  ('TERMINO -> FACTOR','TERMINO',1,'p_termino','parser.py',280),
  ('ESTATUTO -> ASIGNACION ;','ESTATUTO',2,'p_estatuto','parser.py',285),
  ('ESTATUTO -> CONDICION','ESTATUTO',1,'p_estatuto','parser.py',286),
  ('ESTATUTO -> WHILE','ESTATUTO',1,'p_estatuto','parser.py',287),
  ('ESTATUTO -> FOR','ESTATUTO',1,'p_estatuto','parser.py',288),
  ('ESTATUTO -> / SEM_MUST_BE_VOID_CALL LLAMADA ;','ESTATUTO',4,'p_estatuto','parser.py',289),
  ('ESTATUTO -> LECTURA ;','ESTATUTO',2,'p_estatuto','parser.py',290),
  ('ESTATUTO -> ESCRITURA ;','ESTATUTO',2,'p_estatuto','parser.py',291),
  ('ESTATUTO -> LLAMADA_BI ;','ESTATUTO',2,'p_estatuto','parser.py',292),
  ('FACTOR -> LLAMADA','FACTOR',1,'p_factor','parser.py',297),
  ('FACTOR -> CTE','FACTOR',1,'p_factor','parser.py',298),
  ('FACTOR -> VARIABLE','FACTOR',1,'p_factor','parser.py',299),
  ('FACTOR -> ( SEM_ADD_FONDO_FALSO EXPRESION ) SEM_REMOVE_FONDO_FALSO','FACTOR',5,'p_factor','parser.py',300),
  ('CTE -> cte_i','CTE',1,'p_cte','parser.py',312),
  ('CTE -> cte_f','CTE',1,'p_cte','parser.py',313),
  ('CTE -> cte_c','CTE',1,'p_cte','parser.py',314),
  ('LLAMADA -> SEM_VERIFY_FUNC_CALL ( LLAMADA_OPTS SEM_RESET_PARAM_COUNT ) SEM_ADD_GOSUB','LLAMADA',6,'p_llamada','parser.py',343),
  ('LLAMADA -> SEM_VERIFY_FUNC_CALL ( ) SEM_ADD_GOSUB','LLAMADA',4,'p_llamada','parser.py',344),
  ('LLAMADA_OPTS -> LLAMADA_OPTS , EXPRESION SEM_VERIFY_PARAM','LLAMADA_OPTS',4,'p_llamada_opts','parser.py',349),
  ('LLAMADA_OPTS -> EXPRESION SEM_VERIFY_PARAM','LLAMADA_OPTS',2,'p_llamada_opts','parser.py',350),
  ('ASIGNACION -> VARIABLE = SEM_ADD_EQUALS EXPRESION SEM_PENDING_ASSIGNATION_OP','ASIGNACION',5,'p_asignacion','parser.py',355),
  ('CONDICION -> if ( EXPRESION ) SEM_ADD_GOTOF then BLOQUE SEM_FILL_GOTO_ANYKIND','CONDICION',8,'p_condicion','parser.py',360),
  ('CONDICION -> if ( EXPRESION ) SEM_ADD_GOTOF then BLOQUE else SEM_ADD_GOTO_SIMPLE BLOQUE SEM_FILL_GOTO_ANYKIND','CONDICION',11,'p_condicion','parser.py',361),
  ('WHILE -> while SEM_ADD_COND_INDEX ( EXPRESION ) SEM_ADD_GOTOF do BLOQUE SEM_ADD_GOTO_SIMPLE SEM_FILL_GOTO_COND_INDEX','WHILE',10,'p_while','parser.py',366),
  ('FOR -> for ASIGNACION to SEM_ADD_COND_INDEX EXPRESION SEM_ADD_GOTOV do BLOQUE SEM_ADD_GOTO_SIMPLE SEM_FILL_GOTO_COND_INDEX','FOR',10,'p_for','parser.py',371),
  ('LECTURA -> read ( LECTURA_OPTS )','LECTURA',4,'p_lectura','parser.py',376),
  ('LECTURA_OPTS -> LECTURA_OPTS , SEM_ADD_READ','LECTURA_OPTS',3,'p_lectura_opts','parser.py',381),
  ('LECTURA_OPTS -> SEM_ADD_READ','LECTURA_OPTS',1,'p_lectura_opts','parser.py',382),
  ('ESCRITURA -> write ( ESCRITURA_OPTS )','ESCRITURA',4,'p_escritura','parser.py',387),
  ('ESCRITURA_OPTS -> ESCRITURA_OPTS , SEM_ADD_PRINT_CTE_S','ESCRITURA_OPTS',3,'p_escritura_opts','parser.py',392),
  ('ESCRITURA_OPTS -> ESCRITURA_OPTS , EXPRESION SEM_ADD_PRINT','ESCRITURA_OPTS',4,'p_escritura_opts','parser.py',393),
  ('ESCRITURA_OPTS -> SEM_ADD_PRINT_CTE_S','ESCRITURA_OPTS',1,'p_escritura_opts','parser.py',394),
  ('ESCRITURA_OPTS -> EXPRESION SEM_ADD_PRINT','ESCRITURA_OPTS',2,'p_escritura_opts','parser.py',395),
  ('LLAMADA_BI -> POINT','LLAMADA_BI',1,'p_llamada_bi','parser.py',400),
  ('LLAMADA_BI -> CIRCLE','LLAMADA_BI',1,'p_llamada_bi','parser.py',401),
  ('LLAMADA_BI -> PENUP','LLAMADA_BI',1,'p_llamada_bi','parser.py',402),
  ('LLAMADA_BI -> PENDOWN','LLAMADA_BI',1,'p_llamada_bi','parser.py',403),
  ('LLAMADA_BI -> COLOR','LLAMADA_BI',1,'p_llamada_bi','parser.py',404),
  ('LLAMADA_BI -> SIZE','LLAMADA_BI',1,'p_llamada_bi','parser.py',405),
  ('LLAMADA_BI -> CLEAR','LLAMADA_BI',1,'p_llamada_bi','parser.py',406),
  ('CLEAR -> clear ( )','CLEAR',3,'p_clear','parser.py',411),
  ('POINT -> point ( EXPRESION , EXPRESION )','POINT',6,'p_point','parser.py',416),
  ('CIRCLE -> circle ( EXPRESION )','CIRCLE',4,'p_circle','parser.py',421),
  ('PENUP -> penup ( )','PENUP',3,'p_penup','parser.py',426),
  ('PENDOWN -> pendown ( )','PENDOWN',3,'p_pendown','parser.py',431),
  ('COLOR -> color ( cte_s )','COLOR',4,'p_color','parser.py',436),
  ('SIZE -> size ( EXPRESION )','SIZE',4,'p_size','parser.py',441),
  ('SEM_GLOBAL_NAME -> id','SEM_GLOBAL_NAME',1,'p_sem_global_name','parser.py',464),
  ('SEM_MAIN_NAME -> main','SEM_MAIN_NAME',1,'p_sem_main_name','parser.py',475),
  ('SEM_FUNC_NAME -> id','SEM_FUNC_NAME',1,'p_sem_func_name','parser.py',486),
  ('SEM_ADD_FUNC -> <empty>','SEM_ADD_FUNC',0,'p_sem_add_func','parser.py',494),
  ('SEM_ADD_GLOBAL_VARIABLES -> <empty>','SEM_ADD_GLOBAL_VARIABLES',0,'p_sem_add_global_variables','parser.py',502),
  ('SEM_ADD_PLUS -> <empty>','SEM_ADD_PLUS',0,'p_sem_add_plus','parser.py',509),
  ('SEM_ADD_MINUS -> <empty>','SEM_ADD_MINUS',0,'p_sem_add_minus','parser.py',517),
  ('SEM_ADD_TIMES -> <empty>','SEM_ADD_TIMES',0,'p_sem_add_times','parser.py',525),
  ('SEM_ADD_DIVISION -> <empty>','SEM_ADD_DIVISION',0,'p_sem_add_division','parser.py',532),
  ('SEM_ADD_EQUALS -> <empty>','SEM_ADD_EQUALS',0,'p_sem_add_equals','parser.py',540),
  ('SEM_ADD_FONDO_FALSO -> <empty>','SEM_ADD_FONDO_FALSO',0,'p_sem_add_fondo_falso','parser.py',548),
  ('SEM_REMOVE_FONDO_FALSO -> <empty>','SEM_REMOVE_FONDO_FALSO',0,'p_sem_remove_fondo_falso','parser.py',556),
  ('SEM_ADD_GREATER_THAN -> <empty>','SEM_ADD_GREATER_THAN',0,'p_sem_add_greater_than','parser.py',564),
  ('SEM_ADD_LESS_THAN -> <empty>','SEM_ADD_LESS_THAN',0,'p_sem_add_less_than','parser.py',572),
  ('SEM_ADD_EQUALS_TO -> <empty>','SEM_ADD_EQUALS_TO',0,'p_sem_add_equals_to','parser.py',580),
  ('SEM_ADD_NOT_EQUALS_TO -> <empty>','SEM_ADD_NOT_EQUALS_TO',0,'p_sem_add_not_equals_to','parser.py',588),
  ('SEM_ADD_AND -> <empty>','SEM_ADD_AND',0,'p_sem_add_and','parser.py',596),
  ('SEM_ADD_OR -> <empty>','SEM_ADD_OR',0,'p_sem_add_or','parser.py',604),
  ('SEM_ADD_GOTOF -> <empty>','SEM_ADD_GOTOF',0,'p_sem_add_gotof','parser.py',614),
  ('SEM_FILL_GOTO_ANYKIND -> <empty>','SEM_FILL_GOTO_ANYKIND',0,'p_sem_fill_goto_anykind','parser.py',633),
  ('SEM_FILL_MAIN_GOTO -> <empty>','SEM_FILL_MAIN_GOTO',0,'p_sem_fill_main_goto','parser.py',647),
  ('SEM_ADD_GOTO_SIMPLE -> <empty>','SEM_ADD_GOTO_SIMPLE',0,'p_sem_add_goto_simple','parser.py',665),
  ('SEM_ADD_COND_INDEX -> <empty>','SEM_ADD_COND_INDEX',0,'p_sem_add_cond_index','parser.py',683),
  ('SEM_FILL_GOTO_COND_INDEX -> <empty>','SEM_FILL_GOTO_COND_INDEX',0,'p_sem_fill_goto_cond_index','parser.py',695),
  ('SEM_ADD_GOTOV -> <empty>','SEM_ADD_GOTOV',0,'p_sem_add_gotov','parser.py',710),
  ('SEM_ADD_GOTO_MAIN -> <empty>','SEM_ADD_GOTO_MAIN',0,'p_sem_add_goto_main','parser.py',729),
  ('SEM_ENDFUNC -> <empty>','SEM_ENDFUNC',0,'p_sem_endfunc','parser.py',742),
  ('SEM_VERIFY_FUNC_CALL -> id','SEM_VERIFY_FUNC_CALL',1,'p_sem_verify_func_call','parser.py',764),
  ('SEM_VERIFY_PARAM -> <empty>','SEM_VERIFY_PARAM',0,'p_sem_verify_param','parser.py',784),
  ('SEM_RESET_PARAM_COUNT -> <empty>','SEM_RESET_PARAM_COUNT',0,'p_sem_reset_param_count','parser.py',810),
  ('SEM_ADD_GOSUB -> <empty>','SEM_ADD_GOSUB',0,'p_sem_add_gosub','parser.py',818),
  ('SEM_VERIFY_RETURN_FUNC -> <empty>','SEM_VERIFY_RETURN_FUNC',0,'p_sem_verify_return_func','parser.py',839),
  ('SEM_MUST_BE_VOID_CALL -> <empty>','SEM_MUST_BE_VOID_CALL',0,'p_sem_must_be_void_call','parser.py',863),
  ('SEM_ADD_PRINT -> <empty>','SEM_ADD_PRINT',0,'p_sem_add_print','parser.py',871),
  ('SEM_ADD_PRINT_CTE_S -> cte_s','SEM_ADD_PRINT_CTE_S',1,'p_sem_add_print_cte_s','parser.py',887),
  ('SEM_ADD_READ -> id','SEM_ADD_READ',1,'p_sem_add_read','parser.py',906),
  ('SEM_PENDING_EXPA_OP -> <empty>','SEM_PENDING_EXPA_OP',0,'p_sem_pending_expa_op','parser.py',936),
  ('SEM_PENDING_TERMINO_OP -> <empty>','SEM_PENDING_TERMINO_OP',0,'p_sem_pending_termino_op','parser.py',964),
  ('SEM_PENDING_ASSIGNATION_OP -> <empty>','SEM_PENDING_ASSIGNATION_OP',0,'p_sem_pending_assignation_op','parser.py',993),
  ('SEM_PENDING_REL_OP -> <empty>','SEM_PENDING_REL_OP',0,'p_sem_pending_rel_op','parser.py',1015),
  ('SEM_PENDING_LOGIC_OP -> <empty>','SEM_PENDING_LOGIC_OP',0,'p_sem_pending_logic_op','parser.py',1045),
]
