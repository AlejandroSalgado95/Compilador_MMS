
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "leftandorleft><equalsnot_equalsleftminus+left*/and char circle clear color cte_c cte_f cte_i cte_s do else equals float for id if int main minus module not_equals or pendown penup point program read return size then to var void while write\n     PROGRAMA : program id ';' PROGRAMA_OPTS PRINCIPAL \n               | program id ';' PRINCIPAL \n    \n    PROGRAMA_OPTS :  DEC_V FUNCS\n                    | DEC_V \n                    | FUNCS\n    \n    PRINCIPAL : main '(' ')' BLOQUE\n    \n    DEC_V : DEC_V var  TIPO_SIMPLE ':' LISTA_VAR ';' \n            | var TIPO_SIMPLE ':' LISTA_VAR ';'\n    \n    LISTA_VAR : LISTA_VAR ',' VARIABLE_FIX\n               | VARIABLE_FIX\n    \n    TIPO_SIMPLE : int \n                 | float \n                 | char\n    \n    FUNCS :  FUNCS FUNC_TYPES module id '(' ')' BLOQUE\n           | FUNCS FUNC_TYPES module id '(' PARAMS ')' BLOQUE\n           | FUNCS FUNC_TYPES module id '(' PARAMS ')' DEC_V BLOQUE \n           | FUNCS FUNC_TYPES module id '(' ')' DEC_V BLOQUE\n           | FUNC_TYPES module id '(' ')' BLOQUE\n           | FUNC_TYPES module id '(' PARAMS ')' BLOQUE\n           | FUNC_TYPES module id '(' PARAMS ')' DEC_V BLOQUE\n           | FUNC_TYPES module id '(' ')' DEC_V BLOQUE\n\n    \n    FUNC_TYPES : TIPO_SIMPLE \n                 | void\n    \n    PARAMS : PARAMS ',' TIPO_SIMPLE id \n            | TIPO_SIMPLE id\n    \n    VARIABLE_FIX : id '[' cte_i ']' \n                  | id\n    \n    VARIABLE : id '[' EXPRESION ']' \n              | id\n    \n    BLOQUE : '{' LOOP_ESTATUTO return EXPRESION ';' '}' \n              | '{' LOOP_ESTATUTO '}' \n              | '{' return EXPRESION ';' '}' \n              | '{' '}'\n    \n    LOOP_ESTATUTO : LOOP_ESTATUTO ESTATUTO \n                    | ESTATUTO\n    \n    EXPRESION :  EXPRESION and EXP_R\n                | EXPRESION or EXP_R\n                | EXP_R\n    \n    EXP_R :  EXP_A '>' EXP_A \n            | EXP_A '<' EXP_A \n            | EXP_A equals EXP_A  \n            | EXP_A not_equals EXP_A \n            | EXP_A\n    \n    EXP_A :  EXP_A '+' TERMINO \n            | EXP_A minus TERMINO \n            | TERMINO\n    \n    TERMINO : TERMINO '*' FACTOR \n             | TERMINO '/' FACTOR \n             | FACTOR\n    \n    ESTATUTO : ASIGNACION ';' \n              | CONDICION \n              | WHILE \n              | FOR \n              | LLAMADA ';' \n              | LECTURA ';'  \n              | ESCRITURA ';' \n              | LLAMADA_BI ';'\n    \n    FACTOR : LLAMADA \n            | CTE  \n            | VARIABLE \n            | '(' EXPRESION ')' \n    \n    CTE : cte_i \n         | cte_f \n         | cte_c\n    \n    LLAMADA : id '(' LLAMADA_OPTS ')' \n             | id '(' ')'\n    \n    LLAMADA_OPTS : LLAMADA_OPTS ',' EXPRESION \n                 | EXPRESION \n    \n    ASIGNACION : VARIABLE '=' EXPRESION\n    \n    CONDICION : if '(' EXPRESION ')' then BLOQUE \n               | if '(' EXPRESION ')' then BLOQUE else BLOQUE\n    \n    WHILE : while '(' EXPRESION ')' do BLOQUE\n    \n    FOR : for ASIGNACION to EXPRESION do BLOQUE\n    \n    LECTURA : read '(' LECTURA_OPTS ')'\n    \n    LECTURA_OPTS : LECTURA_OPTS ',' id \n                  | id\n    \n    ESCRITURA : write '(' ESCRITURA_OPTS ')'\n    \n    ESCRITURA_OPTS :   ESCRITURA_OPTS ',' cte_s\n                       | ESCRITURA_OPTS ',' EXPRESION \n                       | cte_s \n                       | EXPRESION\n    \n    LLAMADA_BI :   POINT \n                 | CIRCLE\n                 | PENUP\n                 | PENDOWN \n                 | COLOR \n                 | SIZE \n                 | CLEAR\n    \n    CLEAR : clear '(' ')'\n    \n    POINT : point '(' EXPRESION ',' EXPRESION ')'\n    \n    CIRCLE : circle '(' EXPRESION ')' \n    \n    PENUP : penup '(' ')'\n    \n    PENDOWN : pendown '(' ')'\n    \n    COLOR : color '(' cte_s ')' \n    \n    SIZE : size '(' EXPRESION ')' \n    "
    
_lr_action_items = {'program':([0,],[2,]),'$end':([1,6,17,31,41,82,169,198,],[0,-2,-1,-6,-33,-31,-32,-30,]),'id':([2,14,15,16,23,25,27,29,32,39,40,41,42,44,45,46,54,73,77,81,82,83,92,96,97,98,99,100,101,102,103,106,107,108,109,110,111,115,129,130,131,132,133,134,135,136,137,138,143,164,169,185,188,190,191,198,207,208,209,212,],[3,-11,-12,-13,28,30,35,35,55,55,55,-33,-35,-51,-52,-53,105,35,123,55,-31,-34,55,-50,-54,-55,-56,-57,55,55,55,55,55,149,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,196,-32,55,203,55,55,-30,-70,-72,-73,-71,]),';':([3,33,34,35,37,43,47,48,49,50,55,58,59,60,61,62,63,64,84,85,86,87,88,89,90,91,93,94,95,117,127,140,145,155,156,159,160,170,171,172,173,174,175,176,177,178,179,180,184,186,187,189,192,193,194,210,],[4,72,-10,-27,78,96,97,98,99,100,-29,-82,-83,-84,-85,-86,-87,-88,128,-38,-43,-46,-49,-58,-59,-60,-62,-63,-64,-9,168,-69,-66,-92,-93,-89,-26,-36,-37,-39,-40,-41,-42,-44,-45,-47,-48,-61,-65,-28,-74,-77,-91,-94,-95,-90,]),'main':([4,5,7,8,18,41,72,78,82,119,124,161,162,165,166,169,195,197,198,],[9,9,-4,-5,-3,-33,-8,-7,-31,-18,-14,-21,-19,-17,-15,-32,-20,-16,-30,]),'var':([4,7,72,75,78,79,120,121,125,126,163,167,],[10,19,-8,10,-7,10,19,10,19,10,19,19,]),'void':([4,7,8,18,41,72,78,82,119,124,161,162,165,166,169,195,197,198,],[13,13,13,13,-33,-8,-7,-31,-18,-14,-21,-19,-17,-15,-32,-20,-16,-30,]),'int':([4,7,8,10,18,19,36,38,41,72,78,82,119,122,124,161,162,165,166,169,195,197,198,],[14,14,14,14,14,14,14,14,-33,-8,-7,-31,-18,14,-14,-21,-19,-17,-15,-32,-20,-16,-30,]),'float':([4,7,8,10,18,19,36,38,41,72,78,82,119,122,124,161,162,165,166,169,195,197,198,],[15,15,15,15,15,15,15,15,-33,-8,-7,-31,-18,15,-14,-21,-19,-17,-15,-32,-20,-16,-30,]),'char':([4,7,8,10,18,19,36,38,41,72,78,82,119,122,124,161,162,165,166,169,195,197,198,],[16,16,16,16,16,16,16,16,-33,-8,-7,-31,-18,16,-14,-21,-19,-17,-15,-32,-20,-16,-30,]),'(':([9,28,30,40,52,53,55,56,57,65,66,67,68,69,70,71,81,92,101,102,103,106,107,109,110,111,115,129,130,131,132,133,134,135,136,137,138,143,185,190,191,],[21,36,38,92,102,103,106,108,109,110,111,112,113,114,115,116,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'module':([11,12,13,14,15,16,20,],[-22,23,-23,-11,-12,-13,25,]),':':([14,15,16,22,24,],[-11,-12,-13,27,29,]),')':([21,36,38,55,76,80,85,86,87,88,89,90,91,93,94,95,106,112,113,116,123,139,141,142,144,145,146,148,149,150,151,152,154,157,158,170,171,172,173,174,175,176,177,178,179,180,184,186,196,202,203,204,205,206,],[26,75,79,-29,121,126,-38,-43,-46,-49,-58,-59,-60,-62,-63,-64,145,155,156,159,-25,180,181,182,184,-66,-68,187,-76,189,-80,-81,192,193,194,-36,-37,-39,-40,-41,-42,-44,-45,-47,-48,-61,-65,-28,-24,-67,-75,-78,-79,210,]),'{':([26,72,75,78,79,120,121,125,126,163,167,199,200,201,211,],[32,-8,32,-7,32,32,32,32,32,32,32,32,32,32,32,]),'return':([32,39,41,42,44,45,46,82,83,96,97,98,99,100,169,198,207,208,209,212,],[40,81,-33,-35,-51,-52,-53,-31,-34,-50,-54,-55,-56,-57,-32,-30,-70,-72,-73,-71,]),'}':([32,39,41,42,44,45,46,82,83,96,97,98,99,100,128,168,169,198,207,208,209,212,],[41,82,-33,-35,-51,-52,-53,-31,-34,-50,-54,-55,-56,-57,169,198,-32,-30,-70,-72,-73,-71,]),'if':([32,39,41,42,44,45,46,82,83,96,97,98,99,100,169,198,207,208,209,212,],[52,52,-33,-35,-51,-52,-53,-31,-34,-50,-54,-55,-56,-57,-32,-30,-70,-72,-73,-71,]),'while':([32,39,41,42,44,45,46,82,83,96,97,98,99,100,169,198,207,208,209,212,],[53,53,-33,-35,-51,-52,-53,-31,-34,-50,-54,-55,-56,-57,-32,-30,-70,-72,-73,-71,]),'for':([32,39,41,42,44,45,46,82,83,96,97,98,99,100,169,198,207,208,209,212,],[54,54,-33,-35,-51,-52,-53,-31,-34,-50,-54,-55,-56,-57,-32,-30,-70,-72,-73,-71,]),'read':([32,39,41,42,44,45,46,82,83,96,97,98,99,100,169,198,207,208,209,212,],[56,56,-33,-35,-51,-52,-53,-31,-34,-50,-54,-55,-56,-57,-32,-30,-70,-72,-73,-71,]),'write':([32,39,41,42,44,45,46,82,83,96,97,98,99,100,169,198,207,208,209,212,],[57,57,-33,-35,-51,-52,-53,-31,-34,-50,-54,-55,-56,-57,-32,-30,-70,-72,-73,-71,]),'point':([32,39,41,42,44,45,46,82,83,96,97,98,99,100,169,198,207,208,209,212,],[65,65,-33,-35,-51,-52,-53,-31,-34,-50,-54,-55,-56,-57,-32,-30,-70,-72,-73,-71,]),'circle':([32,39,41,42,44,45,46,82,83,96,97,98,99,100,169,198,207,208,209,212,],[66,66,-33,-35,-51,-52,-53,-31,-34,-50,-54,-55,-56,-57,-32,-30,-70,-72,-73,-71,]),'penup':([32,39,41,42,44,45,46,82,83,96,97,98,99,100,169,198,207,208,209,212,],[67,67,-33,-35,-51,-52,-53,-31,-34,-50,-54,-55,-56,-57,-32,-30,-70,-72,-73,-71,]),'pendown':([32,39,41,42,44,45,46,82,83,96,97,98,99,100,169,198,207,208,209,212,],[68,68,-33,-35,-51,-52,-53,-31,-34,-50,-54,-55,-56,-57,-32,-30,-70,-72,-73,-71,]),'color':([32,39,41,42,44,45,46,82,83,96,97,98,99,100,169,198,207,208,209,212,],[69,69,-33,-35,-51,-52,-53,-31,-34,-50,-54,-55,-56,-57,-32,-30,-70,-72,-73,-71,]),'size':([32,39,41,42,44,45,46,82,83,96,97,98,99,100,169,198,207,208,209,212,],[70,70,-33,-35,-51,-52,-53,-31,-34,-50,-54,-55,-56,-57,-32,-30,-70,-72,-73,-71,]),'clear':([32,39,41,42,44,45,46,82,83,96,97,98,99,100,169,198,207,208,209,212,],[71,71,-33,-35,-51,-52,-53,-31,-34,-50,-54,-55,-56,-57,-32,-30,-70,-72,-73,-71,]),',':([33,34,35,37,55,76,80,85,86,87,88,89,90,91,93,94,95,117,123,144,145,146,148,149,150,151,152,153,160,170,171,172,173,174,175,176,177,178,179,180,184,186,196,202,203,204,205,],[73,-10,-27,73,-29,122,122,-38,-43,-46,-49,-58,-59,-60,-62,-63,-64,-9,-25,185,-66,-68,188,-76,190,-80,-81,191,-26,-36,-37,-39,-40,-41,-42,-44,-45,-47,-48,-61,-65,-28,-24,-67,-75,-78,-79,]),'[':([35,55,105,],[74,107,107,]),'cte_i':([40,74,81,92,101,102,103,106,107,109,110,111,115,129,130,131,132,133,134,135,136,137,138,143,185,190,191,],[93,118,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'cte_f':([40,81,92,101,102,103,106,107,109,110,111,115,129,130,131,132,133,134,135,136,137,138,143,185,190,191,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'cte_c':([40,81,92,101,102,103,106,107,109,110,111,115,129,130,131,132,133,134,135,136,137,138,143,185,190,191,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'else':([41,82,169,198,207,],[-33,-31,-32,-30,211,]),'=':([51,55,105,186,],[101,-29,-29,-28,]),'*':([55,87,88,89,90,91,93,94,95,145,176,177,178,179,180,184,186,],[-29,137,-49,-58,-59,-60,-62,-63,-64,-66,137,137,-47,-48,-61,-65,-28,]),'/':([55,87,88,89,90,91,93,94,95,145,176,177,178,179,180,184,186,],[-29,138,-49,-58,-59,-60,-62,-63,-64,-66,138,138,-47,-48,-61,-65,-28,]),'>':([55,86,87,88,89,90,91,93,94,95,145,176,177,178,179,180,184,186,],[-29,131,-46,-49,-58,-59,-60,-62,-63,-64,-66,-44,-45,-47,-48,-61,-65,-28,]),'<':([55,86,87,88,89,90,91,93,94,95,145,176,177,178,179,180,184,186,],[-29,132,-46,-49,-58,-59,-60,-62,-63,-64,-66,-44,-45,-47,-48,-61,-65,-28,]),'equals':([55,86,87,88,89,90,91,93,94,95,145,176,177,178,179,180,184,186,],[-29,133,-46,-49,-58,-59,-60,-62,-63,-64,-66,-44,-45,-47,-48,-61,-65,-28,]),'not_equals':([55,86,87,88,89,90,91,93,94,95,145,176,177,178,179,180,184,186,],[-29,134,-46,-49,-58,-59,-60,-62,-63,-64,-66,-44,-45,-47,-48,-61,-65,-28,]),'+':([55,86,87,88,89,90,91,93,94,95,145,172,173,174,175,176,177,178,179,180,184,186,],[-29,135,-46,-49,-58,-59,-60,-62,-63,-64,-66,135,135,135,135,-44,-45,-47,-48,-61,-65,-28,]),'minus':([55,86,87,88,89,90,91,93,94,95,145,172,173,174,175,176,177,178,179,180,184,186,],[-29,136,-46,-49,-58,-59,-60,-62,-63,-64,-66,136,136,136,136,-44,-45,-47,-48,-61,-65,-28,]),'and':([55,84,85,86,87,88,89,90,91,93,94,95,127,139,140,141,142,145,146,147,152,153,154,158,170,171,172,173,174,175,176,177,178,179,180,183,184,186,202,205,206,],[-29,129,-38,-43,-46,-49,-58,-59,-60,-62,-63,-64,129,129,129,129,129,-66,129,129,129,129,129,129,-36,-37,-39,-40,-41,-42,-44,-45,-47,-48,-61,129,-65,-28,129,129,129,]),'or':([55,84,85,86,87,88,89,90,91,93,94,95,127,139,140,141,142,145,146,147,152,153,154,158,170,171,172,173,174,175,176,177,178,179,180,183,184,186,202,205,206,],[-29,130,-38,-43,-46,-49,-58,-59,-60,-62,-63,-64,130,130,130,130,130,-66,130,130,130,130,130,130,-36,-37,-39,-40,-41,-42,-44,-45,-47,-48,-61,130,-65,-28,130,130,130,]),'to':([55,85,86,87,88,89,90,91,93,94,95,104,140,145,170,171,172,173,174,175,176,177,178,179,180,184,186,],[-29,-38,-43,-46,-49,-58,-59,-60,-62,-63,-64,143,-69,-66,-36,-37,-39,-40,-41,-42,-44,-45,-47,-48,-61,-65,-28,]),']':([55,85,86,87,88,89,90,91,93,94,95,118,145,147,170,171,172,173,174,175,176,177,178,179,180,184,186,],[-29,-38,-43,-46,-49,-58,-59,-60,-62,-63,-64,160,-66,186,-36,-37,-39,-40,-41,-42,-44,-45,-47,-48,-61,-65,-28,]),'do':([55,85,86,87,88,89,90,91,93,94,95,145,170,171,172,173,174,175,176,177,178,179,180,182,183,184,186,],[-29,-38,-43,-46,-49,-58,-59,-60,-62,-63,-64,-66,-36,-37,-39,-40,-41,-42,-44,-45,-47,-48,-61,200,201,-65,-28,]),'cte_s':([109,114,190,],[151,157,204,]),'then':([181,],[199,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAMA':([0,],[1,]),'PROGRAMA_OPTS':([4,],[5,]),'PRINCIPAL':([4,5,],[6,17,]),'DEC_V':([4,75,79,121,126,],[7,120,125,163,167,]),'FUNCS':([4,7,],[8,18,]),'TIPO_SIMPLE':([4,7,8,10,18,19,36,38,122,],[11,11,11,22,11,24,77,77,164,]),'FUNC_TYPES':([4,7,8,18,],[12,12,20,20,]),'BLOQUE':([26,75,79,120,121,125,126,163,167,199,200,201,211,],[31,119,124,161,162,165,166,195,197,207,208,209,212,]),'LISTA_VAR':([27,29,],[33,37,]),'VARIABLE_FIX':([27,29,73,],[34,34,117,]),'LOOP_ESTATUTO':([32,],[39,]),'ESTATUTO':([32,39,],[42,83,]),'ASIGNACION':([32,39,54,],[43,43,104,]),'CONDICION':([32,39,],[44,44,]),'WHILE':([32,39,],[45,45,]),'FOR':([32,39,],[46,46,]),'LLAMADA':([32,39,40,81,92,101,102,103,106,107,109,110,111,115,129,130,131,132,133,134,135,136,137,138,143,185,190,191,],[47,47,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'LECTURA':([32,39,],[48,48,]),'ESCRITURA':([32,39,],[49,49,]),'LLAMADA_BI':([32,39,],[50,50,]),'VARIABLE':([32,39,40,54,81,92,101,102,103,106,107,109,110,111,115,129,130,131,132,133,134,135,136,137,138,143,185,190,191,],[51,51,91,51,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'POINT':([32,39,],[58,58,]),'CIRCLE':([32,39,],[59,59,]),'PENUP':([32,39,],[60,60,]),'PENDOWN':([32,39,],[61,61,]),'COLOR':([32,39,],[62,62,]),'SIZE':([32,39,],[63,63,]),'CLEAR':([32,39,],[64,64,]),'PARAMS':([36,38,],[76,80,]),'EXPRESION':([40,81,92,101,102,103,106,107,109,110,111,115,143,185,190,191,],[84,127,139,140,141,142,146,147,152,153,154,158,183,202,205,206,]),'EXP_R':([40,81,92,101,102,103,106,107,109,110,111,115,129,130,143,185,190,191,],[85,85,85,85,85,85,85,85,85,85,85,85,170,171,85,85,85,85,]),'EXP_A':([40,81,92,101,102,103,106,107,109,110,111,115,129,130,131,132,133,134,143,185,190,191,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,172,173,174,175,86,86,86,86,]),'TERMINO':([40,81,92,101,102,103,106,107,109,110,111,115,129,130,131,132,133,134,135,136,143,185,190,191,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,176,177,87,87,87,87,]),'FACTOR':([40,81,92,101,102,103,106,107,109,110,111,115,129,130,131,132,133,134,135,136,137,138,143,185,190,191,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,178,179,88,88,88,88,]),'CTE':([40,81,92,101,102,103,106,107,109,110,111,115,129,130,131,132,133,134,135,136,137,138,143,185,190,191,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'LLAMADA_OPTS':([106,],[144,]),'LECTURA_OPTS':([108,],[148,]),'ESCRITURA_OPTS':([109,],[150,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAMA","S'",1,None,None,None),
  ('PROGRAMA -> program id ; PROGRAMA_OPTS PRINCIPAL','PROGRAMA',5,'p_programa','parser.py',17),
  ('PROGRAMA -> program id ; PRINCIPAL','PROGRAMA',4,'p_programa','parser.py',18),
  ('PROGRAMA_OPTS -> DEC_V FUNCS','PROGRAMA_OPTS',2,'p_programa_opts','parser.py',25),
  ('PROGRAMA_OPTS -> DEC_V','PROGRAMA_OPTS',1,'p_programa_opts','parser.py',26),
  ('PROGRAMA_OPTS -> FUNCS','PROGRAMA_OPTS',1,'p_programa_opts','parser.py',27),
  ('PRINCIPAL -> main ( ) BLOQUE','PRINCIPAL',4,'p_principal','parser.py',33),
  ('DEC_V -> DEC_V var TIPO_SIMPLE : LISTA_VAR ;','DEC_V',6,'p_dec_v','parser.py',38),
  ('DEC_V -> var TIPO_SIMPLE : LISTA_VAR ;','DEC_V',5,'p_dec_v','parser.py',39),
  ('LISTA_VAR -> LISTA_VAR , VARIABLE_FIX','LISTA_VAR',3,'p_lista_var','parser.py',62),
  ('LISTA_VAR -> VARIABLE_FIX','LISTA_VAR',1,'p_lista_var','parser.py',63),
  ('TIPO_SIMPLE -> int','TIPO_SIMPLE',1,'p_tipo_simple','parser.py',68),
  ('TIPO_SIMPLE -> float','TIPO_SIMPLE',1,'p_tipo_simple','parser.py',69),
  ('TIPO_SIMPLE -> char','TIPO_SIMPLE',1,'p_tipo_simple','parser.py',70),
  ('FUNCS -> FUNCS FUNC_TYPES module id ( ) BLOQUE','FUNCS',7,'p_funcs','parser.py',76),
  ('FUNCS -> FUNCS FUNC_TYPES module id ( PARAMS ) BLOQUE','FUNCS',8,'p_funcs','parser.py',77),
  ('FUNCS -> FUNCS FUNC_TYPES module id ( PARAMS ) DEC_V BLOQUE','FUNCS',9,'p_funcs','parser.py',78),
  ('FUNCS -> FUNCS FUNC_TYPES module id ( ) DEC_V BLOQUE','FUNCS',8,'p_funcs','parser.py',79),
  ('FUNCS -> FUNC_TYPES module id ( ) BLOQUE','FUNCS',6,'p_funcs','parser.py',80),
  ('FUNCS -> FUNC_TYPES module id ( PARAMS ) BLOQUE','FUNCS',7,'p_funcs','parser.py',81),
  ('FUNCS -> FUNC_TYPES module id ( PARAMS ) DEC_V BLOQUE','FUNCS',8,'p_funcs','parser.py',82),
  ('FUNCS -> FUNC_TYPES module id ( ) DEC_V BLOQUE','FUNCS',7,'p_funcs','parser.py',83),
  ('FUNC_TYPES -> TIPO_SIMPLE','FUNC_TYPES',1,'p_func_types','parser.py',89),
  ('FUNC_TYPES -> void','FUNC_TYPES',1,'p_func_types','parser.py',90),
  ('PARAMS -> PARAMS , TIPO_SIMPLE id','PARAMS',4,'p_params','parser.py',96),
  ('PARAMS -> TIPO_SIMPLE id','PARAMS',2,'p_params','parser.py',97),
  ('VARIABLE_FIX -> id [ cte_i ]','VARIABLE_FIX',4,'p_variable_fix','parser.py',102),
  ('VARIABLE_FIX -> id','VARIABLE_FIX',1,'p_variable_fix','parser.py',103),
  ('VARIABLE -> id [ EXPRESION ]','VARIABLE',4,'p_variable','parser.py',108),
  ('VARIABLE -> id','VARIABLE',1,'p_variable','parser.py',109),
  ('BLOQUE -> { LOOP_ESTATUTO return EXPRESION ; }','BLOQUE',6,'p_bloque','parser.py',114),
  ('BLOQUE -> { LOOP_ESTATUTO }','BLOQUE',3,'p_bloque','parser.py',115),
  ('BLOQUE -> { return EXPRESION ; }','BLOQUE',5,'p_bloque','parser.py',116),
  ('BLOQUE -> { }','BLOQUE',2,'p_bloque','parser.py',117),
  ('LOOP_ESTATUTO -> LOOP_ESTATUTO ESTATUTO','LOOP_ESTATUTO',2,'p_loop_estatuto','parser.py',122),
  ('LOOP_ESTATUTO -> ESTATUTO','LOOP_ESTATUTO',1,'p_loop_estatuto','parser.py',123),
  ('EXPRESION -> EXPRESION and EXP_R','EXPRESION',3,'p_expresion','parser.py',128),
  ('EXPRESION -> EXPRESION or EXP_R','EXPRESION',3,'p_expresion','parser.py',129),
  ('EXPRESION -> EXP_R','EXPRESION',1,'p_expresion','parser.py',130),
  ('EXP_R -> EXP_A > EXP_A','EXP_R',3,'p_exp_r','parser.py',135),
  ('EXP_R -> EXP_A < EXP_A','EXP_R',3,'p_exp_r','parser.py',136),
  ('EXP_R -> EXP_A equals EXP_A','EXP_R',3,'p_exp_r','parser.py',137),
  ('EXP_R -> EXP_A not_equals EXP_A','EXP_R',3,'p_exp_r','parser.py',138),
  ('EXP_R -> EXP_A','EXP_R',1,'p_exp_r','parser.py',139),
  ('EXP_A -> EXP_A + TERMINO','EXP_A',3,'p_exp_a','parser.py',144),
  ('EXP_A -> EXP_A minus TERMINO','EXP_A',3,'p_exp_a','parser.py',145),
  ('EXP_A -> TERMINO','EXP_A',1,'p_exp_a','parser.py',146),
  ('TERMINO -> TERMINO * FACTOR','TERMINO',3,'p_termino','parser.py',151),
  ('TERMINO -> TERMINO / FACTOR','TERMINO',3,'p_termino','parser.py',152),
  ('TERMINO -> FACTOR','TERMINO',1,'p_termino','parser.py',153),
  ('ESTATUTO -> ASIGNACION ;','ESTATUTO',2,'p_estatuto','parser.py',158),
  ('ESTATUTO -> CONDICION','ESTATUTO',1,'p_estatuto','parser.py',159),
  ('ESTATUTO -> WHILE','ESTATUTO',1,'p_estatuto','parser.py',160),
  ('ESTATUTO -> FOR','ESTATUTO',1,'p_estatuto','parser.py',161),
  ('ESTATUTO -> LLAMADA ;','ESTATUTO',2,'p_estatuto','parser.py',162),
  ('ESTATUTO -> LECTURA ;','ESTATUTO',2,'p_estatuto','parser.py',163),
  ('ESTATUTO -> ESCRITURA ;','ESTATUTO',2,'p_estatuto','parser.py',164),
  ('ESTATUTO -> LLAMADA_BI ;','ESTATUTO',2,'p_estatuto','parser.py',165),
  ('FACTOR -> LLAMADA','FACTOR',1,'p_factor','parser.py',170),
  ('FACTOR -> CTE','FACTOR',1,'p_factor','parser.py',171),
  ('FACTOR -> VARIABLE','FACTOR',1,'p_factor','parser.py',172),
  ('FACTOR -> ( EXPRESION )','FACTOR',3,'p_factor','parser.py',173),
  ('CTE -> cte_i','CTE',1,'p_cte','parser.py',178),
  ('CTE -> cte_f','CTE',1,'p_cte','parser.py',179),
  ('CTE -> cte_c','CTE',1,'p_cte','parser.py',180),
  ('LLAMADA -> id ( LLAMADA_OPTS )','LLAMADA',4,'p_llamada','parser.py',185),
  ('LLAMADA -> id ( )','LLAMADA',3,'p_llamada','parser.py',186),
  ('LLAMADA_OPTS -> LLAMADA_OPTS , EXPRESION','LLAMADA_OPTS',3,'p_llamada_opts','parser.py',191),
  ('LLAMADA_OPTS -> EXPRESION','LLAMADA_OPTS',1,'p_llamada_opts','parser.py',192),
  ('ASIGNACION -> VARIABLE = EXPRESION','ASIGNACION',3,'p_asignacion','parser.py',197),
  ('CONDICION -> if ( EXPRESION ) then BLOQUE','CONDICION',6,'p_condicion','parser.py',202),
  ('CONDICION -> if ( EXPRESION ) then BLOQUE else BLOQUE','CONDICION',8,'p_condicion','parser.py',203),
  ('WHILE -> while ( EXPRESION ) do BLOQUE','WHILE',6,'p_while','parser.py',208),
  ('FOR -> for ASIGNACION to EXPRESION do BLOQUE','FOR',6,'p_for','parser.py',213),
  ('LECTURA -> read ( LECTURA_OPTS )','LECTURA',4,'p_lectura','parser.py',218),
  ('LECTURA_OPTS -> LECTURA_OPTS , id','LECTURA_OPTS',3,'p_lectura_opts','parser.py',223),
  ('LECTURA_OPTS -> id','LECTURA_OPTS',1,'p_lectura_opts','parser.py',224),
  ('ESCRITURA -> write ( ESCRITURA_OPTS )','ESCRITURA',4,'p_escritura','parser.py',229),
  ('ESCRITURA_OPTS -> ESCRITURA_OPTS , cte_s','ESCRITURA_OPTS',3,'p_escritura_opts','parser.py',234),
  ('ESCRITURA_OPTS -> ESCRITURA_OPTS , EXPRESION','ESCRITURA_OPTS',3,'p_escritura_opts','parser.py',235),
  ('ESCRITURA_OPTS -> cte_s','ESCRITURA_OPTS',1,'p_escritura_opts','parser.py',236),
  ('ESCRITURA_OPTS -> EXPRESION','ESCRITURA_OPTS',1,'p_escritura_opts','parser.py',237),
  ('LLAMADA_BI -> POINT','LLAMADA_BI',1,'p_llamada_bi','parser.py',242),
  ('LLAMADA_BI -> CIRCLE','LLAMADA_BI',1,'p_llamada_bi','parser.py',243),
  ('LLAMADA_BI -> PENUP','LLAMADA_BI',1,'p_llamada_bi','parser.py',244),
  ('LLAMADA_BI -> PENDOWN','LLAMADA_BI',1,'p_llamada_bi','parser.py',245),
  ('LLAMADA_BI -> COLOR','LLAMADA_BI',1,'p_llamada_bi','parser.py',246),
  ('LLAMADA_BI -> SIZE','LLAMADA_BI',1,'p_llamada_bi','parser.py',247),
  ('LLAMADA_BI -> CLEAR','LLAMADA_BI',1,'p_llamada_bi','parser.py',248),
  ('CLEAR -> clear ( )','CLEAR',3,'p_clear','parser.py',253),
  ('POINT -> point ( EXPRESION , EXPRESION )','POINT',6,'p_point','parser.py',258),
  ('CIRCLE -> circle ( EXPRESION )','CIRCLE',4,'p_circle','parser.py',263),
  ('PENUP -> penup ( )','PENUP',3,'p_penup','parser.py',268),
  ('PENDOWN -> pendown ( )','PENDOWN',3,'p_pendown','parser.py',273),
  ('COLOR -> color ( cte_s )','COLOR',4,'p_color','parser.py',278),
  ('SIZE -> size ( EXPRESION )','SIZE',4,'p_size','parser.py',283),
]
